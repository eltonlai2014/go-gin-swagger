openapi: 3.0.1
info:
  title: MXview One API
  description: >-
    A document of API for accessing data from MXview One <br/><br/>
    [API user guide](/apiGuide)
  version: 1.0.0
servers:
  - url: /
paths:
  /resources/icons/url/{url}:
    get:
      tags:
        - Resource
      summary: Get device icon
      description: TODO
      parameters:
        - name: url
          in: path
          description: icon url indicated in device objects
          required: true
          schema:
            type: string
            format: filename
      responses:
        "200":
          description: The data of the designated device icon
          content: {}
        "404":
          description: Cannot find the icon.
          content: {}
  /resources/icons/{url}:
    get:
      tags:
        - Resource
      summary: Get the icon of a site
      description: TODO
      parameters:
        - name: url
          in: path
          description: an icon url
          required: true
          schema:
            type: string
            format: filename
      responses:
        "200":
          description: A site's icon
          content: {}
        "404":
          description: Cannot find the icon.
          content: {}
  /resources/panel_images/url/{url}:
    get:
      tags:
        - Resource
      summary: Get the panel image of a device
      description: TODO
      parameters:
        - name: url
          in: path
          description: Device panel url described in the module documents
          required: true
          schema:
            type: string
            format: filename
      responses:
        "200":
          description: A device panel
          content: {}
        "404":
          description: Cannot find the panel.
          content: {}
  /resources/panel_descriptions/url/{url}:
    get:
      tags:
        - Resource
      summary: Get device panel description file
      description: TODO
      parameters:
        - name: url
          in: path
          description: Device panel description file path
          required: true
          schema:
            type: string
            format: filename
      responses:
        "200":
          description: Device Panel description file
          content: {}
        "404":
          description: Cannot find the panel.
          content: {}
  /login:
    post:
      tags:
        - Login
      summary: Login MXview One with a username and a password return the JWT token.
      description: TODO
      requestBody:
        description: The username and password of your account.
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: The username of your account
                password:
                  type: string
                  description: The password of your account
              example:
                username: admin
                password: moxa
          multipart/form-data:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: The username of your account
                password:
                  type: string
                  description: The password of your account
              example:
                username: admin
                password: moxa
        required: false
      responses:
        "200":
          description: >-
            A JWT token would be included in the response. You could put the
            token to the Authorization header in your request later. If the
            password does not conform to the policy, the response would contain
            a property: {policy: false}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/login-response"
        "401":
          description: The authorization token is invalid.
          content: {}
  /login/refresh:
    get:
      tags:
        - Login
      summary: Refresh a authentication token
      description: TODO
      parameters:
        - name: token
          in: header
          description: A valid JWT token
          required: true
          schema:
            type: string
      responses:
        "200":
          description: >-
            A JWT token would be included in the response. You could put the
            token to the Authorization header in your request later.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/login-response"
        "401":
          description: The authorization token is invalid.
          content: {}
  /login/messages:
    get:
      tags:
        - Login
      summary: Get login messages from a site
      description: Get successfully login message and failed login message from a site
      responses:
        "200":
          description: Login messages
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/login-messages"
        "422":
          description: Failed to get login messages
          content: {}
      security:
        - Bearer: []
  /api/logout:
    post:
      tags:
        - Login
      summary: Logout a user
      description: "Logout a user, the session would be released"
      responses:
        "200":
          description: The account is logged out
          content: {}
      security:
        - Bearer: []
  /login/verify_user:
    post:
      tags:
        - Login
      summary: Verify the user's username and password without generating a JWT token.
      description: Verify the user's username and password without generating a JWT token.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: The username of your account
                password:
                  type: string
                  description: The password of your account
              example:
                username: admin
                password: moxa
      responses:
        "200":
          description: The account is verified
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/verify_user_response"
      security:
        - Bearer: []
  /api/monitor/site/{siteId}/diskUsag':
    get:
      tags:
        - Monitoring
      summary: Get disk usage of the drive where %MXviewPro_Data% resides in
      description: this function returns disk usage of a site
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: A summary of a site's disk usage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/disk-usage"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  /api/licenses/site/{siteId}/status:
    get:
      tags:
        - Licenses
      summary: Get a summary of license status of a site.
      description: "Get current monitored node, max node count and license status of a site"
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: A summary of a site's license status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/license-status"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  /api/licenses/site/{siteId}/addons/status:
    get:
      tags:
        - Licenses
      summary: Get a summary of addon license status of a site.
      description: >-
        Get a summary of addon license status of a site.
        sites
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: A summary of each site's license status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/license-addon-status"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Licenses
      summary: Get a summary of addon license status of a site.
      description: >-
        Get a summary of addon license status of a site.
        sites
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: trial addon license enable
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/license-addon-enable"
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  /api/licenses/site/{siteId}/deactivatedLicenses:
    get:
      tags:
        - Licenses
      summary: Get all deactivated licenses from a site
      description: >-
        Get deactivated codes, max nodes, and deactivated times of deactivated
        licenses
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: An array of deactivated licenses
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deactivated-license"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  /api/licenses/site/{siteId}/legacy:
    get:
      tags:
        - Licenses
      summary: Get all legacy(2.x) licenses registered in a site
      description: Get license files and their information of a sites
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: An array of licenses
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/legacy-license"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  /api/licenses/site/{siteId}:
    get:
      tags:
        - Licenses
      summary: Get all licenses registered in a site
      description: Get license files and their information of a sites
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: An array of licenses
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/license"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    post:
      tags:
        - Licenses
      summary: Add a license to a site
      description: Add a license file to a site
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: license file
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/license-file-only"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/license-file-only"
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-error-licenses"
        "401":
          description: The authorization token is invalid.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    delete:
      tags:
        - Licenses
      summary: Delete a license from a site
      description: delete a license from a site
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: license file
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/license-file-only"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/license-file-only"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deactivation-code"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-error-licenses"
        "401":
          description: The authorization token is invalid.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  /api/licenses/site/{siteId}/usercode:
    get:
      tags:
        - Licenses
      summary: get a usercode
      description: get a one time user code from a server
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: a user code object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/usercode"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Licenses
      summary: set the MAC address the usercode is bound to
      description: Set a MAC address which will be used for generating usercode
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: mac address
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/mac-address-license"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/mac-address-license"
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  /api/licenses/site/{siteId}/networkAdapters:
    get:
      tags:
        - Licenses
      summary: get all network adapters of a site
      description: get the network adapter names and their MACs
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: a network adapter object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/network-adapters"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/licenses/site/{siteId}/trial":
    post:
      tags:
        - Licenses
      summary: start MXview One trial
      description: start MXview One trial
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: "OK, trial is started"
          content: {}
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  /api/models/definitions/siteId/{siteId}:
    get:
      tags:
        - Models
      summary: Get all model definitions from a site
      description: TODO
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: An array of model definitions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/model_definitions"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device definitions not found
          content: {}
        "422":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  /api/tokens/:
    get:
      tags:
        - ApiKeys
      summary: Get all API tokens
      description: Get all API tokens
      responses:
        "200":
          description: An array of API token objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api-tokens"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    post:
      tags:
        - ApiKeys
      summary: Create a new API token
      description: Create a new API token with a name
      requestBody:
        description: the name of token
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: the name of the API token
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: the name of the API token
        required: false
      responses:
        "200":
          description: An array of API token objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api-tokens"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/tokens/token/name/{name}":
    get:
      tags:
        - ApiKeys
      summary: Get an API token by name
      description: Get an API token by name
      parameters:
        - name: name
          in: path
          description: the name of the token
          required: true
          schema:
            type: string
      responses:
        "200":
          description: An array of API token objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api-tokens"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: API token not found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - ApiKeys
      summary: Renew or revoke an API token
      description: Renew or revoke an API token
      parameters:
        - name: name
          in: path
          description: the name of the token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                revoke:
                  type: boolean
                  description: >-
                    Set to true if users want to revoke the token, otherwise the
                    token would be renewed
          multipart/form-data:
            schema:
              type: object
              properties:
                revoke:
                  type: boolean
                  description: >-
                    Set to true if users want to revoke the token, otherwise the
                    token would be renewed
        required: false
      responses:
        "200":
          description: OK
          content: {}
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: API token not found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    delete:
      tags:
        - ApiKeys
      summary: Remove an API token by name
      description: Remove an API token by name
      parameters:
        - name: name
          in: path
          description: the name of the token
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The token is removed
          content: {}
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: API token not found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  /api/devices/:
    get:
      tags:
        - Devices
      summary: Get all device information from all sites
      description: TODO
      parameters:
        - name: ignore_ioPac
          in: query
          description: |
            An array of devices <br/>
            ignore_ioPac:
              * true: Filter out ioPac modules.
              * false/undefined: Disable filtering function.
          schema:
            type: boolean
            format: boolean
          example: true
      responses:
        "200":
          description: |
            An array of devices <br/>
            mxsec_flag:
              * 0: The device does not support the mxsec addon.
              * 1: The device has registered the mxsec.
              * 2: The device has not yet registered the mxsec.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-devices"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  /api/devices/site/{siteId}:
    get:
      tags:
        - Devices
      summary: Get all device information from one site
      description: TODO
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: An array of devices
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-devices"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    delete:
      tags:
        - Devices
      summary: Delete devices of a site
      description: TODO
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
        - name: ids
          in: query
          description: An array of Device IDs
          required: true
          style: form
          explode: false
          schema:
            type: array
            items:
              type: object
              format: integer
      responses:
        "200":
          description: All devices on the request are deleted
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/devices/ip/{ip}":
    get:
      tags:
        - Devices
      summary: Get device information by its IP address.
      description: This function returns devices with designated IP from all sites
      parameters:
        - name: ip
          in: path
          description: The IP Address of the device
          required: true
          schema:
            type: string
            format: IP address
      responses:
        "200":
          description: An array of devices
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-devices"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/devices/poe/site/{siteId}":
    get:
      tags:
        - Devices
      summary: Get device PoE status of a group
      description: TODO
      parameters:
        - name: group
          in: query
          description: The ID of a group
          required: true
          schema:
            type: integer
            format: integer
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: An array of devices and their PoE status
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: No PoE device found or the siteId is incorrect
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/devices/id/{id}/site/{siteId}":
    get:
      tags:
        - Devices
      summary: Get device information by its ID.
      description: TODO
      parameters:
        - name: id
          in: path
          description: The ID of a device
          required: true
          schema:
            type: integer
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Device information
          content: {}
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Devices
      summary: Modify a device by its ID
      description: TODO
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
        - name: id
          in: path
          description: The ID of a device
          required: true
          schema:
            type: integer
      requestBody:
        description: >-
          An object of device parameters. Parameters inside the device parameter
          object are optional.
        content:
          application/json:
            schema:
              type: object
              properties:
                auto_detect_model:
                  type: boolean
                  description: >-
                    Set to true to auto detect device model. Undefined or false
                    means assigning model by oid
                sysobjid:
                  type: string
                  description: Device sysobjid. Empty means ICMP device
                alias:
                  type: string
                  description: Device alias
                group:
                  type: integer
                  description: Group ID
                x:
                  type: integer
                  description: X-coordinate
                "y":
                  type: integer
                  description: Y-coordinate
                use_global_account:
                  type: boolean
                  description: >-
                    Set to true to use global account to access the device.
                    False or undefined to access the device by an independent
                    account
                username:
                  type: string
                  description: The username used for accessing the device
                password:
                  type: string
                  description: The password used for accessing the device
                snmp_version:
                  $ref: "#/components/schemas/snmp_version"
                snmpv3_security_level:
                  $ref: "#/components/schemas/snmpv3_security_level"
                snmpv3_authentication_type:
                  $ref: "#/components/schemas/snmpv3_authentication_type"
                snmpv3_privacy_protocol:
                  $ref: "#/components/schemas/snmpv3_privacy_protocol"
                read_community:
                  $ref: "#/components/schemas/read_community"
                write_community:
                  $ref: "#/components/schemas/write_community"
                snmp_username:
                  $ref: "#/components/schemas/snmp_username"
                snmp_password:
                  $ref: "#/components/schemas/snmp_password"
                snmpv3_encryption_key:
                  $ref: "#/components/schemas/snmpv3_encryption_key"
                icmp_polling_interval:
                  $ref: "#/components/schemas/icmp_polling_interval"
                snmp_polling_interval:
                  $ref: "#/components/schemas/snmp_polling_interval"
                icmp_unreachable_warning_threshold:
                  $ref: "#/components/schemas/icmp_unreachable_warning_threshold"
                snmp_unreachable_warning_threshold:
                  $ref: "#/components/schemas/snmp_unreachable_warning_threshold"
                polling_ip:
                  $ref: "#/components/schemas/polling_ip"
              description: Device Parameter Object
              example:
                model: EDS-G516E
                sysobjid: 1.3.6.1.4.1.8691.7.7
                alias: Example alias
          multipart/form-data:
            schema:
              type: object
              properties:
                auto_detect_model:
                  type: boolean
                  description: >-
                    Set to true to auto detect device model. Undefined or false
                    means assigning model by oid
                sysobjid:
                  type: string
                  description: Device sysobjid. Empty means ICMP device
                alias:
                  type: string
                  description: Device alias
                group:
                  type: integer
                  description: Group ID
                x:
                  type: integer
                  description: X-coordinate
                "y":
                  type: integer
                  description: Y-coordinate
                use_global_account:
                  type: boolean
                  description: >-
                    Set to true to use global account to access the device.
                    False or undefined to access the device by an independent
                    account
                username:
                  type: string
                  description: The username used for accessing the device
                password:
                  type: string
                  description: The password used for accessing the device
                snmp_version:
                  $ref: "#/components/schemas/snmp_version"
                snmpv3_security_level:
                  $ref: "#/components/schemas/snmpv3_security_level"
                snmpv3_authentication_type:
                  $ref: "#/components/schemas/snmpv3_authentication_type"
                snmpv3_privacy_protocol:
                  $ref: "#/components/schemas/snmpv3_privacy_protocol"
                read_community:
                  $ref: "#/components/schemas/read_community"
                write_community:
                  $ref: "#/components/schemas/write_community"
                snmp_username:
                  $ref: "#/components/schemas/snmp_username"
                snmp_password:
                  $ref: "#/components/schemas/snmp_password"
                snmpv3_encryption_key:
                  $ref: "#/components/schemas/snmpv3_encryption_key"
                icmp_polling_interval:
                  $ref: "#/components/schemas/icmp_polling_interval"
                snmp_polling_interval:
                  $ref: "#/components/schemas/snmp_polling_interval"
                icmp_unreachable_warning_threshold:
                  $ref: "#/components/schemas/icmp_unreachable_warning_threshold"
                snmp_unreachable_warning_threshold:
                  $ref: "#/components/schemas/snmp_unreachable_warning_threshold"
                polling_ip:
                  $ref: "#/components/schemas/polling_ip"
              description: Device Parameter Object
              example:
                model: EDS-G516E
                sysobjid: 1.3.6.1.4.1.8691.7.7
                alias: Example alias
        required: true
      responses:
        "200":
          description: Device config modified
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Device is already existing.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/devices/ignored/site/{siteId}":
    get:
      tags:
        - Devices
      summary: Get ignored devices
      description: TODO
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: A list of ignored devices
          content: {}
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    delete:
      tags:
        - Devices
      summary: Move a device out from the ignored device list
      description: TODO
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: Device ID
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: Device ID
              description: Device ID
          multipart/form-data:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: Device ID
              description: Device ID
        required: true
      responses:
        "200":
          description: The device no longer ignored
          content: {}
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/devices/ip/{ip}/site/{siteId}":
    get:
      tags:
        - Devices
      summary: Get device information by its IP address.
      description: TODO
      parameters:
        - name: ip
          in: path
          description: The IP Address of the device
          required: true
          schema:
            type: string
            format: IP address
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: An array of devices
          content: {}
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Devices
      summary: Modify a device by its IP Address
      description: TODO
      parameters:
        - name: ip
          in: path
          description: The IP Address of the device
          required: true
          schema:
            type: string
            format: IP address
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: >-
          An object of device parameters. Parameters inside the device parameter
          object are optional.
        content:
          application/json:
            schema:
              type: object
              properties:
                auto_detect_model:
                  type: boolean
                  description: >-
                    Set to true to auto detect device model. Undefined or false
                    means assigning model by oid
                sysobjid:
                  type: string
                  description: Device sysobjid. Empty means ICMP device
                alias:
                  type: string
                  description: Device alias
                group:
                  type: integer
                  description: Group ID
                x:
                  type: integer
                  description: X-coordinate
                y:
                  type: integer
                  description: Y-coordinate
                use_global_account:
                  type: boolean
                  description: >-
                    Set to true to use global account to access the device.
                    False or undefined to access the device by an independent
                    account
                username:
                  type: string
                  description: The username used for accessing the device
                password:
                  type: string
                  description: The password used for accessing the device
                snmp_version:
                  $ref: "#/components/schemas/snmp_version"
                snmpv3_security_level:
                  $ref: "#/components/schemas/snmpv3_security_level"
                snmpv3_authentication_type:
                  $ref: "#/components/schemas/snmpv3_authentication_type"
                snmpv3_privacy_protocol:
                  $ref: "#/components/schemas/snmpv3_privacy_protocol"
                read_community:
                  $ref: "#/components/schemas/read_community"
                write_community:
                  $ref: "#/components/schemas/write_community"
                snmp_username:
                  $ref: "#/components/schemas/snmp_username"
                snmp_password:
                  $ref: "#/components/schemas/snmp_password"
                snmpv3_encryption_key:
                  $ref: "#/components/schemas/snmpv3_encryption_key"
                icmp_polling_interval:
                  $ref: "#/components/schemas/icmp_polling_interval"
                snmp_polling_interval:
                  $ref: "#/components/schemas/snmp_polling_interval"
                icmp_unreachable_warning_threshold:
                  $ref: "#/components/schemas/icmp_unreachable_warning_threshold"
                snmp_unreachable_warning_threshold:
                  $ref: "#/components/schemas/snmp_unreachable_warning_threshold"
                polling_ip:
                  $ref: "#/components/schemas/polling_ip"
              description: Device Parameter Object
              example:
                model: EDS-G516E
                sysobjid: 1.3.6.1.4.1.8691.7.7
                alias: Example alias
        required: true
      responses:
        "200":
          description: Device config modified
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Device is already existing.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    post:
      tags:
        - Devices
      summary: Add a device by its IP Address
      description: TODO
      parameters:
        - name: ip
          in: path
          description: The IP Address of the device
          required: true
          schema:
            type: string
            format: IP address
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: An object of device parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                group:
                  type: integer
                  description: The ID of group this devices would be added to
                addMode:
                  type: integer
                  description: The type of device adding mode
                sysobjid:
                  type: string
                  description: The sysobjid of the added device. Empty means auto detect
                username:
                  type: string
                  description: The username to login the device
                password:
                  type: string
                  description: The password to login the device
                snmp_version:
                  $ref: "#/components/schemas/snmp_version"
                snmpv3_security_level:
                  $ref: "#/components/schemas/snmpv3_security_level"
                snmpv3_authetication_type:
                  $ref: "#/components/schemas/snmpv3_authentication_type"
                read_community:
                  $ref: "#/components/schemas/read_community"
                write_community:
                  $ref: "#/components/schemas/write_community"
                snmp_username:
                  $ref: "#/components/schemas/snmp_username"
                snmp_password:
                  $ref: "#/components/schemas/snmp_password"
                snmpv3_privacy_protocol:
                  $ref: "#/components/schemas/snmpv3_privacy_protocol"
                snmpv3_encryption_key:
                  $ref: "#/components/schemas/snmpv3_encryption_key"
                x:
                  $ref: "#/components/schemas/x"
                y:
                  $ref: "#/components/schemas/y"
                model:
                  type: string
                  description: >-
                    The model name of the device. If auto_detect_model is true,
                    model must be an empty string or undefined
                auto_detect_model:
                  type: boolean
                  description: >-
                    Set to True to auto detect device model. model and sysobjid
                    must be empty strings or undefined if it is true
                add_to_baseline:
                  type: boolean
                  description: >-
                    Set to true to add detect device to 'trusted' device list.
              description: Device Parameter Object
              example:
                group: 0
                addMode: 0
                sysobjid: 1.3.6.1.4.1.8691.7.7
                username: admin
                password: moxa
                snmp_version: 1
                snmp_security_level: 1
                snmpv3_authentication_type: 1
                read_community: public
                write_community: private
                snmp_username: admin
                snmp_password: moxa
                snmpv3_privacy_protocol: 1
                snmpv3_encryption_key: "12345678"
                x: 100
                y: 100
                model: EDS-504A
                add_to_baseline: false
        required: true
      responses:
        "200":
          description: Device added
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Device is already existing.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    delete:
      tags:
        - Devices
      summary: Delete a device by its IP Address
      description: TODO
      parameters:
        - name: ip
          in: path
          description: The IP Address of the device
          required: true
          schema:
            type: string
            format: IP address
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Device deleted
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found
          content: {}
        "422":
          description: Failed to delete the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/devices/ip/{ip}/ipInterfaces/site/{siteId}":
    get:
      tags:
        - Devices
      summary: Get all the IP interfaces of a layer 3 device
      description: Get all the IP interfaces of a layer 3 device
      parameters:
        - name: ip
          in: path
          description: The IP of a device
          required: true
          schema:
            type: string
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: IP interfaces of a device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/device-ip-interfaces"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "422":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/devices/id/{id}/ipInterfaces/site/{siteId}":
    get:
      tags:
        - Devices
      summary: Get all the IP interfaces of a layer 3 device
      description: Get all the IP interfaces of a layer 3 device
      parameters:
        - name: id
          in: path
          description: The ID of a device
          required: true
          schema:
            type: integer
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: IP interfaces of a device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/device-ip-interfaces"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "422":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/devices/id/{id}/access/site/{siteId}":
    get:
      tags:
        - Devices
      summary: Get device access settings by its ID
      description: Get parameters which MXview One user for accessing devices
      parameters:
        - name: id
          in: path
          description: The ID of a device
          required: true
          schema:
            type: integer
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Device access information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/by-device-access-parameters"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/devices/ip/{ip}/access/site/{siteId}":
    get:
      tags:
        - Devices
      summary: Get device access settings by its IP
      description: Get parameters which MXview One user for accessing devices
      parameters:
        - name: ip
          in: path
          description: The IP Address of the device
          required: true
          schema:
            type: string
            format: IP address
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Device access information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/by-device-access-parameters"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/devices/ip/{ip}/refresh/site/{siteId}":
    put:
      tags:
        - Devices
      summary: Reload a device immediately by its IP Address
      description: TODO
      parameters:
        - name: ip
          in: path
          description: The IP Address of the device
          required: true
          schema:
            type: string
            format: IP address
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Device refreshed
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to refresh the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/devices/id/{id}/refresh/site/{siteId}":
    put:
      tags:
        - Devices
      summary: Reload a device immediately by its ID
      description: TODO
      parameters:
        - name: id
          in: path
          description: The ID of the device
          required: true
          schema:
            type: string
            format: integer
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Device refreshed
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to refresh the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/devices/site/{siteId}/refresh_ip:
    put:
      tags:
        - Devices
      summary: Reload specified devices immediately by its ips
      description: Reload specified devices immediately by its ips
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: The ids of the devices
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/refresh_ip_request"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/refresh_ip_request"
        required: true
      responses:
        "200":
          description: Device refreshed
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to refresh the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  "/api/devices/vlan/site/{siteId}":
    get:
      tags:
        - Devices
      summary: Get VLAN information of your network
      description: TODO
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: An array of device vlan description
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/network-vlan-information"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/devices/site/{siteId}/vlan/ids":
    get:
      tags:
        - Devices
      summary: Get all VLAN IDs in your network
      description: TODO
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: An array of vlan IDs
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/network-vlan-ids"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Site ID is incorrect
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/devices/vlan/site/{siteId}/id/{id}":
    get:
      tags:
        - Devices
      summary: Get VLAN information of your network
      description: TODO
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
        - name: id
          in: path
          description: The ID of VLAN
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: An array of device vlan description
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/network-vlan-information-of-id"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/devices/igmp/summary/site/{siteId}":
    get:
      tags:
        - Devices
      summary: Get IGMP information of your network
      description: TODO
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: All IGMP information of a site
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/network-igmp-information"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/devices/igmp/site/{siteId}":
    get:
      tags:
        - Devices
      summary: Get IGMP information of your network
      description: TODO
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
        - name: vid
          in: query
          description: A VLAN ID
          required: true
          schema:
            maximum: 4096
            minimum: 1
            type: integer
        - name: multicast_ip
          in: query
          description: A multicast IP address
          required: true
          schema:
            type: string
            format: ipv4 string
      responses:
        "200":
          description: All IGMP information of a vlan and multicast address
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/vlan-igmp-information"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/devices/ip/{ip}/interfaces/site/{siteId}":
    get:
      tags:
        - Devices
      summary: Get device port information.
      description: TODO
      parameters:
        - name: ip
          in: path
          description: The IP Address of the device
          required: true
          schema:
            type: string
            format: IP address
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: An array of device port description
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/device-port-interfaces"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/devices/ip/{ip}/interfaces/names/site/{siteId}":
    put:
      tags:
        - Devices
      summary: Update port names
      description: TODO
      parameters:
        - name: ip
          in: path
          description: The IP Address of the device
          required: true
          schema:
            type: string
            format: IP address
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: An array of port name objects.
        content:
          application/json:
            schema:
              type: array
              description: Port name objects
              example:
                - index: 1
                  name: Port 1 Name
                - index: 2
                  name: Port 2 Name
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: port name
                  index:
                    type: integer
                    description: port index
          multipart/form-data:
            schema:
              type: array
              description: Port name objects
              example:
                - index: 1
                  name: Port 1 Name
                - index: 2
                  name: Port 2 Name
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: port name
                  index:
                    type: integer
                    description: port index
        required: true
      responses:
        "200":
          description: ok
          content: {}
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/devices/ip/{ip}/interfaces/enable/site/{siteId}":
    put:
      tags:
        - Devices
      summary: Update port names
      description: TODO
      parameters:
        - name: ip
          in: path
          description: The IP Address of the device
          required: true
          schema:
            type: string
            format: IP address
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: An array of port enable objects.
        content:
          application/json:
            schema:
              type: array
              description: Port enable objects
              example:
                - index: 1
                  enable: true
                - index: 2
                  enable: false
              items:
                type: object
                properties:
                  enable:
                    type: boolean
                    description: true to enable this port; false otherwise
                  index:
                    type: integer
                    description: port index
          multipart/form-data:
            schema:
              type: array
              description: Port enable objects
              example:
                - index: 1
                  enable: true
                - index: 2
                  enable: false
              items:
                type: object
                properties:
                  enable:
                    type: boolean
                    description: true to enable this port; false otherwise
                  index:
                    type: integer
                    description: port index
        required: true
      responses:
        "200":
          description: ok
          content: {}
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/devices/group/{group}/site/{siteId}":
    get:
      tags:
        - Devices
      summary: Get all devices of a group.
      description: TODO
      parameters:
        - name: group
          in: path
          description: A group ID
          required: true
          schema:
            type: integer
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: An array of devices
          content: {}
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    post:
      tags:
        - Devices
      summary: Move devices to a group
      description: TODO
      parameters:
        - name: group
          in: path
          description: A group ID
          required: true
          schema:
            type: integer
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: An array of devices
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/devices"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/devices"
        required: false
      responses:
        "200":
          description: OK
          content: {}
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/devices/ip/{ip}/locate/site/{siteId}":
    put:
      tags:
        - Devices
      summary: Trigger device locator
      description: This method makes devices LED to blink for 60 seconds
      parameters:
        - name: ip
          in: path
          description: The IP Address of the device
          required: true
          schema:
            type: string
            format: IP address
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: OK
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: >-
            Failed to trigger device locator. Possible reasons are, 1: SNMP
            settings is incorrect. 2: The device does not support this function.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    delete:
      tags:
        - Devices
      summary: Stop device locator
      description: This method makes devices LED to stop blinking
      parameters:
        - name: ip
          in: path
          description: The IP Address of the device
          required: true
          schema:
            type: string
            format: IP address
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: OK
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: >-
            Failed to stop device locator. Possible reasons are, 1: SNMP
            settings is incorrect. 2: The device does not support this function.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/devices/ip/{ip}/ipconfig/site/{siteId}":
    get:
      tags:
        - Devices
      summary: Get device network settings
      description: TODO
      parameters:
        - name: ip
          in: path
          description: The IP Address of the device
          required: true
          schema:
            type: string
            format: IP address
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: "Device network settings including IP, netmask, gateway and dns"
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to get device network settings
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Devices
      summary: Change device network settings
      description: TODO
      parameters:
        - name: ip
          in: path
          description: The IP Address of the device
          required: true
          schema:
            type: string
            format: IP address
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: An object of device network parameters
        content:
          application/json:
            schema:
              required:
                - password
                - username
              type: object
              properties:
                username:
                  type: string
                  description: the account name of the device
                password:
                  type: string
                  description: the account password of the device
                ip:
                  type: string
                  description: A new IPv4 address for the device. Optional
                netmask:
                  type: string
                  description: An IPv4 address. Optional
                gateway:
                  type: string
                  description: An IPv4 address. Optional
                dns1:
                  type: string
                  description: An IPv4 address. Optional
                dns2:
                  type: string
                  description: An IPv4 address. Optional
              description: Device Parameter Object
              example:
                username: admin
                password: moxa
                ip: 192.168.127.253
                netmask: 255.255.255.0
                gateway: 192.168.127.1
                dns1: 192.168.127.2
                dns2: 192.168.127.3
          multipart/form-data:
            schema:
              required:
                - password
                - username
              type: object
              properties:
                username:
                  type: string
                  description: the account name of the device
                password:
                  type: string
                  description: the account password of the device
                ip:
                  type: string
                  description: A new IPv4 address for the device. Optional
                netmask:
                  type: string
                  description: An IPv4 address. Optional
                gateway:
                  type: string
                  description: An IPv4 address. Optional
                dns1:
                  type: string
                  description: An IPv4 address. Optional
                dns2:
                  type: string
                  description: An IPv4 address. Optional
              description: Device Parameter Object
              example:
                username: admin
                password: moxa
                ip: 192.168.127.253
                netmask: 255.255.255.0
                gateway: 192.168.127.1
                dns1: 192.168.127.2
                dns2: 192.168.127.3
        required: true
      responses:
        "200":
          description: >-
            Device network settings changed. Note that you have to access the
            device by its new IP address if you change its IP.
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to update device network settings.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/devices/ip/{ip}/config/site/{siteId}":
    get:
      tags:
        - Devices
      summary: Export device config
      description: TODO
      parameters:
        - name: ip
          in: path
          description: The IP Address of the device
          required: true
          schema:
            type: string
            format: IP address
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
        - name: username
          in: query
          description: the account name of the device
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: the account password of the device
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Config file of the device
          content: {}
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: the username or password is incorrect.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Devices
      summary: Import device config
      description: TODO
      parameters:
        - name: ip
          in: path
          description: The IP Address of the device
          required: true
          schema:
            type: string
            format: IP address
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data
                - password
                - username
              properties:
                username:
                  type: string
                  description: the account name of the device
                password:
                  type: string
                  description: the account password of the device
                data:
                  type: string
                  description: config file
                  format: binary
          multipart/form-data:
            schema:
              required:
                - data
                - password
                - username
              properties:
                username:
                  type: string
                  description: the account name of the device
                password:
                  type: string
                  description: the account password of the device
                data:
                  type: string
                  description: config file
                  format: binary
        required: true
      responses:
        "200":
          description: Config imported
          content: {}
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: the username or password is incorrect.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/devices/securityLevels/site/{siteId}":
    get:
      tags:
        - Devices
      summary: Get security levels of devices in a site
      description: TODO
      parameters:
        - name: ips
          in: query
          description: An array of IP addresses
          required: true
          style: form
          explode: false
          schema:
            type: array
            items:
              type: object
              format: IP address
        - name: profile_mode
          in: query
          description: |
            profile_mode:
              * 0 - custom profile
              * 1 - Default security levels
          required: true
          schema:
            type: integer
            enum:
              - 0
              - 1
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: System information of a device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/device-security-status"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/devices/ip/{ip}/systemInformation/site/{siteId}":
    get:
      tags:
        - Devices
      summary: Get System Information in SNMP mib2
      description: TODO
      parameters:
        - name: ip
          in: path
          description: The IP Address of the device
          required: true
          schema:
            type: string
            format: IP address
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: System information of a device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/device-snmp-system-information-get"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Devices
      summary: Update System Information in SNMP Mib2
      description: TODO
      parameters:
        - name: ip
          in: path
          description: The IP Address of the device
          required: true
          schema:
            type: string
            format: IP address
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: snmp system information
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: device ID
                sysName:
                  type: string
                  description: the sysname of a device
                sysContact:
                  type: string
                  description: the sysContact of a device
                sysLocation:
                  type: string
                  description: the sysLocation of a device
              description: snmp system information
              example:
                id: 1
                sysName: example sysName
                sysContact: example sysContact
                sysLocation: example sysLocation
          multipart/form-data:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: device ID
                sysName:
                  type: string
                  description: the sysname of a device
                sysContact:
                  type: string
                  description: the sysContact of a device
                sysLocation:
                  type: string
                  description: the sysLocation of a device
              description: snmp system information
              example:
                id: 1
                sysName: example sysName
                sysContact: example sysContact
                sysLocation: example sysLocation
        required: true
      responses:
        "200":
          description: System information is updated
          content: {}
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: the username or password is incorrect.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/devices/trapServers/site/{siteId}":
    put:
      tags:
        - Devices
      summary: Update Trap server settings of all devices of a site
      description: TODO
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: Trap parameter object
        content:
          application/json:
            schema:
              type: object
              properties:
                ip:
                  type: string
                  description: The IP address of a trap server. Could be empty.
                community:
                  type: string
                  description: The community string of a trap server. Could be empty
              description: snmp system information
              example:
                ip: 192.168.127.254
                community: public
          multipart/form-data:
            schema:
              type: object
              properties:
                ip:
                  type: string
                  description: The IP address of a trap server. Could be empty.
                community:
                  type: string
                  description: The community string of a trap server. Could be empty
              description: snmp system information
              example:
                ip: 192.168.127.254
                community: public
        required: false
      responses:
        "200":
          description: Device trap server settings is updated
          content: {}
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: the username or password is incorrect.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/devices/ip/{ip}/trapServers/site/{siteId}":
    get:
      tags:
        - Devices
      summary: Get Trap server settings of the device
      description: TODO
      parameters:
        - name: ip
          in: path
          description: The IP Address of the device
          required: true
          schema:
            type: string
            format: IP address
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Trap server settings of a device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/device-trap-settings"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Devices
      summary: Update Trap server settings of a device
      description: TODO
      parameters:
        - name: ip
          in: path
          description: The IP Address of the device
          required: true
          schema:
            type: string
            format: IP address
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: An Array of trap server settings
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/device-trap-settings"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/device-trap-settings"
        required: true
      responses:
        "200":
          description: Device trap server settings is updated
          content: {}
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: the username or password is incorrect.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/devices/id/{id}/trapServers/site/{siteId}":
    get:
      tags:
        - Devices
      summary: Get Trap server settings of the device
      description: TODO
      parameters:
        - name: id
          in: path
          description: The ID of the device
          required: true
          schema:
            type: integer
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Trap server settings of a device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/device-trap-settings"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Devices
      summary: Update Trap server settings of a device
      description: TODO
      parameters:
        - name: id
          in: path
          description: The ID of the device
          required: true
          schema:
            type: integer
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: An Array of trap server settings
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/device-trap-settings"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/device-trap-settings"
        required: true
      responses:
        "200":
          description: Device trap server settings is updated
          content: {}
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: the username or password is incorrect.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/devices/site/{siteId}/id/{id}/v3TrapReceiveStatusReset":
    put:
      tags:
        - Devices
      summary: Recover the trap parse error event
      description: TODO
      parameters:
        - name: id
          in: path
          description: The ID of the device
          required: true
          schema:
            type: integer
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Trap parse error event is cleared
          content: {}
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: the username or password is incorrect.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/devices/severity/summary/site/{siteId}":
    get:
      tags:
        - Devices
      summary: Get the severity status of all devices of a site
      description: >-
        Get the severity status of all devices grouped by `critical`, `warning`
        and `information`
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Severity summary
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/device-severity-summary"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: The device has no document
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/devices/availability/site/{siteId}":
    get:
      tags:
        - Devices
      summary: Get device availability information of a site
      description: Get the availability information of all devices in a time period
      parameters:
        - name: start_time
          in: query
          description: The start time of availability information
          required: true
          schema:
            type: integer
            format: unix timestamp
        - name: end_time
          in: query
          description: The end time of availability information
          required: true
          schema:
            type: integer
            format: unix timestamp
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Availability report
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/device-availability-report"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/devices/id/{id}/documents/site/{siteId}":
    get:
      tags:
        - Devices
      summary: Get a device's document by device ID
      description: TODO
      parameters:
        - name: id
          in: path
          description: The ID of the device
          required: true
          schema:
            type: integer
            format: integer
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Document path
          content:
            application/json:
              schema:
                type: object
                example:
                  path: resources/tmp/bHTCHQUKiiNYv6OY.pdf
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: The device has no document
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Devices
      summary: Set device document by device ID
      description: TODO
      parameters:
        - name: id
          in: path
          description: The ID of the device
          required: true
          schema:
            type: integer
            format: integer
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data
              properties:
                data:
                  type: string
                  description: a pdf file
                  format: binary
          multipart/form-data:
            schema:
              required:
                - data
              properties:
                data:
                  type: string
                  description: a pdf file
                  format: binary
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: device not found or the device has no document
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/devices/ip/{ip}/documents/site/{siteId}":
    get:
      tags:
        - Devices
      summary: Get a device's document by device IP
      description: TODO
      parameters:
        - name: ip
          in: path
          description: The IP of the device
          required: true
          schema:
            type: string
            format: ip
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Document path
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: The device has no document
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Devices
      summary: Set device document by device ID
      description: TODO
      parameters:
        - name: ip
          in: path
          description: The IP of the device
          required: true
          schema:
            type: string
            format: ip
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data
              properties:
                data:
                  type: string
                  description: a pdf file
                  format: binary
          multipart/form-data:
            schema:
              required:
                - data
              properties:
                data:
                  type: string
                  description: a pdf file
                  format: binary
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: device not found or the device has no document
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/devices/ip/{ip}/firmware/site/{siteId}":
    put:
      tags:
        - Devices
      summary: Upgrade device firmware
      description: TODO
      parameters:
        - name: ip
          in: path
          description: The IP Address of the device
          required: true
          schema:
            type: string
            format: IP address
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data
                - password
                - username
              properties:
                username:
                  type: string
                  description: the account name of the device
                password:
                  type: string
                  description: the account password of the device
                data:
                  type: string
                  description: firmware file
                  format: binary
          multipart/form-data:
            schema:
              required:
                - data
                - password
                - username
              properties:
                username:
                  type: string
                  description: the account name of the device
                password:
                  type: string
                  description: the account password of the device
                data:
                  type: string
                  description: firmware file
                  format: binary
        required: true
      responses:
        "200":
          description: Firmware upgraded
          content: {}
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: the username or password is incorrect.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/devices/ip/{ip}/icon/site/{siteId}":
    put:
      tags:
        - Devices
      summary: Change device icon
      description: TODO
      parameters:
        - name: ip
          in: path
          description: The IP Address of the device
          required: true
          schema:
            type: string
            format: IP address
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - icon
              properties:
                icon:
                  type: string
                  description: "The icon image, only allow png format"
                  format: binary
                apply_to_all:
                  type: boolean
                  description: >-
                    Set to True to apply this device icon to all devices with
                    the same sysobjid
          multipart/form-data:
            schema:
              required:
                - icon
              properties:
                icon:
                  type: string
                  description: "The icon image, only allow png format"
                  format: binary
                apply_to_all:
                  type: boolean
                  description: >-
                    Set to True to apply this device icon to all devices with
                    the same sysobjid
        required: true
      responses:
        "200":
          description: The device icon is changed
          content: {}
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: the username or password is incorrect.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/devices/id/{id}/icon/site/{siteId}":
    put:
      tags:
        - Devices
      summary: Change device icon
      description: TODO
      parameters:
        - name: id
          in: path
          description: The ID of the device
          required: true
          schema:
            type: integer
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - icon
              properties:
                icon:
                  type: string
                  description: "The icon image, only allow png format"
                  format: binary
                apply_to_all:
                  type: boolean
                  description: >-
                    Set to True to apply this device icon to all devices with
                    the same sysobjid
          multipart/form-data:
            schema:
              required:
                - icon
              properties:
                icon:
                  type: string
                  description: "The icon image, only allow png format"
                  format: binary
                apply_to_all:
                  type: boolean
                  description: >-
                    Set to True to apply this device icon to all devices with
                    the same sysobjid
        required: true
      responses:
        "200":
          description: The device icon is changed
          content: {}
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: the username or password is incorrect.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/devices/site/{siteId}/icons":
    put:
      tags:
        - Devices
      summary: Change multiple device icon
      description: Change multiple device icon
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                icon:
                  type: string
                  description: "The icon image, only allow png format"
                  format: binary
                ips:
                  type: string
                  description: '["192.168.127.184", "192.168.127.195"]'
                  example: '["192.168.127.184", "192.168.127.195"]'
              required:
                - icon
                - ips
        required: true
      responses:
        "200":
          description: The device icon is changed
          content: {}
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: the username or password is incorrect.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/devices/ip/{ip}/leds/site/{siteId}":
    get:
      tags:
        - Devices
      summary: Get LED information of the device
      description: TODO
      parameters:
        - name: ip
          in: path
          description: The IP Address of the device
          required: true
          schema:
            type: string
            format: IP address
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
        - name: led
          in: query
          description: >-
            led name. Multiple queries allowed. For example,
            http://localhost/api/devices/ip/192.168.127.253/leds/site/1234567890?led=PWR1&led=PWR2&led=Fault
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Device LED information
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "422":
          description: >-
            Operation failed. A possible reason is that the device is
            disconnected.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  /api/devices/firmware/all:
    get:
      tags:
        - Devices
      summary: Get firmware upgrade information of the site
      description: Get firmware upgrade information of the site
      responses:
        "200":
          description: The informations of devices upgrade
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-devices-firmware"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "422":
          description: >-
            Operation failed. A possible reason is that the device is
            disconnected.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  /api/devices/firmware/latest_info:
    get:
      tags:
        - Devices
      summary: Get the information of the Moxa SRS Service and the check schedule information
      description: Get the information of the Moxa SRS Service and the check schedule information
      responses:
        "200":
          description: The informations of the Moxa SRS Service
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-devices-latest-info-result"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "422":
          description: >-
            Operation failed. A possible reason is that the device is
            disconnected.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/devices/firmware/check_schedule:
    post:
      tags:
        - Devices
      summary: Add the information of the Moxa SRS Service check schedule
      description: Add the information of the Moxa SRS Service check schedule
      requestBody:
        description: |
          Add the information of the Moxa SRS Service check schedule, frequency 1=once 2=daily 3=weekly 4=monthly.
          <br/> day_of_week=2 Wednesday

        content:
          application/json:
            schema:
              $ref: "#/components/schemas/mxview-devices-check-schedule-new-request"
            examples:
              daily:
                value:
                  description: daily
                  frequency: 2
                  hour: 19
                  minute: 0
              weekly:
                value:
                  description: weekly
                  frequency: 3
                  hour: 19
                  minute: 0
                  day_of_week: 2 # 2=Wednesday
              monthly:
                value:
                  description: monthly
                  frequency: 4
                  hour: 19
                  minute: 0
                  day_of_week: 3 # no use
                  day_of_month: 3 # 3=3rd day of the month
              once:
                value:
                  description: once
                  frequency: 1
                  time: 1692126000
        required: true
      responses:
        "200":
          description: The result of setting the ignore flag
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-devices-check-schedule-new-response"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "422":
          description: >-
            Operation failed. A possible reason is that the device is
            disconnected.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/devices/firmware/check_schedule/{id}:
    delete:
      tags:
        - Devices
      summary: Delete SRS Service check schedule
      description: Delete SRS Service check schedule
      parameters:
        - name: id
          in: path
          description: check schedule uniqueId
          required: true
          schema:
            type: string
            format: uniqueId
      responses:
        "200":
          description: The result of delete check schedule
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "422":
          description: >-
            Operation failed. A possible reason is that the device is
            disconnected.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  /api/devices/firmware/release_note:
    get:
      tags:
        - Devices
      summary: Get firmware version information of the device model, If the ReleaseType contains Vulnerability, it will be displayed as a security update.
      description: Get firmware version information of the device model, If the ReleaseType contains Vulnerability, it will be displayed as a security update.
      parameters:
        - name: model
          in: query
          description: the model of devices you want to query
          schema:
            type: string
            format: string
          example: EDS-510E
      responses:
        "200":
          description: The informations of devices firmware
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-devices-release-note"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "422":
          description: >-
            Operation failed. A possible reason is that the device is
            disconnected.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  /api/devices/firmware/set_ignore_model:
    put:
      tags:
        - Devices
      summary: Set the ignore flag of firmware upgrade information of the device model
      description: Set the ignore flag of firmware upgrade information of the device model
      requestBody:
        description: Specifies the version to ignore checking, ignored:'all' represents any version, ignored:'none' represents not ignore
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/firmware_ignore_model"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/firmware_ignore_model"
        required: true
      responses:
        "200":
          description: The result of setting the ignore flag
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "422":
          description: >-
            Operation failed. A possible reason is that the device is
            disconnected.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  /api/devices/firmware/readiness:
    get:
      tags:
        - Devices
      summary: Get firmware status of the device model
      description: Get firmware status of the device model
      parameters:
        - name: model
          in: query
          description: the model of devices you want to upgrade
          schema:
            type: string
            format: string
          example: EDS-405
        - name: version
          in: query
          description: the version of firmware you want to upgrade
          schema:
            type: string
            format: string
          example: 3.11
      responses:
        "200":
          description: The informations of devices firmware status. Downloading=1, InUse=2, NotInUse=3, Absent=4
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-devices-readiness"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "422":
          description: >-
            Operation failed. A possible reason is that the device is
            disconnected.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  /api/devices/firmware/from_mxsrc:
    post:
      tags:
        - Devices
      summary: Download the firmware of the specific device model
      description: Download the firmware of the specific device model
      requestBody:
        description: device firmware download
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/firmware_download_from_mxsrc"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/firmware_download_from_mxsrc"
        required: true
      responses:
        "200":
          description: The informations of devices firmware download status, Firmware IsReady=1, Download Started=2, Download Failed=3, Download Started=4
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/firmware_download_from_mxsrc_result"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "422":
          description: >-
            Operation failed. A possible reason is that the device is
            disconnected.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    delete:
      tags:
        - Devices
      summary: Delete the firmware of the specific device model
      description: Delete the firmware of the specific device model
      requestBody:
        description: device firmware delete
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/firmware_download_from_mxsrc"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/firmware_download_from_mxsrc"
        required: true
      responses:
        "200":
          description: The device firmware is deleted
          content: {}
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "422":
          description: >-
            Operation failed. A possible reason is that the device is
            disconnected.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  /api/devices/firmware/latest_info_ex:
    post:
      tags:
        - Devices
      summary: Get a list of devices that can be updated with specific firmware
      description: Get a list of devices that can be updated with specific firmware
      requestBody:
        description: device model and firmware version
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/firmware_model_version"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/firmware_model_version"
        required: true
      responses:
        "200":
          description: The informations of devices firmware model version
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/firmware_model_version_result"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "422":
          description: >-
            Operation failed. A possible reason is that the device is
            disconnected.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/devices/firmware/update_strategy:
    post:
      tags:
        - Devices
      summary: Get a list of devices that can be updated with specific firmware, with some suggest upgrade sequence
      description: Get a list of devices that can be updated with specific firmware, with some suggest upgrade sequence
      requestBody:
        description: device model and firmware version
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/firmware_update_strategy_request"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/firmware_update_strategy_request"
        required: true
      responses:
        "200":
          description: The informations of devices firmware model version
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/firmware_update_strategy_response"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "422":
          description: >-
            Operation failed. A possible reason is that the device is
            disconnected.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/devices/firmware/update_task_ex:
    post:
      tags:
        - Devices
      summary: Upgrade mutiple devices with specific firmware version
      description: Upgrade mutiple devices with specific firmware version
      requestBody:
        description: device ip, firmware version and the upgrade strategy with order
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/firmware_update_task_request"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/firmware_update_task_request"
        required: true
      responses:
        "200":
          description: The specific devices's upgrade task is started
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/firmware_update_task_response"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "422":
          description: >-
            Operation failed. A possible reason is that the device is
            disconnected.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/devices/firmware/update_task:
    get:
      tags:
        - Devices
      summary: Get the current upgrade tasks
      description: Get the current upgrade tasks
      responses:
        "200":
          description: The informations of the current upgrade tasks
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/firmware_update_task_query_response"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "422":
          description: >-
            Operation failed. A possible reason is that the device is
            disconnected.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    delete:
      tags:
        - Devices
      summary: Delete the current upgrade tasks
      description: Delete the current upgrade tasks
      responses:
        "200":
          description: The result of the delete command
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "422":
          description: >-
            Operation failed. A possible reason is that the device is
            disconnected.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/devices/firmware/task_schedule:
    post:
      tags:
        - Devices
      summary: Upgrade mutiple devices with specific firmware version by job schedule
      description: Upgrade mutiple devices with specific firmware version by job schedule <br/>action 5=Concurrent, 6=Sequential, 7=SmartConcurrent
      requestBody:
        description|: device id, firmware filename and the upgrade strategy with order by job schedule.action 5=Concurrent, 6=Sequential, 7=SmartConcurrent
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/mxview-devices-check-schedule-new-request"
            examples:
              once Concurrent:
                value:
                  name: Firmware upgrade schedule
                  description: once
                  action: 5
                  frequency: 1
                  time: 1692126000
                  targets:
                    - deviceID: 3
                      filename: moxa-eds-408a-series-firmware-v3.12.rom
                      order: 1
                    - deviceID: 4
                      filename: moxa-eds-508a-series-firmware-v3.9.rom
                      order: 1
              daily Sequential:
                value:
                  name: Firmware upgrade schedule
                  description: daily
                  action: 6
                  frequency: 2
                  hour: 19
                  minute: 0
                  targets:
                    - deviceID: 3
                      filename: moxa-eds-408a-series-firmware-v3.12.rom
                      order: 2
                    - deviceID: 4
                      filename: moxa-eds-508a-series-firmware-v3.9.rom
                      order: 1
              weekly SmartConcurrent:
                value:
                  name: Firmware upgrade schedule
                  description: weekly
                  action: 7
                  frequency: 3
                  hour: 19
                  minute: 0
                  day_of_week: 2 # 2=Wednesday
                  targets:
                    - deviceID: 3
                      filename: moxa-eds-408a-series-firmware-v3.12.rom
                      order: 2
                    - deviceID: 4
                      filename: moxa-eds-508a-series-firmware-v3.9.rom
                      order: 1
              monthly SmartConcurrent:
                value:
                  name: Firmware upgrade schedule
                  description: monthly
                  action: 7
                  frequency: 4
                  hour: 19
                  minute: 0
                  day_of_week: 3 # no use
                  day_of_month: 3 # 3=3rd day of the month
                  targets:
                    - deviceID: 3
                      filename: moxa-eds-408a-series-firmware-v3.12.rom
                      order: 2
                    - deviceID: 4
                      filename: moxa-eds-508a-series-firmware-v3.9.rom
                      order: 1
        required: true
      responses:
        "200":
          description: The specific devices's upgrade task is started
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/firmware_update_task_schedule_response"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "422":
          description: >-
            Operation failed. A possible reason is that the device is
            disconnected.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/devices/disable_unencrypted_port:
    put:
      tags:
        - Devices
      summary: Disable device unencrypted port
      description: Disable device unencrypted port
      requestBody:
        description: An Array of trap server settings
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/device-unencrypted-port-request"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/device-unencrypted-port-request"
        required: true
      responses:
        200:
          description: The result of the disable device unencrypted port
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        400:
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        401:
          description: The authorization token is invalid.
          content: {}
        403:
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        422:
          description: the username or password is incorrect.
          content: {}
        504:
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/devices/cli:
    get:
      tags:
        - Devices
      summary: Get a list of executable CLI commands
      description: Get a list of executable CLI commands
      responses:
        "200":
          description: The informations of the executable CLI commands
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/cli_query_response"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "422":
          description: >-
            Operation failed. A possible reason is that the device is
            disconnected.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    post:
      tags:
        - Devices
      summary: Insert the specified CLI command or CLI collection
      description: Insert the specified CLI command / the specified CLI collection
      requestBody:
        description|: The content of the new CLI command / the specified CLI collection
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/add_cli_commands"
                - $ref: "#/components/schemas/add_cli_btn"

            examples:
              CLI Commands:
                value:
                  name: reboot
                  description: reboot everyday keep the system healthy
                  script:
                    - reload
                    - y
              CLI Btn:
                value:
                  name: CLT Collection Btn
                  description: Execute the specified CLI command.
                  script:
                    - id: 1
                      ip: 192.168.127.12
                    - id: 1
                      ip: 192.168.127.123
                    - id: 2
                      ip: 192.168.127.151
                  group_name: group_name
                  button_color: "#333333"
                  text_color: "#FFFFFF"
                  group_order: 1
                  button_order: 1
                  button_affected_ips: '[{"ip":"192.168.123.151"}, {"ip":"192.168.123.152"}]'
                  button_state: false
        required: true
      responses:
        "200":
          description: The result of the insert command
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "422":
          description: >-
            Operation failed. A possible reason is that the device is
            disconnected.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Devices
      summary: Modify the specified CLI command or CLI collection
      description: Modify the specified CLI command or CLI collection
      requestBody:
        description: The content of the modify CLI command or CLI collection
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/edit_cli_commands"
                - $ref: "#/components/schemas/edit_cli_btn"
            examples:
              CLI Commands:
                value:
                  id: 1
                  name: reboot
                  description: reboot everyday keep the system healthy
                  script:
                    - reload
                    - y
              CLI Btn:
                value:
                  id: 16
                  name: CLT Collection Btn
                  description: Execute the specified CLI command.
                  script:
                    - id: 1
                      ip: 192.168.127.123
                    - id: 2
                      ip: 192.168.127.151
                  group_name: group_name
                  button_color: "#333333"
                  text_color: "#FFFFFF"
                  group_order: 1
                  button_order: 1
                  button_affected_ips: '[{"ip":"192.168.127.123"}, {"ip":"192.168.127.151"}]'
                  button_state: false
        required: true
      responses:
        "200":
          description: The result of the delete command
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "422":
          description: >-
            Operation failed. A possible reason is that the device is
            disconnected.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    delete:
      tags:
        - Devices
      summary: Delete the specified CLI command or CLI collection
      description: Delete the specified CLI command or CLI collection
      requestBody:
        description: The ID of the delete CLI command or CLI collection
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cli_delete_request"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/cli_delete_request"
        required: true
      responses:
        "200":
          description: The result of the delete command
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "422":
          description: >-
            Operation failed. A possible reason is that the device is
            disconnected.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/devices/cli_btn_group:
    get:
      tags:
        - Devices
      summary: Get a list of executable CLI collection group by the BtnGroup
      description: Get a list of executable CLI collection group by the BtnGroup
      responses:
        "200":
          description: The informations of the executable CLI collection
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/cli_btn_query_response"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "422":
          description: >-
            Operation failed. A possible reason is that the device is
            disconnected.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

    put:
      tags:
        - Devices
      summary: Modify the collection of buttons properties.
      description: Modify the collection of buttons properties.
      requestBody:
        description: >-
          Adjusting individual button properties </br>
          Adjusting the group and display order of multiple buttons
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/btn_group_modify_request"
            examples:
              Btns Group Style Update:
                value:
                  size: 1
              Btns Panel Style Update:
                value:
                  ask_password: true
                  show_button_widget: true
                  caption_string: "a Title"
                  caption_text_color: "#FFFFFF"
                  caption_background_color: "#008787"
              Btns Groups Update:
                value:
                  size: 1
                  ask_password: true
                  show_button_widget: true
                  caption_string: "a Title"
                  caption_text_color: "#FFFFFF"
                  caption_background_color: "#008787"
                  groups:
                    - name: Unnamed
                      btn_list:
                        - button_color: ""
                          text_color: ""
                          name: reboot
                          description: test description
                          script: '[{"id":1,"ip":"192.168.127.12"},{"id":2,"ip":"192.168.127.1"}]'
                          id: 20
                          button_affected_ips: '[{"ip":"192.168.127.12"}, {"ip":"192.168.127.1"}]'
                          button_state: false
                    - name: group_name
                      btn_list:
                        - button_color: "#333333"
                          text_color: "#FFFFFF"
                          name: reboot2
                          description: test description
                          script: '[{"id":1,"ip":"192.168.127.12"},{"id":2,"ip":"192.168.127.1"}]'
                          button_affected_ips: '[{"ip":"192.168.127.12"}, {"ip":"192.168.127.1"}]'
                          button_state: false
                          id: 22
        required: true
      responses:
        "200":
          description: The result of the update layout command
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "422":
          description: >-
            Operation failed. A possible reason is that the device is
            disconnected.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/devices/run_cli:
    post:
      tags:
        - Devices
      summary: Specify the device to execute the CLI or execute the specified CLI Btn.
      description: >-
        CLI template ID to execute (id), on which devices to run (ip). <br/>
        Execute ad-hoc CLI command, id = -1. <br/>
        Execute CLI Btn, id = 1, ie the Btn id. <br/>
        <B>If ask_password: true, the parameter password must be included.</B>
      requestBody:
        description|: CLI template ID to execute (id), on which devices to run (ip). <br/> Execute ad-hoc CLI command, id = -1.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/run_cli_request"
            examples:
              CLI Btn:
                value:
                  id: 5
              CLI Btn with Password:
                value:
                  id: 5
                  password: "moxa"
              CLI Commands:
                value:
                  ip:
                    - 192.168.123.73
                  id: -1
                  script:
                    - reload
                    - y
        required: true
      responses:
        "200":
          description: An array
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/run_cli_response"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Event not found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/devices/run_cli_object:
    post:
      tags:
        - Devices
      summary: Specify the device to execute the CLI object by name
      description: >-
        CLI template name to execute (name), on which devices to run (ips).
      requestBody:
        description|: CLI template name to execute (name), on which devices to run (ips).
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/run_cli_request"
            examples:
              CLI Multiple Devices With Diff Cmd:
                value:
                  name: CLI_Devices_CMD
              CLI Multiple Devices With One Cmd:
                value:
                  ips:
                    - 192.168.4.244
                    - 192.168.4.245
                  name: REBOOT
        required: true
      responses:
        "200":
          description: An array
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/run_cli_response"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Event not found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/devices/cli_logs:
    get:
      tags:
        - Devices
      summary: Get the CLI log file
      description: >-
        Get the CLI log file
      responses:
        "200":
          description: CLI log file
          content: {}
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Event not found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    delete:
      tags:
        - Devices
      summary: Delete the CLI log file
      description: >-
        Delete the CLI log file
      responses:
        "200":
          description: The result of delete CLI log
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Event not found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  /api/devices/cli_logs_ex:
    delete:
      tags:
        - Devices
      summary: Delete the CLI log file before specific date
      description: >-
        Delete the CLI log file before specific date
      requestBody:
        description: The specific date
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cli_log_delete_request"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/cli_log_delete_request"
        required: true
      responses:
        "200":
          description: The result of delete CLI log
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Event not found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/devices/builtin_commands/list:
    get:
      tags:
        - Devices
      summary: Get the list of built-in commands.
      description: Get the list of built-in commands.
      responses:
        "200":
          description: The informations of the built-in commands <br/>AUTO_LOGOUT, DISABLE_UNENCRYTP_PORT, DISABLE_UNUSED_PORT, DISABLE_VPN, ENABLE_TRUSTED_ACCESS, PORT_MAC_STICKY, MAC_STICKY_RELEARN, GLOBAL_MAC_STICKY_SWITCH,REBOOT, SNAPSHOT_CREATE, SNAPSHOT_RESTORE, SNAPSHOT_VIEW
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/builtin_commands_list_query_response"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "422":
          description: >-
            Operation failed. A possible reason is that the device is
            disconnected.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/devices/builtin_commands/model_list:
    get:
      tags:
        - Devices
      summary: Get the list of model's regular expression.
      description: Get the list of model's regular expression.
      responses:
        "200":
          description: The informations of model's regular expression
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/builtin_commands_model_query_response"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "422":
          description: >-
            Operation failed. A possible reason is that the device is
            disconnected.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/devices/builtin_commands:
    get:
      tags:
        - Devices
      summary: Get the operational status of built-in commands.
      description: Get the operational status of built-in commands.
      responses:
        "200":
          description: The informations of the built-in commands
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/builtin_commands_query_response"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "422":
          description: >-
            Operation failed. A possible reason is that the device is
            disconnected.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    post:
      tags:
        - Devices
      summary: Add a new set of devices and built-in commands to be executed.
      description: Add a new set of devices and built-in commands to be executed.
      requestBody:
        description: The devices and built-in commands and the parameters.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/builtin_commands_insert_request"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/builtin_commands_insert_request"
        required: true
      responses:
        "200":
          description: The result of the insert command
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "422":
          description: >-
            Operation failed. A possible reason is that the device is
            disconnected.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Devices
      summary: Execute a set of devices and built-in commands.
      description: Execute a set of devices and built-in commands.
      requestBody:
        description: The execute parameters
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/builtin_commands_execution_request"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/builtin_commands_execution_request"
        required: true
      responses:
        "200":
          description: The result of the execute command
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "422":
          description: >-
            Operation failed. A possible reason is that the device is
            disconnected.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/devices/builtin_commands_ex:
    post:
      tags:
        - Devices
      summary: Execute commands for the selected devices.
      description: Execute commands for the selected devices.
      requestBody:
        description: |
          The devices and built-in commands and the parameter's definition<br/>
          `json` the parameters <br/>
          * Change Wi-Fi Channel <br/>
              `RFband` 1:2.4G 2:5G <br/>
              `channel` 1~13:2.4G, 36~196:5G <br/>
              `width` 1:20, 2:20-40, 3:20-40-80 <hr/>
          * Add Wi-Fi SSID <br/>
              `delete` bool <br/>
              `ssid` string <br/>
              `RFband` 1:2.4G 2:5G <br/>
              `security` 1:open, 2:wpa, 3:wpa2, 4:wpa3, 5:wpa-wpa2-mixed, 6:wpa2-wpa3-mixed <br/>
              `pmf` 1:disabled, 2:802.11w  <br/>
              `encryption` 1:aes, 2:tkip-aes-mixed  <br/>
              `eapol` 1:v1, 2:v2 <br/>
              `key` string <hr/>
          * Dynamic MAC Sticky <br/>
              `port_id` 1:2.4G 2:5G <br/>
              `enable` bool <br/>
              `port_limit` 1:20, 2:20-40, 3:20-40-80 <br/>
              `policy` 1:packet-drop 2:Shutdown port <hr/>
          * Reboot <br/>
              no parameters <hr/>
          * Create a Snapshot <br/>
              no parameters <hr/>
          * Restore to Created Snapshot <br/>
              no parameters <hr/>
          * MAC Sticky on/off <br/>
              `global_enable` true:on, false:off <hr/>
          * Relearn Dynamic MAC Sticky <br/>
              no parameters <hr/>
          * Disable unused port <br/>
              `skip_used_port` true:keep unused port when the port exists a link in topology, false:delete <hr/>
          * Disable unsecured console <br/>
              no parameters <hr/>
          * mxsec IPS Operation Mode <br/>
              `ips` enable/disable <br/>
              `operation_mode` prevention/detection <hr/>

          `target` the device ip and execution order <br/>
          `meta` the execution command <br/>
          `command` 0: Optimized Sequential, 1: Sequential, 2: Concurrent <br/>
          `stop` stop all upgrade task when any upgrade error occurred, true: stop, false: continue process the next devices <br/>
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/builtin_commands_execution_request2"
            examples:
              Change Wi-Fi Channel:
                value:
                  target:
                    - ip: 192.168.123.70
                      order: 1
                    - ip: 192.168.123.73
                      order: 2
                  meta: CHANGE_WIFI_CHANNEL
                  json:
                    - RFband: 1
                      channel: 1
                      width: 2
                    - RFband: 2
                      channel: 36
                      width: 3
                  command: "0"
                  stop: false
              Add Wi-Fi SSID:
                value:
                  target:
                    - ip: 192.168.123.70
                      order: 1
                  meta: CREATE_WIFI_SSID
                  json:
                    delete: false
                    RFband: 1
                    ssid: Moxa-123
                    security: 2
                    encryption: 1
                    key: "89191230"
                    pmf: 1
                    eapol: 1
                  command: "0"
                  stop: false
              Dynamic MAC Sticky:
                value:
                  target:
                    - ip: 192.168.127.12
                      order: 1
                  meta: PORT_MAC_STICKY
                  json:
                    - port_id: 1/3
                      policy: 1
                      port_limit: 25
                      enable: true
                    - port_id: 1/4
                      policy: 1
                      port_limit: 30
                      enable: true
                  command: "0"
                  stop: false
              Reboot:
                value:
                  target:
                    - ip: 192.168.4.244
                      order: 1
                    - ip: 192.168.4.245
                      order: 2
                  meta: REBOOT
                  json: "{}"
                  command: "0"
                  stop: false
              Create a Snapshot:
                value:
                  target:
                    - ip: 192.168.128.12
                      order: 1
                  meta: SNAPSHOT_CREATE
                  json: "{}"
                  command: "0"
                  stop: false
              Restore to Created Snapshot:
                value:
                  target:
                    - ip: 192.168.128.12
                      order: 1
                  meta: SNAPSHOT_RESTORE
                  json: "{}"
                  command: "0"
                  stop: false
              MAC Sticky on/off:
                value:
                  target:
                    - ip: 192.168.127.12
                      order: 1
                  meta: GLOBAL_MAC_STICKY_SWITCH
                  json:
                    global_enable: true
                  command: "0"
                  stop: false
              Relearn Dynamic MAC Sticky:
                value:
                  target:
                    - ip: 192.168.127.12
                      order: 1
                  meta: MAC_STICKY_RELEARN
                  json: "{}"
                  command: "0"
                  stop: false
              Disable unused port:
                value:
                  target:
                    - ip: 192.168.4.244
                      order: 1
                  meta: DISABLE_UNUSED_PORT
                  json:
                    skip_used_port: true
                  command: "0"
                  stop: false
              Disable unsecured console:
                value:
                  target:
                    - ip: 192.168.4.244
                      order: 1
                    - ip: 192.168.4.245
                      order: 2
                  meta: DISABLE_UNENCRYTP_PORT
                  json: "{}"
                  command: "0"
                  stop: false
              mxsec IPS Operation Mode:
                value:
                  target:
                    - ip: 10.123.34.108
                      order: 1
                  meta: IPS_OPERATION_MODE
                  json:
                    ips: disable
                    operation_mode: detection
                  command: "0"
                  stop: false
        required: true
      responses:
        "200":
          description: The result of the specified command is starting to execute.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "422":
          description: >-
            Operation failed. A possible reason is that the device is
            disconnected.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/devices/builtin_commands_port_list:
    get:
      tags:
        - Devices
      summary: Get the list of the device port.
      description: Get the list of the device port.
      parameters:
        - name: ip
          in: query
          description: the device ip you want to query
          schema:
            type: string
            format: string
          example: 192.168.127.12
      responses:
        "200":
          description: The informations of the device port list.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/devices_port_list_query_response"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "422":
          description: >-
            Operation failed. A possible reason is that the device is
            disconnected.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/devices/builtin_commands/update_strategy:
    post:
      tags:
        - Devices
      summary: Get a list of devices that can be executed with reboot command, with some suggest upgrade sequence
      description: Get a list of devices that can be executed with reboot command, with some suggest upgrade sequence
      requestBody:
        description: device information
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/builtin_commands_strategy_request"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/builtin_commands_strategy_request"
        required: true
      responses:
        "200":
          description: The informations of devices order
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/builtin_commands_strategy_response"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "422":
          description: >-
            Operation failed. A possible reason is that the device is
            disconnected.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/devices/builtin_commands/task_schedule:
    post:
      tags:
        - Devices
      summary: Add the job schedule of the execution commands for the selected devices.
      description: Add the job schedule of the execution commands for the selected devices.
      requestBody:
        description|: device id, firmware filename and the upgrade strategy with order by job schedule.action 5=Concurrent, 6=Sequential, 7=SmartConcurrent
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/mxview-devices-check-schedule-new-request"
            examples:
              Reboot:
                value:
                  name: Builtin Command schedule
                  description: once
                  action: 10
                  frequency: 1
                  time: 1697203020
                  targets:
                    - deviceID: 10
                      meta: REBOOT
                      order: 1
                      remark: '{ "deviceOrder": 1, "deviceIp": "192.168.4.245" }'
              Create a Snapshot:
                value:
                  name: Builtin Command schedule
                  description: once
                  action: 10
                  frequency: 1
                  time: 1697204760
                  targets:
                    - deviceID: 17
                      meta: SNAPSHOT_CREATE
                      order: 1
                      remark: ""
              Restore to Created Snapshot:
                value:
                  name: Builtin Command schedule
                  description: once
                  action: 10
                  frequency: 1
                  time: 1697204760
                  targets:
                    - deviceID: 17
                      meta: SNAPSHOT_RESTORE
                      order: 1
                      remark: ""
        required: true
      responses:
        "200":
          description: The specific devices's upgrade task is started
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/builtin_commands_task_schedule_response"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "422":
          description: >-
            Operation failed. A possible reason is that the device is
            disconnected.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/devices/site/{siteId}/IEDgroup:
    post:
      tags:
        - Devices
      summary: Create an IED group and move selected devices into the group.
      description: Create an IED group and move selected devices into the group.
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: The ids of the devices
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ied_group_request"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ied_group_request"
        required: true
      responses:
        "200":
          description: IED group created
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to refresh the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

    delete:
      tags:
        - Devices
      summary: Delete the IED group and move the devices within the group to the parent group.
      description: Delete the IED group and move the devices within the group to the parent group.
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: The ID of the delete group
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ied_group_delete_request"
        required: true
      responses:
        "200":
          description: The result of the delete command
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Device not found or the siteId is incorrect
          content: {}
        "422":
          description: >-
            Operation failed. A possible reason is that the device is
            disconnected.
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/rogue_devices/rogue_settings:
    get:
      tags:
        - RogueDevices
      summary: Inquire the system configuration values of rogue devices.
      description: Inquire the system configuration values of rogue devices.
      responses:
        "200":
          description: The result of the configuration for rogue devices
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rogue_settings_response"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to refresh the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - RogueDevices
      summary: Modify the system configuration values of rogue devices.
      description: Modify the system configuration values of rogue devices.
      requestBody:
        description: the system configuration values of rogue devices
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/rogue_settings_modify_request"
        required: true
      responses:
        "200":
          description: the configuration modified
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to refresh the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/rogue_devices/list:
    get:
      tags:
        - RogueDevices
      summary: Query rogue devices that have appeared within the last thirty minutes.
      description: Query rogue devices that have appeared within the last thirty minutes.
      responses:
        "200":
          description: The result of rogue devices that have appeared within the last thirty minutes.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rogue_list_response"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to refresh the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    delete:
      tags:
        - RogueDevices
      summary: delete rogue devices with specified MAC address.
      description: delete rogue devices with specified MAC address.
      requestBody:
        description: the mac address list of the specified devices
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/rogue_devices_mac_request"
        required: true
      responses:
        "200":
          description: The result of delete rogue devices with specified MAC address.
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to refresh the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/rogue_devices/history_list:
    get:
      tags:
        - RogueDevices
      summary: Query rogue devices that have appeared more than thirty minutes ago.
      description: Query rogue devices that have appeared more than thirty minutes ago.
      responses:
        "200":
          description: The result of rogue devices that have appeared within the last thirty minutes.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rogue_list_response"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to refresh the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    delete:
      tags:
        - RogueDevices
      summary: Delete rogue devices that have appeared more than thirty minutes ago.
      description: Delete rogue devices that have appeared more than thirty minutes ago.
      responses:
        "200":
          description: the rogue devices cleared
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to refresh the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/rogue_devices/baseline:
    post:
      tags:
        - RogueDevices
      summary: Add existing devices in to the baseline.
      description: Add existing devices in to the baseline.
      responses:
        "200":
          description: the baseline add result
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to refresh the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/rogue_devices/ignored_list:
    get:
      tags:
        - RogueDevices
      summary: Get the list of devices in the baseline.
      description: Get the list of devices in the baseline.
      responses:
        "200":
          description: The list of devices in the baseline.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rogue_ignored_list_response"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to refresh the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    post:
      tags:
        - RogueDevices
      summary: Add the specified devices into the baseline.
      description: Add the specified devices into the baseline.
      requestBody:
        description: the mac address list of the specified devices
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/rogue_devices_mac_request"
      responses:
        "200":
          description: add result.
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to refresh the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    delete:
      tags:
        - RogueDevices
      summary: Delete the specified devices from the baseline.
      description: Delete the specified devices from the baseline.
      requestBody:
        description: the mac address list of the specified devices
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/rogue_devices_mac_request"
      responses:
        "200":
          description: delete result.
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to refresh the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/pwd_automation/devices:
    get:
      tags:
        - PwdAutomation
      summary: Inquire about device information.
      description: Inquire about device information.
      responses:
        "200":
          description: The result of the information for devices
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/devices_list_response"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to refresh the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/pwd_automation/devices_account:
    get:
      tags:
        - PwdAutomation
      summary: Inquire about device accounts information.
      description: Inquire about device accounts information.
      parameters:
        - name: no_tmp
          in: query
          description: When the flag is set to true, filter out temporary accounts. The default value is false.
          schema:
            type: boolean
      responses:
        "200":
          description: The result of the account information for devices
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/devices_account_response"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to refresh the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    post:
      tags:
        - PwdAutomation
      summary: Add device account and password.
      description: Add device account and password.
      requestBody:
        description: The ids of the devices
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/devices_account_add_request"
        required: true
      responses:
        "200":
          description: The result of the account information for devices
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/devices_account_add_response"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to refresh the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    delete:
      tags:
        - PwdAutomation
      summary: Delete device account of device.
      description: Delete device account of device.
      requestBody:
        description: The ids of the devices
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/devices_account_delete_request"
        required: true
      responses:
        "200":
          description: The result of the account information for devices
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/devices_account_delete_response"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to refresh the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/pwd_automation/change_default_admin:
    put:
      tags:
        - PwdAutomation
      summary: Change the default admin account of device.
      description: Change the default admin account of device.
      requestBody:
        description: The ids of the devices
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/change_default_admin_request"
        required: true
      responses:
        "200":
          description: The result of the account information for devices
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/change_default_admin_response"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to refresh the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/pwd_automation/password_updating_records:
    get:
      tags:
        - PwdAutomation
      summary: Obtain account information for devices managed through MXview.
      description: Obtain account information for devices managed through MXview.
      responses:
        "200":
          description: The result of the account information for devices
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/password_updating_records"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to refresh the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/pwd_automation/password_duration:
    get:
      tags:
        - PwdAutomation
      summary: Query the MXview password automation schedule duration.
      description: Query the MXview password automation schedule duration.
      responses:
        "200":
          description: The result of the schedule duration
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/password_duration_response"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to refresh the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - PwdAutomation
      summary: Set the MXview password automation schedule duration.
      description: Set the MXview password automation schedule duration.
      requestBody:
        description: The email reciver
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/password_duration_request"
        required: true
      responses:
        "200":
          description: The result of the setting schedule duration
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-response"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to refresh the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/pwd_automation/send_verify_email:
    post:
      tags:
        - PwdAutomation
      summary: Send verification code via email.
      description: Send verification code via email.
      requestBody:
        description: The email reciver
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/send_verify_email_request"
        required: true
      responses:
        "200":
          description: The result of the schedule duration
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/send_verify_email_response"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to refresh the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/pwd_automation/check_verify_code:
    post:
      tags:
        - PwdAutomation
      summary: Verify the verification code.
      description: Verify the verification code.
      requestBody:
        description: The verification code from email. <br/> The verification code is valid for 10 minutes, and it will become invalid immediately after successful verification.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/check_verify_code_request"
        required: true
      responses:
        "200":
          description: The result of the verification
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/check_verify_code_response"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to refresh the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/pwd_automation/password_automation_settings:
    get:
      tags:
        - PwdAutomation
      summary: Query the parameters for automatically changing random passwords parameters.
      description: Query the parameters for automatically changing random passwords parameters.
      responses:
        "200":
          description: The result of setting the parameter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/query_password_automation_settings_response"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to refresh the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - PwdAutomation
      summary: Modify the parameters for automatically changing random passwords parameters.
      description: Modify the parameters for automatically changing random passwords parameters.
      requestBody:
        description: The setting of password automation
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/password_automation_settings_request"
        required: true
      responses:
        "200":
          description: The result of setting the parameter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/password_automation_settings_response"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to refresh the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/pwd_automation/pwd_randomized:
    put:
      tags:
        - PwdAutomation
      summary: Change the account password for the specified device to a random value.
      description: Change the account password for the specified device to a random value.
      requestBody:
        description: the list of ip to starting password automation
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/pwd_randomized_request"
        required: true
      responses:
        "200":
          description: The result of the randomized password
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/pwd_randomized_response"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to refresh the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/pwd_automation/send_pwd_email:
    get:
      tags:
        - PwdAutomation
      summary: Send the modified account and random password for the device to admin.
      description: Send the modified account and random password for the device to admin.
      responses:
        "200":
          description: The result of the sending email
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/send_pwd_email_response"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to refresh the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/pwd_automation/baseline_diff:
    get:
      tags:
        - PwdAutomation
      summary: Query the differences between the account and the Baseline.
      description: Query the differences between the account and the Baseline.
      parameters:
        - name: no_compare
          in: query
          description: Flags for performing baseline comparison and account verification.Default value is false.
          schema:
            type: boolean
      responses:
        "200":
          description: The result of the device acoount baseline
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/baseline_diff_response"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to refresh the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/pwd_automation/baseline:
    post:
      tags:
        - PwdAutomation
      summary: Create New Account Status Baseline
      description: Create New Account Status Baseline
      responses:
        "200":
          description: The result of the device acoount baseline
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/baseline_response"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to refresh the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/pwd_automation/baseline_auto_check:
    get:
      tags:
        - PwdAutomation
      summary: The Check Status Account Status Audit
      description: The Check Status Account Status Audit
      responses:
        "200":
          description: The result of the device acoount baseline
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/baseline_auto_check_response"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to refresh the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - PwdAutomation
      summary: Set Audit Automation Interval
      description: Set Audit Automation Interval
      requestBody:
        description: Audit Automation interval.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/baseline_auto_check_setting_request"
        required: true
      responses:
        "200":
          description: The result of setting audit parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/baseline_auto_check_setting_response"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to refresh the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/pwd_automation/account_check_time:
    get:
      tags:
        - PwdAutomation
      summary: The Chicking time of Default Password Audit
      description: The Checking time of Default Password Audit
      responses:
        "200":
          description: The result of check the device audit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/account_check_time_response"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to refresh the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/pwd_automation/check_default_account:
    get:
      tags:
        - PwdAutomation
      summary: The result of Checking Device's Default Password
      description: The result of Checking Device's Default Password
      responses:
        "200":
          description: The state result of the device acoount
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/check_default_account_response"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to refresh the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/pwd_automation/devices_temp_account:
    get:
      tags:
        - PwdAutomation
      summary: The temporary account of managed devices
      description: The temporary account of managed devices
      responses:
        "200":
          description: The temporary account data of the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/devices_temp_account_response"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to refresh the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    post:
      tags:
        - PwdAutomation
      summary: Add Deivce's Temporary Account
      description: Add Deivce's Temporary Account
      requestBody:
        description: temporary accunout data including name and device
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/devices_temp_account_add_request"
        required: true
      responses:
        "200":
          description: The add result of the scheduler
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/devices_temp_account_add_response"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to refresh the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - PwdAutomation
      summary: Edit Deivce's Temporary Account
      description: Edit Deivce's Temporary Account
      requestBody:
        description: temporary account data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/devices_temp_account_edit_request"
        required: true
      responses:
        "200":
          description: The edit result of the scheduler
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/devices_temp_account_add_response"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to refresh the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    delete:
      tags:
        - PwdAutomation
      summary: Delete Deivce's Temporary Account
      description: Delete Deivce's Temporary Account
      requestBody:
        description: deleted account and device data.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/devices_temp_account_delete_request"
        required: true
      responses:
        "200":
          description: The state result of the device acoount
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/devices_temp_account_delete_response"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to refresh the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/pwd_automation/support_list:
    get:
      tags:
        - PwdAutomation
      summary: The regular expressing of device series
      description: The regular expressing of device series
      responses:
        "200":
          description: The regular expressing of the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/support_list_response"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to refresh the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/pwd_automation/test_email:
    post:
      tags:
        - PwdAutomation
      summary: Sending the test email to the specified mail address
      description: Sending the test email to the specified mail address
      requestBody:
        description: temporary accunout data including name and device
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/test_email_request"
        required: true
      responses:
        "200":
          description: The add result of the scheduler
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/test_email_response"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to refresh the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  "/api/events/site/{siteId}":
    get:
      tags:
        - Events
      summary: "Get {count} recent events"
      description: "Get {count} event. Default is 1."
      parameters:
        - name: count
          in: query
          description: Number of recent events you want to get
          schema:
            type: integer
            format: integer
        - name: offset
          in: query
          description: >-
            Skip {offset} events. The offset parameter should be divisible by
            count
          schema:
            type: integer
            format: integer
        - name: source_ip
          in: query
          description: Get events of a device indicated by its IP address
          schema:
            type: string
            format: IP string
        - name: groups
          in: query
          description: Get events of a group by group id
          schema:
            type: integer
            format: integer
        - name: severity
          in: query
          description: Get events of severity
          schema:
            type: string
            format: "1: information / 2: warning / 3: critical / 4: system / 5: none system"
        - name: acked
          in: query
          description: Get acked or unacked events
          schema:
            type: boolean
            format: ""
        - name: start_time
          in: query
          description: Get events happened after start_time
          schema:
            type: string
            format: unix timestamp
        - name: end_time
          in: query
          description: Get events happened before end_time
          schema:
            type: string
            format: unix timestamp
        - name: security_event
          in: query
          description: Get security events
          schema:
            type: boolean
            format: ""
        - name: detector
          in: query
          description: Get MXview One detected events or trap events
          schema:
            type: integer
            format: integer. 1. MXview One Server 2. Trap
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
          example: 5ea1481c997a99f4
      responses:
        "200":
          description: >-
            An array of events. The properties of each event could be different.
            For detail, please see event detail table.
          headers:
            content-range:
              description: >-
                This field would contain a string with format `*/250`, indicates
                the total number of events (in this case, 250) within your
                query. Only `count` events would be in the response body. You
                can use `count` and `offset` parameters to indicate the range of
                events you want to query.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/event-responses"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Event not found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    delete:
      tags:
        - Events
      summary: Delete events of a specified category; if this parameter is not provided, all events will be deleted.
      description: TODO
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: Delete events of a specified category; if this parameter is not provided, all events will be deleted.
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  type: integer
                  description: 10=system event, 1=not system event
              description: Events
              example:
                category: 10
      responses:
        "200":
          description: OK
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Operation failed
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/events/id/{id}/site/{siteId}":
    get:
      tags:
        - Events
      summary: Get an event by its ID
      description: TODO
      parameters:
        - name: id
          in: path
          description: The ID of an event
          required: true
          schema:
            type: integer
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: An event
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/event-responses"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Event not found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/events/site/{siteId}/type/{type}":
    get:
      tags:
        - Events
      summary: "Get {type} events from a site."
      description: The response is grouped by both device ip and date
      parameters:
        - name: source_ip
          in: query
          description: Get events of a device indicated by its IP address
          schema:
            type: string
            format: IP string
        - name: groups
          in: query
          description: Get events of a group by group id
          schema:
            type: integer
            format: integer
        - name: start_time
          in: query
          description: Get events happened after start_time
          schema:
            type: string
            format: unix timestamp
        - name: end_time
          in: query
          description: Get events happened before end_time
          schema:
            type: string
            format: unix timestamp
        - name: groupBy
          in: query
          description: 'group events by device ip or site, the default value is "device"'
          schema:
            type: string
        - name: in
          in: query
          description: 'group events by {hour, day, month}, the default value is "day"'
          schema:
            type: string
        - name: type
          in: path
          description: event type
          required: true
          schema:
            type: integer
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: An array of events
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/event-type-responses"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Event not found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/events/site/{siteId}/type/{type}/count":
    get:
      tags:
        - Events
      summary: "Get the count of {type} events from a site."
      description: The response is grouped by both device ip and date
      parameters:
        - name: source_ip
          in: query
          description: Get events of a device indicated by its IP address
          schema:
            type: string
            format: IP string
        - name: groups
          in: query
          description: Get events of a group by group id
          schema:
            type: integer
            format: integer
        - name: start_time
          in: query
          description: Get events happened after start_time
          schema:
            type: string
            format: unix timestamp
        - name: end_time
          in: query
          description: Get events happened before end_time
          schema:
            type: string
            format: unix timestamp
        - name: groupBy
          in: query
          description: 'group events by device ip or site, the default value is "device"'
          schema:
            type: string
        - name: in
          in: query
          description: 'group events by {hour, day, month}, the default value is "day"'
          schema:
            type: string
        - name: type
          in: path
          description: event type
          required: true
          schema:
            type: integer
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: An array of events
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/event-type-count-responses"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Event not found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/events/type/{type}":
    get:
      tags:
        - Events
      summary: "Get {type} events from all sites."
      description: The response is grouped by both device ip and date
      parameters:
        - name: source_ip
          in: query
          description: Get events of a device indicated by its IP address
          schema:
            type: string
            format: IP string
        - name: groups
          in: query
          description: Get events of a group by group id
          schema:
            type: integer
            format: integer
        - name: start_time
          in: query
          description: Get events happened after start_time
          schema:
            type: string
            format: unix timestamp
        - name: end_time
          in: query
          description: Get events happened before end_time
          schema:
            type: string
            format: unix timestamp
        - name: groupBy
          in: query
          description: 'group events by device ip or site, the default value is "device"'
          schema:
            type: string
        - name: in
          in: query
          description: 'group events by {hour, day, month}, the default value is "day"'
          schema:
            type: string
        - name: type
          in: path
          description: event type
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: An array of events
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/event-type-responses"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Event not found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/events/type/{type}/count":
    get:
      tags:
        - Events
      summary: "Get the count of {type} events from all sites."
      description: The response is grouped by both device ip and date
      parameters:
        - name: source_ip
          in: query
          description: Get events of a device indicated by its IP address
          schema:
            type: string
            format: IP string
        - name: groups
          in: query
          description: Get events of a group by group id
          schema:
            type: integer
            format: integer
        - name: start_time
          in: query
          description: Get events happened after start_time
          schema:
            type: string
            format: unix timestamp
        - name: end_time
          in: query
          description: Get events happened before end_time
          schema:
            type: string
            format: unix timestamp
        - name: groupBy
          in: query
          description: 'group events by device ip or site, the default value is "device"'
          schema:
            type: string
        - name: in
          in: query
          description: 'group events by {hour, day, month}, the default value is "day"'
          schema:
            type: string
        - name: type
          in: path
          description: event type
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: An array of events
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/event-type-count-responses"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Event not found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/events/site/{siteId}/current":
    get:
      tags:
        - Events
      summary: Get all events which is currently triggered from a site.
      description: The response is grouped by device IP
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: An array
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/current-event-responses"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Event not found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/events/site/{siteId}/type/{type}/current":
    get:
      tags:
        - Events
      summary: "Get {type} events which is currently triggered from a site."
      description: The response is grouped by device IP
      parameters:
        - name: type
          in: path
          description: event type
          required: true
          schema:
            type: integer
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: An array
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/current-event-type-responses"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Event not found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/events/type/{type}/current":
    get:
      tags:
        - Events
      summary: "Get {type} events which is currently triggered from all sites."
      description: The response is grouped by device IP
      parameters:
        - name: type
          in: path
          description: event type
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: An array
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/current-event-type-responses"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Event not found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/events/site/{siteId}/device/ip/{ip}/current":
    get:
      tags:
        - Events
      summary: Get current triggered events of a device
      description: >-
        The response is an array of object, which includes triggered event types
        and timestamp
      parameters:
        - name: ip
          in: path
          description: device IP
          required: true
          schema:
            type: integer
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: An array
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/current-event-device-responses"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Event not found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/events/site/{siteId}/ack/all":
    post:
      tags:
        - Events
      summary: Ack all events
      description: Ack all events
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: Event category
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  type: integer
                  description: category of an event
              description: "10: system / 11: none system / 0: all"
              example:
                category: 10
      responses:
        "200":
          description: Events are acked
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to ack events
          content: {}
      security:
        - Bearer: []
  "/api/events/site/{siteId}/ack":
    post:
      tags:
        - Events
      summary: Ack events
      description: TODO
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: Event ID
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: array
                  description: an array of events IDs
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: ID of an event
              description: Events
              example:
                id:
                  - "1"
                  - "2"
                  - "3"
          multipart/form-data:
            schema:
              type: object
              properties:
                id:
                  type: array
                  description: an array of events IDs
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: ID of an event
              description: Events
              example:
                id:
                  - "1"
                  - "2"
                  - "3"
        required: true
      responses:
        "200":
          description: Events are acked
          content: {}
        "400":
          description: Incorrect event parameters.
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Event IDs do not exist or the events were already acked
          content: {}
      security:
        - Bearer: []
  "/api/events/source_ip/{ip}":
    get:
      tags:
        - Events
      summary: "Get {count} recent events"
      description: TODO
      parameters:
        - name: count
          in: query
          description: Number of recent events you want to get
          schema:
            type: integer
            format: integer
        - name: offset
          in: query
          description: >-
            Skip {offset} events. The offset parameter should be divisible by
            count
          schema:
            type: integer
            format: integer
        - name: ip
          in: path
          description: "Get events whose source ip is {ip}"
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: An array of events
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Event not found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/groups/site/{siteId}":
    get:
      tags:
        - Groups
      summary: Get all group information
      description: TODO
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: An array groups
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/group_query_response"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Group not found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    post:
      tags:
        - Groups
      summary: Add a new group
      description: TODO
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: Group information
        content:
          application/json:
            schema:
              type: object
              properties:
                parent_id:
                  type: integer
                  description: The parent group's ID
                name:
                  type: string
                  description: The name of the group
                description:
                  type: string
                  description: The description of the group
                x:
                  $ref: "#/components/schemas/x"
                y:
                  $ref: "#/components/schemas/y"
              description: Group object
              example:
                parent: 0
                name: Subgroup
                description: Sample group paramters
                x: 100
                y: 100
          multipart/form-data:
            schema:
              type: object
              properties:
                parent_id:
                  type: integer
                  description: The parent group's ID
                name:
                  type: string
                  description: The name of the group
                description:
                  type: string
                  description: The description of the group
                x:
                  $ref: "#/components/schemas/x"
                "y":
                  $ref: "#/components/schemas/y"
              description: Group object
              example:
                parent: 0
                name: Subgroup
                description: Sample group paramters
                x: 100
                "y": 100
        required: true
      responses:
        "200":
          description: A group is added
          content: {}
        "400":
          description: Incorrect group parameters.
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
      security:
        - Bearer: []
  "/api/groups/site/{siteId}/id/{id}":
    put:
      tags:
        - Groups
      summary: Update a group
      description: TODO
      parameters:
        - name: id
          in: path
          description: The ID of the group
          required: true
          schema:
            type: integer
            format: integer
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: "Group information, all parameters are optional"
        content:
          application/json:
            schema:
              type: object
              properties:
                parent_id:
                  type: integer
                  description: The parent group's ID
                name:
                  type: string
                  description: The name of the group
                description:
                  type: string
                  description: The description of the group
                x:
                  $ref: "#/components/schemas/x"
                y:
                  $ref: "#/components/schemas/y"
              description: Group object
            examples:
              Update a group:
                value:
                  parent: 0
                  name: Subgroup
                  description: Sample group paramters
                  x: 100
                  y: 100
              Move a group:
                value:
                  parent_id: 12
        required: true
      responses:
        "200":
          description: A group is updated
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Incorrect group parameters.
          content: {}
      security:
        - Bearer: []
    delete:
      tags:
        - Groups
      summary: Delete a group by its ID
      description: TODO
      parameters:
        - name: id
          in: path
          description: The ID of the group
          required: true
          schema:
            type: integer
            format: integer
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Group deleted
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Group not found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/groups/site/{siteId}/children/{id}":
    get:
      tags:
        - Groups
      summary: Get group information of all groups of a parent
      description: TODO
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
        - name: id
          in: path
          description: The ID of the group
          required: true
          schema:
            type: integer
            format: integer
      responses:
        "200":
          description: An array of groups
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Group not found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/groups/id/{id}/background/site/{siteId}":
    get:
      tags:
        - Groups
      summary: Get group background image
      description: TODO
      parameters:
        - name: id
          in: path
          description: The ID of the group
          required: true
          schema:
            type: integer
            format: integer
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Image data
          content:
            application/json:
              schema:
                type: object
                example:
                  path: resources/tmp/bHTCHQUKiiNYv6OY.pdf
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: This group has no background images
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Groups
      summary: Set group background image
      description: TODO
      parameters:
        - name: id
          in: path
          description: The ID of the group
          required: true
          schema:
            type: integer
            format: integer
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data
              properties:
                data:
                  type: string
                  description: config file
                  format: binary
          multipart/form-data:
            schema:
              required:
                - data
              properties:
                data:
                  type: string
                  description: config file
                  format: binary
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Group not found or this group does not have a background image
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    delete:
      tags:
        - Groups
      summary: Remove group background image
      description: TODO
      parameters:
        - name: id
          in: path
          description: The ID of the group
          required: true
          schema:
            type: integer
            format: integer
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: "OK, Group background image is deleted"
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Group not found or this group does not have a background image
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/groups/id/{id}/icon/site/{siteId}":
    get:
      tags:
        - Groups
      summary: Get group icon image
      description: TODO
      parameters:
        - name: id
          in: path
          description: The ID of the group
          required: true
          schema:
            type: integer
            format: integer
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Image data
          content:
            application/json:
              schema:
                type: object
                example:
                  path: resources/tmp/bHTCHQUKiiNYv6OY.pdf
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Group of this ID does not exist
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Groups
      summary: Set group icon
      description: It allows either a .jpg or a .png image
      parameters:
        - name: id
          in: path
          description: The ID of the group
          required: true
          schema:
            type: integer
            format: integer
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data
              properties:
                data:
                  type: string
                  description: image data
                  format: binary
          multipart/form-data:
            schema:
              required:
                - data
              properties:
                data:
                  type: string
                  description: image data
                  format: binary
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Group not found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    delete:
      tags:
        - Groups
      summary: Remove group icon
      description: TODO
      parameters:
        - name: id
          in: path
          description: The ID of the group
          required: true
          schema:
            type: integer
            format: integer
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: "OK, Group background image is deleted"
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Group not found or this group does not have an icon
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  /api/links:
    get:
      tags:
        - Links
      summary: Get all links
      description: Get all links from devices
      responses:
        "200":
          description: An array of links
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Link not found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  /api/links/site/{siteId}:
    post:
      tags:
        - Links
      summary: Add a link
      description: Add a link between the source port and the destination port of the two devices
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: Link Information, when adding an IEDGroup link, assign customer_label as needed.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/link-information"
            examples:
              IEDGroup link:
                value:
                  from_device: 192.168.123.152
                  from_port: 1
                  group: 0
                  to_device: 192.168.123.151
                  to_port: 2
                  use_custom_label: true
                  from_port_label: from_port_label
                  to_port_label: to_port_label
              general link:
                value:
                  from_device: 192.168.123.152
                  from_port: 1
                  group: 0
                  to_device: 192.168.123.151
                  to_port: 2
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to add a link
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  /api/links/group/{group}/site/{siteId}:
    get:
      tags:
        - Links
      summary: Get all links of a group
      description: TODO
      parameters:
        - name: group
          in: path
          description: Get all links of a group
          required: true
          schema:
            type: integer
            format: integer
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: An array of links
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Link not found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/links/id/{id}/site/{siteId}":
    get:
      tags:
        - Links
      summary: Get a link
      description: Get a link by its ID
      parameters:
        - name: id
          in: path
          description: The ID of a link
          required: true
          schema:
            type: integer
            format: integer
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: The attributes of link `id`.
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Link not found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Links
      summary: Update a link
      description: Update link attributes such as link label
      parameters:
        - name: id
          in: path
          description: The ID of a link
          required: true
          schema:
            type: integer
            format: integer
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: "Link attributes, all parameters are optional"
        content:
          application/json:
            schema:
              type: object
              properties:
                use_custom_label:
                  type: boolean
                  description: Set to true to show custom label on topology
                from_port_label:
                  type: string
                  description: The label of from port
                to_port_label:
                  type: string
                  description: The label of to port
              description: Link object
          multipart/form-data:
            schema:
              type: object
              properties:
                use_custom_label:
                  type: boolean
                  description: Set to true to show custom label on topology
                from_port_label:
                  type: string
                  description: The label of from port
                to_port_label:
                  type: string
                  description: The label of to port
              description: Link object
        required: true
      responses:
        "200":
          description: OK.
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Link not found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    delete:
      tags:
        - Links
      summary: Remove a link from network
      description: TODO
      parameters:
        - name: id
          in: path
          description: The ID of a link
          required: true
          schema:
            type: integer
            format: integer
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: OK.
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Link not found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/links/id/{id}/traffic":
    get:
      tags:
        - Links
      summary: Get the traffic of a link
      description: TODO
      parameters:
        - name: id
          in: path
          description: The ID of a link
          required: true
          schema:
            type: integer
            format: integer
        - name: data_type
          in: query
          description: "1: utilization, 2: error packet count"
          required: true
          schema:
            type: integer
            format: "1,2"
        - name: query_type
          in: query
          description: "1: one day, 2: interval"
          required: true
          schema:
            type: integer
            format: "1,2"
        - name: date
          in: query
          description: The date of query. (Use when query_type = 1)
          schema:
            type: integer
            format: unix timestamp
        - name: start_time
          in: query
          description: The start time of query. (Use when query_type = 2)
          schema:
            type: integer
            format: unix timestamp
        - name: end_time
          in: query
          description: The end time of query. (Use when query_type = 2)
          schema:
            type: integer
            format: unix timestamp
      responses:
        "200":
          description: An array of traffic
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Traffic not found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/links/traffic/realtime/site/{siteId}":
    get:
      tags:
        - Links
      summary: Get realtime traffic of all links
      description: TODO
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
        - name: reload
          in: query
          description: >-
            Set to true to force MXview One server to reload traffic load of all
            devices
          schema:
            type: boolean
        - name: orderBy
          in: query
          description: |
            orderBy:
              * 1: input
              * 2: output
            default is order by link ID
          schema:
            type: integer
        - name: count
          in: query
          description: "get top {count} links"
          schema:
            type: integer
      responses:
        "200":
          description: An array of link traffics
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/link-traffic-parameters"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Link not found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/links/id/{id}/severityThreshold/site/{siteId}":
    get:
      tags:
        - Links
      summary: Get a link's severity and threshold conditions
      description: Get a link's severity and threshold conditions by its ID
      parameters:
        - name: id
          in: path
          description: The ID of a link
          required: true
          schema:
            type: integer
            format: integer
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: The severity and threshold attributes of link `id`.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/link-severity-threshold-parameters"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Link not found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Links
      summary: Update a link's severity and threshold conditions
      description: Update a link's severity and threshold conditions
      parameters:
        - name: id
          in: path
          description: The ID of a link
          required: true
          schema:
            type: integer
            format: integer
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: "Link severity and threshold attributes, all parameters are optional"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/link-severity-threshold-parameters"
        required: true
      responses:
        "200":
          description: OK.
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Link not found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  "/api/wireless/site/{siteId}/clients":
    get:
      tags:
        - Wireless
      summary: Get all wireless clients
  "/api/wireless/site/{siteId}/aps":
    get:
      tags:
        - Wireless
      summary: Get all wireless aps
  "/api/wireless/site/{siteId}/client/{clientId}/history":
    get:
      tags:
        - Wireless
      summary: Get all client roaming history
      parameters:
        - name: start_time
        - name: end_time
  "/api/wireless/site/{siteId}/ap/{apId}/client_list":
    get:
      tags:
        - Wireless
      summary: Get all clients of a given ap
  "/api/wireless/site/{siteId}/client_list":
    get:
      tags:
        - Wireless
      summary: Get all clients of all aps
  "/api/wireless/site/{siteId}/ap/{apId}/history":
    get:
      tags:
        - Wireless
      summary: Get all ap roaming history
      parameters:
        - name: start_time
        - name: end_time
  "/api/wireless/site/{siteId}/ap/{apIdOrAll}/traffic":
    get:
      tags:
        - Wireless
      summary: Get traffic record in time range of a given ap, or all ap
      parameters:
        - name: apIdOrAll
          description: ap's id or literal `all`
        - name: start_time
        - name: end_time
  "/api/wireless/site/{siteId}/client/{clientId}/traffic":
    get:
      tags:
        - Wireless
      summary: Get traffic record in time range of a given client
      parameters:
        - name: start_time
        - name: end_time
  "/api/devices/site/{siteId}/id/{deviceId}/property/monitored":
    get:
      tags:
        - Devices
      summary: Get all properties that are monitored for a device
  "/api/devices/site/{siteId}/id/{deviceId}/property/trending/{propertyName}":
    get:
      tags:
        - Devices
      summary: Get property trending of a device
      parameters:
        - name: propertyName
          description: the snmp name of a device, e.g. wirelessStatusNoiseLevel
        - name: start_time
        - name: end_time
  "/api/virtualNodes/site/{siteId}/id/{virtualNodeId}":
    put:
      tags:
        - Virtual Nodes
      summary: Modify the virtual node
      parameters:
        - name: y
        - name: x

  "/api/actions/site/{siteId}":
    get:
      tags:
        - Actions
      summary: Get all actions
      description: TODO
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: An array of actions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/action-parameters-get"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: No actions found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    post:
      tags:
        - Actions
      summary: Add a new action
      description: >-
        *If type is SOUND the content-type should be multipart/formData and
        parameter data should be a wav file, otherwise it should be
        x-www-urlencoded.
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: Action parameters
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/action-parameters"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/action-parameters"
        required: true
      responses:
        "200":
          description: Ok.
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to add a action
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/actions/id/{id}/site/{siteId}":
    put:
      tags:
        - Actions
      summary: Update an existing action
      description: >-
        *If type is SOUND the content-type should be multipart/formData and
        parameter data should be a wav file, otherwise it should be
        x-www-urlencoded.
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
        - name: id
          in: path
          description: The ID of the action to be updated
          required: true
          schema:
            type: integer
      requestBody:
        description: >-
          Action parameters. name and type are optional. phone must be set if
          type is SMS. email must be set if type is Email. mobile must be set if
          type is MOBILE. filename must be set if type is SOUND or PROGRAM.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/action-parameters"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/action-parameters"
        required: true
      responses:
        "200":
          description: Ok.
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: The action does not exist.
          content: {}
        "422":
          description: Failed to add a action
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    delete:
      tags:
        - Actions
      summary: Delete existing action
      description: TODO
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
        - name: id
          in: path
          description: The ID of the action to be updated
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Ok.
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: The action does not exist.
          content: {}
        "422":
          description: Failed to delete a action
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/actions/email/site/{siteId}":
    get:
      tags:
        - Actions
      summary: Get action email settings
      description: Get email settings
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Email settings
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/action-emails"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Actions
      summary: Update action email settings
      description: Update email settings
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: Email parameters. All parameters are optional.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/action-emails"
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/notifications/site/{siteId}":
    get:
      tags:
        - Notifications
      summary: Get all notifications
      description: TODO
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: An array of notifications
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/notification-parameters"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: No actions found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    post:
      tags:
        - Notifications
      summary: Add a new notification
      description: |
        EventType=268435491, "RogueDeviceFound"
        Parameter device_ips with empty array.
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: |
          Notification parameters
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/notification-parameters"
            examples:
              oid-notification:
                value:
                  name: test
                  type: 65537
                  device_ips:
                    - 192.168.4.201
                    - 192.168.4.221
                  actions:
                    - 1
                  email_content: test
                  digest:

              rouge-notification:
                value:
                  name: RogueDeviceFound
                  type: 268435491
                  device_ips: []
                  actions:
                    - 2
                  email_content: hello
                  digest:
        required: true

      responses:
        "200":
          description: Ok.
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to add a notification
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/notifications/id/{id}/site/{siteId}":
    put:
      tags:
        - Notifications
      summary: Update an existing notification
      description: TODO
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
        - name: id
          in: path
          description: The ID of the notification to be updated
          required: true
          schema:
            type: integer
      requestBody:
        description: Notification parameters. All parameters are optional
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/notification-parameters"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/notification-parameters"
        required: true
      responses:
        "200":
          description: Ok.
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: The notification does not exist.
          content: {}
        "422":
          description: Failed to add a notification
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    delete:
      tags:
        - Notifications
      summary: Delete existing notification
      description: TODO
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
        - name: id
          in: path
          description: The ID of the notification to be updated
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Ok.
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: The notification does not exist.
          content: {}
        "422":
          description: Failed to delete a notification
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/notifications/site/{siteId}/test/slack":
    post:
      tags:
        - Notifications
      summary: Test Slack Webhook
      description: This command will ask "Master" to send a test message to Slack
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: Webhook
        content:
          application/json:
            schema:
              type: object
              properties:
                im_webhook:
                  type: string
                  description: the webhook url of slack
        required: true
      responses:
        "200":
          description: Ok.
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
      security:
        - Bearer: []
  "/api/notifications/site/{siteId}/test/teams":
    post:
      tags:
        - Notifications
      summary: Test Microsoft Teams Webhook
      description: This command will ask "Master" to send a test message to Teams
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: Webhook
        content:
          application/json:
            schema:
              type: object
              properties:
                im_webhook:
                  type: string
                  description: the webhook url of Microsoft Teams
        required: true
      responses:
        "200":
          description: Ok.
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
      security:
        - Bearer: []
  /api/sites:
    get:
      tags:
        - Management
        - Sites
      summary: Get all unhidden sites
      description: TODO
      responses:
        "200":
          description: An array of sites
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/site-information"
        "401":
          description: The authorization token is invalid.
          content: {}
        "404":
          description: No connected sites
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  /api/sites/hidden:
    get:
      tags:
        - Management
        - Sites
      summary: Get all hidden sites
      description: >-
        Getting information from hidden sites would receive a 404 response with
        error code "Not accessible" (-120)
      responses:
        "200":
          description: An array of sites
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/site-information"
        "401":
          description: The authorization token is invalid.
          content: {}
        "404":
          description: No connected sites
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/sites/site/{siteId}":
    put:
      tags:
        - Management
        - Sites
      summary: Update a site's information
      description: TODO
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: Site information
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/site-information-set"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/site-information-set"
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: The site does not exist
          content: {}
        "422":
          description: Incorrect parameters
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    delete:
      tags:
        - Management
        - Sites
      summary: Remove an offline site
      description: TODO
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: OK
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: The site does not exist
          content: {}
        "422":
          description: "The site exists, but is online. (You cannot remove an online site!)"
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  /api/sites/online:
    get:
      tags:
        - Management
        - Sites
      summary: Get all online sites
      description: TODO
      responses:
        "200":
          description: An array of online sites
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/site-information"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: No online sites
          content: {}
      security:
        - Bearer: []
  "/api/sites/site/{siteId}/playback/status":
    get:
      tags:
        - Management
        - Sites
      summary: Get playback status
      description: Get playback status
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Playback status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/site-playback-status"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/sites/site/{siteId}/securityView/settings":
    get:
      tags:
        - Management
        - Sites
      summary: get security view profile and color settings
      description: TODO
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Security view profile and color settings
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/security-view-settings"
        "400":
          description: Invalid parameters
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
      security:
        - Bearer: []
    put:
      tags:
        - Security
        - Management
        - Sites
      summary: set security view profile and color settings
      description: set security view profile and color settings
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: security view profile and color
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/security-view-settings"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/security-view-settings"
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "400":
          description: Invalid parameters
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
      security:
        - Bearer: []
  "/api/sites/site/{siteId}/securityView/profiles":
    get:
      tags:
        - Security
        - Management
        - Sites
      summary: get all profiles of security view
      description: TODO
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: profiles of security views
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/security-profile-items"
        "400":
          description: Invalid parameters
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
      security:
        - Bearer: []
  "/api/sites/site/{siteId}/securityView/profiles/checkItems":
    get:
      tags:
        - Security
        - Management
        - Sites
      summary: get custom security view check items for all device series
      description: TODO
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: custom security view check items
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/custom-security-profile-items"
        "400":
          description: Invalid parameters
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
      security:
        - Bearer: []
    post:
      tags:
        - Security
        - Management
        - Sites
      summary: set custom security view check items for all device series
      description: note that this API REPLACE ALL checking items instead of updating them
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: >-
          an object which contains device series and their corresponding
          security items
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/custom-security-profile-items"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/custom-security-profile-items"
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "400":
          description: Invalid parameters
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
      security:
        - Bearer: []
  "/api/sites/site/{siteId}/legacyDevicePropertyNames":
    get:
      tags:
        - Management
        - Sites
      summary: Get all device property names from a site
      description: Get MXview One-Server style device property names
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: An array of device property names
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/legacy-device-property-names"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
      security:
        - Bearer: []
  "/api/sites/site/{siteId}/languages":
    get:
      tags:
        - Management
        - Sites
      summary: Get all language supported by the site
      description: This API returns all the language files in assets/i18n
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: An array of language files
          content:
            application/json:
              schema:
                type: array
                example:
                  - en_US.json
                  - zh_TW.json
                  - zh_CN.json
                items:
                  type: string
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
      security:
        - Bearer: []
  "/api/sites/site/{siteId}/icon":
    get:
      tags:
        - Management
        - Sites
      summary: Get the icon of a site
      description: Get the path of an icon file of a site
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: The file path of the icon
          content:
            application/json:
              schema:
                type: string
                example: icons/sites/0123456789ABCDEF.png
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: The icon of the site does not exist or the site id is incorrect
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Management
        - Sites
      summary: Change a site's icon
      description: TODO
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - icon
              properties:
                icon:
                  type: string
                  description: "The icon image, only allow png format"
                  format: binary
          multipart/form-data:
            schema:
              required:
                - icon
              properties:
                icon:
                  type: string
                  description: "The icon image, only allow png format"
                  format: binary
        required: true
      responses:
        "200":
          description: The site's icon is changed
          content: {}
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    delete:
      tags:
        - Management
        - Sites
      summary: Remove the icon of a site
      description: Remove the icon of a site
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: The icon for the site is deleted
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: The icon of the site does not exist or the site id is incorrect
          content: {}
      security:
        - Bearer: []
  "/api/sites/site/{siteId}/database/backup":
    get:
      tags:
        - Sites
        - Management
      summary: Backup current database to the default db_backup path
      description: A user can give the backup a name and backup it
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
        - name: name
          in: query
          description: The name of the backed up database
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK. the DB is backed up
          content: {}
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
      security:
        - Bearer: []
  "/api/sites/site/{siteId}/preferences/managementInterfaces":
    get:
      tags:
        - Management
        - Sites
      summary: Get the management interfaces of a site
      description: "Get the default HTTP, HTTPS, telnet and ssh port settings of a site."
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: The information of a site's management interfaces.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/management-interfaces"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Management
        - Sites
      summary: Update the management interfaces of a site
      description: "Update default HTTP, HTTPS, telnet and ssh port settings of a site."
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: Management Interface parameters. All of the parameters are optional.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/management-interfaces"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/management-interfaces"
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
      security:
        - Bearer: []
  "/api/sites/site/{siteId}/preferences/backgroundDiscovery":
    get:
      tags:
        - Management
        - Sites
      summary: Get the background discovery status of a site
      description: Get whether the background discovery is enabled
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: The status of background discovery
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/background-discovery"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Management
        - Sites
      summary: Enable/disable background discovery of a site
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: Enable or disable background discovery
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/background-discovery"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/background-discovery"
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
      security:
        - Bearer: []
  "/api/sites/site/{siteId}/preferences/access":
    get:
      tags:
        - Management
        - Sites
      summary: Get the global device access parameters of a site
      description: Get polling intervals and consecutive polling failure warning threshold.
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Global device access parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/device-access-parameters-arr"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Management
        - Sites
      summary: Update global device access parameters of a site
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: Device access parameters
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/device-access-parameters"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/device-access-parameters"
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
      security:
        - Bearer: []
  "/api/sites/site/{siteId}/preferences/login/messages":
    get:
      tags:
        - Management
        - Sites
      summary: Get login messages from a site
      description: Get successfully login message and failed login message from a site
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Login messages
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/login-messages"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Incorrect site ID
          content: {}
        "422":
          description: Failed to get login messages
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Management
        - Sites
      summary: Update login messages of a site
      description: Update successfully login message and failed login message of a site
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: Login message parameters
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/login-messages"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/login-messages"
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to update login messages
          content: {}
      security:
        - Bearer: []
  "/api/sites/site/{siteId}/preferences/login/suppress":
    get:
      tags:
        - Management
        - Sites
      summary: >-
        Get suppress options of login fail records and default password
        notification
      description: TODO
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: >-
            Suppress options of login fail records and default password
            notification
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/suppress-options"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Incorrect site ID
          content: {}
        "422":
          description: Failed to get the suppress options
          content: {}
      security:
        - Bearer: []
  /api/users/login/records/succeed:
    get:
      tags:
        - Users
      summary: Get the last login record
      description: Get the last login record
      responses:
        "200":
          description: The last login record
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/login-succeed-record"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Incorrect site ID
          content: {}
        "422":
          description: Failed to get the record
          content: {}
      security:
        - Bearer: []
  /api/users/login/records/fail:
    get:
      tags:
        - Users
      summary: Get the recent three login fail records
      description: Get the recent three login fail records
      responses:
        "200":
          description: The recent three login fails
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/login-fail-records"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Incorrect site ID
          content: {}
        "422":
          description: Failed to get the record
          content: {}
      security:
        - Bearer: []
    delete:
      tags:
        - Users
      summary: Clear all login fail records
      description: Clear all login fail records
      responses:
        "200":
          description: All fail records are cleared
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/suppress-options"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Incorrect site ID
          content: {}
        "422":
          description: Failed to clear the record
          content: {}
      security:
        - Bearer: []
  "/api/users/{username}/isDefaultPassword":
    get:
      tags:
        - Users
      summary: Get is this default account (username/password)
      description: Get is this default account (username/password)
      parameters:
        - name: username
          in: path
          description: The username of the account you want to add
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: "default: true. indicate the password is not changed"
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Incorrect site ID
          content: {}
        "422":
          description: Failed to get this information
          content: {}
      security:
        - Bearer: []
  "/api/sites/site/{siteId}/preferences/login/suppress/loginFailRecords":
    put:
      tags:
        - Management
        - Sites
      summary: Enable/Disable the display of login fail records
      description: TODO
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: Suppress parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                enable:
                  type: boolean
                  description: True/false
              example:
                enable: "true,"
          multipart/form-data:
            schema:
              type: object
              properties:
                enable:
                  type: boolean
                  description: True/false
              example:
                enable: "true,"
        required: true
      responses:
        "200":
          description: >-
            Suppress options of login fail records and default password
            notification
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/suppress-options"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Incorrect site ID
          content: {}
        "422":
          description: Failed to get the suppress options
          content: {}
      security:
        - Bearer: []
  "/api/sites/site/{siteId}/preferences/login/suppress/defaultPasswordNotification":
    put:
      tags:
        - Management
        - Sites
      summary: Enable/Disable the display of default password notification
      description: TODO
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: Suppress parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                enable:
                  type: boolean
                  description: True/false
              example:
                enable: "true,"
          multipart/form-data:
            schema:
              type: object
              properties:
                enable:
                  type: boolean
                  description: True/false
              example:
                enable: "true,"
        required: true
      responses:
        "200":
          description: >-
            Suppress options of login fail records and default password
            notification
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/suppress-options"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Incorrect site ID
          content: {}
        "422":
          description: Failed to get the suppress options
          content: {}
      security:
        - Bearer: []
  "/api/sites/site/{siteId}/preferences/password_policy":
    get:
      tags:
        - Management
        - Sites
      summary: Get password policy settings of a site
      description: Get password policy settings of a site
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Password policy settings
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/password-policy"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Incorrect site ID
          content: {}
        "422":
          description: Failed to get password policy
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Management
        - Sites
      summary: Update password policy settings of a site
      description: Update password policy settings of a site
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: Password policy parameters
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/password-policy"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/password-policy"
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to update password policy
          content: {}
      security:
        - Bearer: []
  "/api/sites/site/{siteId}/preferences/account_lockout":
    get:
      tags:
        - Management
        - Sites
      summary: Get account lockout settings of a site
      description: Get account lockout settings of a site
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Account lockout settings
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/account-lockout"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Incorrect site ID
          content: {}
        "422":
          description: Failed to get account lockout settings
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Management
        - Sites
      summary: Update account lockout settings of a site
      description: Update account lockout settings of a site
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: account lockout parameters
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/account-lockout"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/account-lockout"
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to update account lockout settings
          content: {}
      security:
        - Bearer: []
  "/api/sites/site/{siteId}/preferences/device_alias":
    get:
      tags:
        - Management
        - Sites
      summary: Get device alias types of a site
      description: Get device alias prefix and postfix of a site
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Device alias types
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/device-alias-types"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Incorrect site ID
          content: {}
        "422":
          description: Failed to get device alias types
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Management
        - Sites
      summary: Update device alias types of a site
      description: Update device alias types of a site
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: device alias types
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/device-alias-types"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/device-alias-types"
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to update device alias types
          content: {}
      security:
        - Bearer: []
  "/api/sites/site/{siteId}/preferences/topology/style":
    get:
      tags:
        - Management
        - Sites
      summary: Get topology style of a site
      description: The topology style can be either normal or elbow
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: topology style
          content:
            application/json:
              schema:
                type: object
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Incorrect site ID
          content: {}
        "422":
          description: Failed to get topology style
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Management
        - Sites
      summary: Update topology style of a site
      description: Update topology style of a site
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: topology style
        content:
          application/json:
            schema:
              type: object
              properties:
                topology_style:
                  type: integer
                  description: |
                    Topology style:
                      * 0 - normal style
                      * 1 - elbow style
          multipart/form-data:
            schema:
              type: object
              properties:
                topology_style:
                  type: integer
                  description: |
                    Topology style:
                      * 0 - normal style
                      * 1 - elbow style
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to update bottom label types
          content: {}
      security:
        - Bearer: []
  "/api/sites/site/{siteId}/preferences/topology/poe":
    get:
      tags:
        - Management
        - Sites
      summary: Get show poe status of a site
      description: Get show poe status of a site
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Whether PoE status is to be displayed on topology
          content:
            application/json:
              schema:
                type: object
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Incorrect site ID
          content: {}
        "422":
          description: Failed to get show PoE status
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Management
        - Sites
      summary: Update show PoE status of a site
      description: Update show PoE status of a site
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: show PoE status
        content:
          application/json:
            schema:
              type: object
              properties:
                show_poe:
                  type: boolean
                  description: "true means show PoE status on topology, false otherwise"
          multipart/form-data:
            schema:
              type: object
              properties:
                show_poe:
                  type: boolean
                  description: "true means show PoE status on topology, false otherwise"
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to update show PoE status
          content: {}
      security:
        - Bearer: []
  "/api/sites/site/{siteId}/preferences/bottom_label":
    get:
      tags:
        - Management
        - Sites
      summary: Get bottom label type of a site
      description: Get bottom label type of a site
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Bottom label types
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bottom-label-types"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Incorrect site ID
          content: {}
        "422":
          description: Failed to get bottom label types
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Management
        - Sites
      summary: Update bottom label types of a site
      description: Update bottom label types of a site
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: bottom label types
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/bottom-label-types"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/bottom-label-types"
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to update bottom label types
          content: {}
      security:
        - Bearer: []
  "/api/sites/site/{siteId}/preferences/login_mode":
    get:
      tags:
        - Management
        - Sites
      summary: Get login mode of the site
      description: |
        login_mode:
          * 0: local
          * 1: Tacacs+, local
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Login mode
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/login-mode"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Incorrect site ID
          content: {}
        "422":
          description: Failed to get login mode
          content: {}
      security:
        - Bearer: []
  "/api/sites/site/{siteId}/preferences/tacacs/settings":
    get:
      tags:
        - Management
        - Sites
      summary: Get Tacacs+ settings
      description: Get Tacacs+ settings
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Tacacs+ server settings
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tacacs-settings"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Incorrect site ID
          content: {}
        "422":
          description: Failed to get tacacs settings
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Management
        - Sites
      summary: >-
        Update the Tacacs+ settings of a site, only used when login_mode is
        `Tacacs+, Local`
      description: Update the Tacacs+ settings of a site
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: Tacacs+ settings
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tacacs-settings"
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to update tacacs settings
          content: {}
      security:
        - Bearer: []
  "/api/sites/site/{siteId}/preferences/severityThreshold/link":
    get:
      tags:
        - Links
      summary: Get the default link severity and threshold conditions
      description: Get the default link severity and threshold condition
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: The default severity and threshold attributes
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/link-severity-threshold-parameters"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Link not found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Links
      summary: Update the default link severity and threshold conditions
      description: Update the default link severity and threshold conditions
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: "Link severity and threshold attributes, all parameters are optional"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/link-severity-threshold-parameters"
        required: true
      responses:
        "200":
          description: OK.
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Link not found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/sites/site/{siteId}/preferences/alerts":
    get:
      tags:
        - Management
        - Sites
      summary: Get system alerts of a site
      description: Get disk space alert of a site
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Alert types
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/system-alerts"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Incorrect site ID
          content: {}
        "422":
          description: Failed to get system alerts
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Management
        - Sites
      summary: Update system alerts of a site
      description: Update system alerts of a site
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: system alerts
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/system-alerts"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/system-alerts"
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to update system alerts
          content: {}
      security:
        - Bearer: []
  "/api/sites/site/{siteId}/preferences/availability/timeframe":
    get:
      tags:
        - Management
        - Sites
      summary: Get the timeframe of availability calculation of a site
      description: Get the timeframe of availability calculation of a site
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: availability timeframe
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/availability-timeframe"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Incorrect site ID
          content: {}
        "422":
          description: Failed to get availability timeframe
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Management
        - Sites
      summary: Update availability timeframe of a site
      description: Update availability timeframe of a site
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: availability timeframe
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/availability-timeframe"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/availability-timeframe"
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to update availability timeframe
          content: {}
      security:
        - Bearer: []
  "/api/sites/site/{siteId}/preferences/colors/link":
    get:
      tags:
        - Management
        - Sites
      summary: Get link color settings of a site
      description: >-
        Get link up color, link down color poe link color, rstp color, turboring
        color, turboring v2 color, turbo chain color, prp/hsr link colors of a
        site
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Link color
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/link-colors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Incorrect site ID
          content: {}
        "422":
          description: Failed to get link color
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Management
        - Sites
      summary: Update link color settings of a site
      description: Update link color settings of a site
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: link color settings
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/link-colors"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/link-colors"
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to update link color settings
          content: {}
      security:
        - Bearer: []
  "/api/sites/site/{siteId}/preferences/colors/background":
    get:
      tags:
        - Management
        - Sites
      summary: Get topology background color settings of a site
      description: Get topology background color of a site
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Background color
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/background-colors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Incorrect site ID
          content: {}
        "422":
          description: Failed to get topology background color
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Management
        - Sites
      summary: Update topology background color settings of a site
      description: Update topology background color settings of a site
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: background color settings
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/background-colors"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/background-colors"
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to update topology background color settings
          content: {}
      security:
        - Bearer: []
  "/api/sites/site/{siteId}/preferences/colors/traffic":
    get:
      tags:
        - Management
        - Sites
      summary: Get traffic load settings of a site
      description: Get traffic load settings of a site
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Traffic load settings
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/traffic-load-settings"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Incorrect site ID
          content: {}
        "422":
          description: Failed to get traffic load settings
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Management
        - Sites
      summary: Update traffic load settingsof a site
      description: Update traffic load settings of a site
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: traffic load settings
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/traffic-load-settings"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/traffic-load-settings"
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Failed to update traffic load settings
          content: {}
      security:
        - Bearer: []
  "/api/sites/site/{siteId}/preferences/custom_events":
    get:
      tags:
        - Management
        - Events
        - Sites
      summary: Get custom events from a site
      description: Get all custom events from a site
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Custom events
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/custom-events-with-id"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: No custom events in this site.
          content: {}
      security:
        - Bearer: []
    post:
      tags:
        - Management
        - Sites
      summary: Add a new custom event to a site
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: Custom event parameters
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/custom-events"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/custom-events"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: The result and the event ID of the added custom event
                example:
                  result: ok
                  id: "65793"
                  site_id: d9272062f646bbff
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
      security:
        - Bearer: []
  "/api/sites/site/{siteId}/preferences/custom_events/id/{id}":
    put:
      tags:
        - Management
        - Sites
      summary: update an existing custom event to a site
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
        - name: id
          in: path
          description: The ID of the custom event to be updated
          required: true
          schema:
            type: integer
      requestBody:
        description: Custom event parameters. All parameters are optional.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/custom-events"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/custom-events"
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: The event id does not exist.
          content: {}
      security:
        - Bearer: []
    delete:
      tags:
        - Management
        - Sites
      summary: Delete an existing custom event to a site
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
        - name: id
          in: path
          description: The ID of the custom event to be deleted
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: A custom event is deleted
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: The event id does not exist.
          content: {}
      security:
        - Bearer: []
  "/api/sites/site/{siteId}/preferences/opc_server/start":
    put:
      tags:
        - Management
        - OPC
        - Sites
      summary: Start the OPC server of a site
      description: Start the OPC server of a site
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: The OPC server is started
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Site not found
          content: {}
        "422":
          description: The OPC server is already started
          content: {}
      security:
        - Bearer: []
  "/api/sites/site/{siteId}/preferences/opc_server/stop":
    put:
      tags:
        - Management
        - OPC
        - Sites
      summary: Stop the OPC server of a site
      description: Stop the OPC server of a site
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: The OPC server is stopped
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Site not found
          content: {}
        "422":
          description: The OPC server is already stopped
          content: {}
      security:
        - Bearer: []
  "/api/sites/site/{siteId}/preferences/opc_server/status":
    get:
      tags:
        - Management
        - OPC
        - Sites
      summary: Get the status of the OPC server
      description: Get the status of the OPC server
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: the status of the OPC server
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: No custom opc tags in this site.
          content: {}
      security:
        - Bearer: []
  "/api/sites/site/{siteId}/preferences/custom_opc_tags":
    get:
      tags:
        - Management
        - OPC
        - Sites
      summary: Get custom opc tags from a site
      description: Get all custom opc tags from a site
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Custom opc tags
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/custom-opc-tags-with-id"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: No custom opc tags in this site.
          content: {}
      security:
        - Bearer: []
    post:
      tags:
        - Management
        - Sites
      summary: Add a new custom opc tag to a site
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: Custom opc tag parameters
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/custom-opc-tags"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/custom-opc-tags"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: The result and the event ID of the added custom opc tag
                example:
                  result: ok
                  id: "1"
                  site_id: d9272062f646bbff
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
      security:
        - Bearer: []

  "/api/opcua/server_setting":
    get:
      tags:
        - OPCUA
      summary: Get opcua server settings
      description: Get opcua server settings
      responses:
        "200":
          description: Custom opc tags
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/opcua_server_setting"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: No custom opc tags in this site.
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - OPCUA
      summary: Update the opcua server settings
      requestBody:
        description: Custom opc tag parameters
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/opcua_server_setting_req"
        required: true
      responses:
        "200":
          description: The opcua server settings updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/opcua_server_setting_res"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
      security:
        - Bearer: []

  "/api/opcua/opcua_tags":
    get:
      tags:
        - OPCUA
      summary: Get all opcua tag settings
      description: Get all opcua tag settings
      responses:
        "200":
          description: opcua tags inforamation, tag amount limit is 2000, total devices limit is 4000.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/opcua_tags"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: No custom opc tags in this site.
          content: {}
      security:
        - Bearer: []

    post:
      tags:
        - OPCUA
      summary: Add an opcua tag setting
      description: Add an opcua tag setting, tag amount limit is 2000, total devices limit is 4000.
      requestBody:
        description: opcua tag parameters
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/opcua_tags_change_req"
        required: true
      responses:
        "200":
          description: opcua tags add response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/opcua_tags_change_res"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: No custom opc tags in this site.
          content: {}
      security:
        - Bearer: []

    put:
      tags:
        - OPCUA
      summary: Modify an opcua tag setting
      description: >-
        Modify an opcua tag setting, tag amount limit is 2000, total devices limit is 4000. <br/>
        The backend compares the new device ID with the existing device ID, allowing for simultaneous addition, modification, and deletion.
      requestBody:
        description: opcua tag parameters
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/opcua_tags_change_req"
        required: true
      responses:
        "200":
          description: opcua tags add response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/opcua_tags_change_res"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: No custom opc tags in this site.
          content: {}
      security:
        - Bearer: []

    delete:
      tags:
        - OPCUA
      summary: Delete opcua tag setting
      description: >-
        An array of propertie name to be deleted
      requestBody:
        description: An array of propertie name to be deleted
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/opcua_tags_delete_req"
        required: true
      responses:
        "200":
          description: opcua tags add response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/opcua_tags_change_res"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: No custom opc tags in this site.
          content: {}
      security:
        - Bearer: []

  "/api/sites/site/{siteId}/preferences/custom_opc_tags/id/{id}":
    put:
      tags:
        - Management
        - Sites
      summary: update an existing custom opc tag to a site
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
        - name: id
          in: path
          description: The ID of the custom event to be updated
          required: true
          schema:
            type: integer
      requestBody:
        description: Custom opc tag parameters. All parameters are optional.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/custom-opc-tags"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/custom-opc-tags"
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: The tag id does not exist.
          content: {}
      security:
        - Bearer: []
    delete:
      tags:
        - Management
        - Sites
      summary: Delete an existing custom opc tag to a site
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
        - name: id
          in: path
          description: The ID of the custom opc tag to be deleted
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: A custom opc tag is deleted
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: The tag id does not exist.
          content: {}
      security:
        - Bearer: []
  "/api/sites/site/{siteId}/mxview/version":
    get:
      tags:
        - Sites
      summary: Get the version of an MXview One server
      description: Get the version of an MXview One server
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: The version of MXview One
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-server-version"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: MXview One server version is not founded
          content: {}
      security:
        - Bearer: []
  "/api/sites/site/{siteId}/topology/group/{id}":
    put:
      tags:
        - Management
        - Sites
      summary: Update topology
      description: Update topology
      parameters:
        - name: id
          in: path
          description: Group ID
          required: true
          schema:
            type: integer
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: Parameters for auto topology
        content:
          application/json:
            schema:
              type: object
              properties:
                advanced:
                  type: boolean
                  description: Analyze your arp table if it is set to true
                verified:
                  type: boolean
                  description: Verify the link if it exists in two devices' lldp tables
              description: Parameters used for Auto Topology
          multipart/form-data:
            schema:
              type: object
              properties:
                advanced:
                  type: boolean
                  description: Analyze your arp table if it is set to true
                verified:
                  type: boolean
                  description: Verify the link if it exists in two devices' lldp tables
              description: Parameters used for Auto Topology
        required: true
      responses:
        "200":
          description: An array of links on the group
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: No online sites
          content: {}
      security:
        - Bearer: []
    post:
      tags:
        - Management
        - Sites
      summary: Create or update topology
      description: Create or update topology
      parameters:
        - name: id
          in: path
          description: Group ID
          required: true
          schema:
            type: integer
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: Parameters for auto topology
        content:
          application/json:
            schema:
              type: object
              properties:
                advanced:
                  type: boolean
                  description: Analyze your arp table if it is set to true
                verified:
                  type: boolean
                  description: Verify the link if it exists in two devices' lldp tables
              description: Parameters used for Auto Topology
          multipart/form-data:
            schema:
              type: object
              properties:
                advanced:
                  type: boolean
                  description: Analyze your arp table if it is set to true
                verified:
                  type: boolean
                  description: Verify the link if it exists in two devices' lldp tables
              description: Parameters used for Auto Topology
        required: true
      responses:
        "200":
          description: An array of links on the group
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: No online sites
          content: {}
      security:
        - Bearer: []
  /api/sites/scan-range/site/{siteId}:
    get:
      tags:
        - Management
        - Sites
      summary: Get all scan ranges of a site
      description: TODO
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: An array of scan range objects
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: No scan ranges found
          content: {}
      security:
        - Bearer: []
    post:
      tags:
        - Management
        - Sites
      summary: Add/Modify the scan range into the specified site and scan
      description: Add/Modify the scan range into the specified site and scan
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: A scan-range object
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/scan-range-ori-req"
                - $ref: "#/components/schemas/scan-range-new-req"
                - $ref: "#/components/schemas/scan-range-new-req-ex"
            examples:
              Oringinal:
                value:
                  - start: 192.168.127.1
                    end: 192.168.127.254
                    group_id: 0
                    name: Sample scan range 1
                    active: true
                  - start: 192.168.128.1
                    end: 192.168.128.254
                    group_id: 0
                    name: Sample scan range 2
                    active: false
              With Adding to Baseline Flag:
                value:
                  add_to_baseline: true
                  scan_range:
                    - start: 192.168.127.1
                      end: 192.168.127.254
                      group_id: 0
                      name: Sample scan range 1
                      active: true
                    - start: 192.168.128.1
                      end: 192.168.128.254
                      group_id: 0
                      name: Sample scan range 2
                      active: false
              Background_scan and Conflict_scan:
                value:
                  add_to_baseline: true
                  scan_range:
                    - start: 192.168.127.1
                      end: 192.168.127.254
                      group_id: 0
                      name: Sample scan range 1
                      active: true
                      background_scan: true
                      conflict_scan: false
                    - start: 192.168.128.1
                      end: 192.168.128.254
                      group_id: 0
                      name: Sample scan range 2
                      active: false
                      background_scan: true
                      conflict_scan: false
        required: true
      responses:
        "200":
          description: The discovery process is started.
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: No scan ranges found
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Management
        - Sites
      summary: Add/Modify the scan range into the specified site without scan
      description: Add/Modify the scan range into the specified site without scan
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: A scan-range object
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/scan-range-ori-req"
                - $ref: "#/components/schemas/scan-range-new-req"
                - $ref: "#/components/schemas/scan-range-new-req-ex"
            examples:
              Oringinal:
                value:
                  - start: 192.168.127.1
                    end: 192.168.127.254
                    group_id: 0
                    name: Sample scan range 1
                    active: true
                  - start: 192.168.128.1
                    end: 192.168.128.254
                    group_id: 0
                    name: Sample scan range 2
                    active: false
              With Adding to Baseline Flag:
                value:
                  add_to_baseline: true
                  scan_range:
                    - start: 192.168.127.1
                      end: 192.168.127.254
                      group_id: 0
                      name: Sample scan range 1
                      active: true
                    - start: 192.168.128.1
                      end: 192.168.128.254
                      group_id: 0
                      name: Sample scan range 2
                      active: false
              Background_scan and Conflict_scan:
                value:
                  add_to_baseline: true
                  scan_range:
                    - start: 192.168.127.1
                      end: 192.168.127.254
                      group_id: 0
                      name: Sample scan range 1
                      active: true
                      background_scan: true
                      conflict_scan: false
                    - start: 192.168.128.1
                      end: 192.168.128.254
                      group_id: 0
                      name: Sample scan range 2
                      active: false
                      background_scan: true
                      conflict_scan: false
        required: true
      responses:
        "200":
          description: The discovery process is started.
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: No scan ranges found
          content: {}
      security:
        - Bearer: []
  "/api/sites/site/{siteId}/available_com_ports":
    get:
      tags:
        - Management
        - Sites
        - Actions
      summary: Get all available COM ports of a site
      description: TODO
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: An array of COM ports
          content:
            application/json:
              schema:
                type: array
                description: COM ports
                example:
                  - ports:
                      - 1
                      - 3
                    site_id: abced12345678
                items:
                  type: object
                  properties:
                    site_id:
                      type: string
                      description: Site ID
                    ports:
                      type: integer
                      description: COM ports
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: No available COM ports found
          content: {}
      security:
        - Bearer: []
  "/api/sites/site/{siteId}/ui_profiles":
    get:
      tags:
        - Management
        - Sites
      summary: Get the user profile of a site
      description: Get the files list of the profile folder of a site
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: The file list of the user profiles
          content:
            application/json:
              schema:
                type: string
                example:
                  - default
                  - nocOperator
                  - nocUser
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: The icon of the site does not exist or the site id is incorrect
          content: {}
      security:
        - Bearer: []
  "/api/sites/site/{siteId}/timezone":
    get:
      tags:
        - Management
        - Sites
      summary: Get the difference between UTC and local timezone (in minutes)
      description: >-
        Get the difference between UTC and local timezone (in minutes), for
        example, UTC+8 would reply -480
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: An array of timezone difference
          content:
            application/json:
              schema:
                type: integer
                example:
                  - -480
        "401":
          description: The authorization token is invalid.
          content: {}
        "404":
          description: The icon of the site does not exist or the site id is incorrect
          content: {}
      security:
        - Bearer: []
  /api/v2/sites/site/{siteId}/timezone:
    get:
      tags:
        - Management
        - Sites
        - V2
      summary: Get timezone of site
      description: Get the difference between UTC and local timezone (in minutes), for example, UTC+8 would reply -480. Also get the string format of timezone, for example, +08:00
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        200:
          description: Timezone object
          content:
            application/json:
              schema:
                type: object
                properties:
                  offset:
                    type: integer
                    example: -480
                  zone:
                    type: string
                    example: +08:00
        401:
          description: The authorization token is invalid.
          content: {}
        404:
          description: The icon of the site does not exist or the site id is incorrect
          content: {}
      security:
        - Bearer: []
  /api/sites/site/{siteId}/ui_profiles/{ui_profiles}:
    get:
      tags:
        - Management
        - Sites
      summary: Get the user profile of a site
      description: Get the files list of the profile folder of a site
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
        - name: ui_profiles
          in: path
          description: profile name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: The file list of the user profiles
          content:
            application/json:
              schema:
                type: string
                example:
                  - profileName: nocUser
                    menus:
                      dashboard: []
                      network:
                        - topology
                        - scanRange
                      report:
                        - vlanTable
                        - inventoryReport
                        - availabilityReport
                      event:
                        - allEvent
                        - syslogViewer
                        - notification
                        - customerEvent
                      northbound:
                        - apiManagement
                        - webWidget
                        - customOPC
                        - doc
                      migration:
                        - databaseBackup
                        - configCenter
                        - jobScheduler
                      preferences: []
                      accountManagement: []
                      wizard: []
                      license: []
                      about: []
                    toolBar:
                      - scanRange
                      - autoTopology
                      - autoLayout
                      - createGroup
                      - groupMaintenance
                      - changeGroup
                      - addDevice
                      - addLink
                      - exportTopology
                      - setBackground
                      - deleteBackground
                      - trafficView
                      - securityView
                      - vlanView
                      - wirelessTableView
                      - importConfig
                      - exportConfig
                      - upgradeFirmware
                      - generateQrCode
                      - assignModel
                      - basicInformation
                      - trapServer
                      - portSettings
                      - snmpSettings
                      - pollingSettings
                      - advanceSettings
                      - pollingIpSetting
                      - webConsole
                      - ping
                      - devicePanel
                      - setDocument
                      - refreshDevice
                      - deviceLocator
                      - deviceLocator
                      - deleteDevice
                      - changeDeviceIcon
                      - alignmentTop
                      - alignmentButtom
                      - alignmentLeft
                      - alignmentRight
                      - portTraffic
                      - packetErrorRate
                      - severityThreshold
                      - setPortLabel
                      - siteManagement
                      - deleteSite
                      - deleteGroup
                      - deleteObject
                      - ipsecStatus
                      - deleteLink
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: The icon of the site does not exist or the site id is incorrect
          content: {}
      security:
        - Bearer: []
  /api/users:
    get:
      tags:
        - Users
      summary: Get a list of usernames
      description: TODO
      responses:
        "200":
          description: An array of usernames
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: No users found
          content: {}
      security:
        - Bearer: []
  "/api/users/{username}/accessibleSites":
    get:
      tags:
        - Users
      summary: Get a user's accessible sites
      description: TODO
      parameters:
        - name: username
          in: path
          description: The username of the account you want to get
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: An array of ID of accessible sites
          content:
            application/json:
              schema:
                type: array
                description: an array of ID of sites
                example:
                  - 1234567890abcdef
                  - 2345678901abcdef
                items:
                  type: string
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: No users found
          content: {}
      security:
        - Bearer: []
  "/api/users/{username}":
    get:
      tags:
        - Users
      summary: Get a user
      description: Get a user's name and authority
      parameters:
        - name: username
          in: path
          description: The username of the account you want to add
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: A user object
          content:
            application/json:
              schema:
                type: object
                example:
                  - username: exampleUser
                    authority: 131073
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: user not found
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Users
      summary: Insert a user
      description: TODO
      parameters:
        - name: username
          in: path
          description: The username of the account you want to add
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: Account information
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: The password of your account
                authority:
                  type: integer
                  description: The access right of the account
                accessibleSites:
                  type: array
                  description: An array of site_id that the user is accessible
                  items:
                    type: integer
              description: User object
          multipart/form-data:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: The password of your account
                authority:
                  type: integer
                  description: The access right of the account
                accessibleSites:
                  type: array
                  description: An array of site_id that the user is accessible
                  items:
                    type: integer
              description: User object
        required: true
      responses:
        "200":
          description: A user is added
          content: {}
        "400":
          description: Incorrect user parameters such as missing password
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
      security:
        - Bearer: []
    delete:
      tags:
        - Users
      summary: Remove a user
      description: TODO
      parameters:
        - name: username
          in: path
          description: The username of the account you want to remove
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: A user is removed
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: The user does not exist
          content: {}
      security:
        - Bearer: []
    patch:
      tags:
        - Users
      summary: Update a user
      description: TODO
      parameters:
        - name: username
          in: path
          description: The username of the account you want to update
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: Account information
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: The new password of your account
                authority:
                  type: integer
                  description: The access right of the account
                accessibleSites:
                  type: array
                  description: An array of site_id that the user is accessible
                  items:
                    type: integer
                old_password:
                  type: string
                  description: The current password of your account
              description: User object
          multipart/form-data:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: The new password of your account
                authority:
                  type: integer
                  description: The access right of the account
                accessibleSites:
                  type: array
                  description: An array of site_id that the user is accessible
                  items:
                    type: integer
                old_password:
                  type: string
                  description: The current password of your account
              description: User object
        required: true
      responses:
        "200":
          description: A user is updated
          content: {}
        "400":
          description: Incorrect user parameters such as missing password
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
      security:
        - Bearer: []
  "/api/users/{username}/preferences":
    get:
      tags:
        - Users
      summary: Get user preferences
      description: TODO
      parameters:
        - name: username
          in: path
          description: >-
            The username of the account you want to update his or her
            preferences
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: User preferences
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user-preferences"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: No users found
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Users
      summary: Update user preferences
      description: TODO
      parameters:
        - name: username
          in: path
          description: The username of the account you want to add or update
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: The preferences of a user
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user-preferences"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/user-preferences"
        required: true
      responses:
        "200":
          description: User preferences are updated
          content: {}
        "400":
          description: Incorrect user parameters such as missing password
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
      security:
        - Bearer: []

  /api/mxsec_helper/devices:
    get:
      tags:
        - MXsec Helper
      summary: Get the device information from mxsec for the specified device.
      description: Get the device information from mxsec for the specified device.
      parameters:
        - in: query
          name: mac
          description: One or more mac address
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
          examples:
            oneMac:
              summary: Example of a mac address
              value: ["00:90:E8:80:10:A4"]
            multipleMacs:
              summary: Example of multiple mac address
              value: ["00:90:E8:80:10:A4", "00:90:E8:91:86:82"] # ?category=1,2,3
      responses:
        "200":
          description: Settings
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxsec-devices"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Settings not found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  /api/mxsec/v1/devices/schedule:
    patch:
      summary: update device schedule.
      description: update device schedule
      tags:
        - MXsec Helper
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeviceSchedulePatch"
            examples:
              DeviceSchedulePatch:
                $ref: "#/components/examples/DeviceSchedulePatch"
      responses:
        200:
          description: schedule response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    $ref: "#/components/schemas/DeviceScheduleRes"
              examples:
                DeviceScheduleRes:
                  $ref: "#/components/examples/DeviceScheduleRes"
      security:
        - Bearer: []

  /api/mxsec/v1/devices/schedule/remove:
    post:
      summary: reomve device schedule.
      description: reomve device schedule
      tags:
        - MXsec Helper
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeviceScheduleRemove"
            examples:
              DeviceScheduleRemove:
                $ref: "#/components/examples/DeviceScheduleRemove"
      responses:
        200:
          description: schedule response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    $ref: "#/components/schemas/DeviceScheduleRemove"
              examples:
                DeviceScheduleRemove:
                  $ref: "#/components/examples/DeviceScheduleRemoveRes"
      security:
        - Bearer: []

  /api/mxsec/v1/devices/jobs:
    post:
      summary: do device operation job
      description: do device operation job
      tags:
        - MXsec Helper
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeviceJob"
            examples:
              DeviceProfile:
                $ref: "#/components/examples/DeviceProfile"
      responses:
        200:
          description: job response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    $ref: "#/components/schemas/DeviceJobRes"
              examples:
                DeviceJobRes:
                  $ref: "#/components/examples/DeviceJobRes"
                DeviceJobProfileRes:
                  $ref: "#/components/examples/DeviceJobProfileRes"
      security:
        - Bearer: []

  /api/mxsec/v1/moxasrs/supportSeries:
    get:
      summary: get support model series
      description: get support model series
      tags:
        - MXsec Helper
      responses:
        200:
          description: currently supported model series
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      supportSeriesList:
                        type: array
                        items:
                          type: string
              examples:
                Status:
                  $ref: "#/components/examples/SupportSeries"
      security:
        - Bearer: []
  /api/mxsec/v1/moxasrs/status:
    get:
      summary: get update status
      description: get update status
      tags:
        - MXsec Helper
      responses:
        200:
          description: auto upgrade latest updated status
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    $ref: "#/components/schemas/Status"
              examples:
                Status:
                  $ref: "#/components/examples/Status"
      security:
        - Bearer: []
    post:
      summary: connect to srs server
      description: connect to srs server
      tags:
        - MXsec Helper
      responses:
        200:
          description: auto upgrade latest updated status
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    $ref: "#/components/schemas/Status"
              examples:
                Status:
                  $ref: "#/components/examples/Status"
      security:
        - Bearer: []
  /api/mxsec/v1/moxasrs/packages:
    get:
      summary: get latest packages of specific modelSeries
      description: get latest packages of specific modelSeries
      tags:
        - MXsec Helper
      responses:
        200:
          description: latest packages of each model series
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    $ref: "#/components/schemas/PackageDict"
                  max:
                    type: integer
                    description: max storage count in MXsecurity
                  current:
                    type: integer
                    description: current storge count in MXsecurity
              examples:
                PackageDict:
                  $ref: "#/components/examples/PackageDict"
      security:
        - Bearer: []
    post:
      summary: download packages of specific modelSeries
      description: download packages of specific modelSeries
      tags:
        - MXsec Helper
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                downloadInfo:
                  type: object
                  $ref: "#/components/schemas/PackageDownload"
            examples:
              PackageDownload:
                $ref: "#/components/examples/PackageDownload"
      responses:
        204:
          description: activate package downloader successfully
      security:
        - Bearer: []
  /api/mxsec/v1/moxasrs/packages/settings:
    get:
      summary: get auto package download settings
      description: get auto package download settings
      tags:
        - MXsec Helper
      responses:
        200:
          description: auto download settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    $ref: "#/components/schemas/Settings"
              examples:
                Settings:
                  $ref: "#/components/examples/Settings"
      security:
        - Bearer: []
    patch:
      summary: patch auto package download settings
      description: patch auto package download settings
      tags:
        - MXsec Helper
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Settings"
            examples:
              PackageDownload:
                $ref: "#/components/examples/SettingsBody"
      responses:
        200:
          description: auto download settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    $ref: "#/components/schemas/Settings"
              examples:
                Settings:
                  $ref: "#/components/examples/Settings"
      security:
        - Bearer: []

  /api/mxsec/v1/packages:
    get:
      summary: get all packages
      description: get all packages
      tags:
        - MXsec Helper
      parameters:
        - name: name
          in: query
          description: query specific packages
          required: false
          schema:
            type: string
            enum:
              - zeus
              - janus
        - name: firmwareVersion
          in: query
          description: query package by firmwareVersion, multiple firmware version should separate by comma(,), ex,firmwareVersion=V5.1.0, V5.2.0
          required: false
          schema:
            type: string
        - name: modelName
          in: query
          description: query package by modelName, multiple model name should separate by comma(,), ex,modelName=EDR-G9010-VPN-2MGSFP1, TN-4908-ETBN-F-4GPoE-4GTXBP
          required: false
          schema:
            type: string
        - name: unique
          in: query
          description: query unique package of each version
          required: false
          schema:
            type: boolean
      responses:
        200:
          description: An array of packages
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/PackageInfo"
              examples:
                PackageList:
                  $ref: "#/components/examples/PackageList"
      security:
        - Bearer: []
    post:
      summary: upload local package
      description: upload local package
      tags:
        - MXsec Helper
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UploadPackage"
      responses:
        201:
          description: object of the package
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PackageInfo"
              examples:
                Package:
                  $ref: "#/components/examples/Package"
      security:
        - Bearer: []
  /api/mxsec/v1/packages/{packageId}:
    parameters:
      - name: packageId
        in: path
        description: package unique identifier
        required: true
        schema:
          type: string
    get:
      summary: get package info by package id
      description: get package info by package id
      parameters:
        - name: memo
          in: query
          description: query ips detail info
          required: false
          schema:
            type: boolean
      tags:
        - MXsec Helper
      responses:
        200:
          description: object of the package
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    oneOf:
                      - $ref: "#/components/schemas/PackageInfo"
                      - $ref: "#/components/schemas/PackageMemo"
              examples:
                PackageRes:
                  $ref: "#/components/examples/PackageRes"
                PackageMemoRes:
                  $ref: "#/components/examples/PackageMemoRes"
      security:
        - Bearer: []
    patch:
      summary: update package description by package id
      description: update package description by package id
      tags:
        - MXsec Helper
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PackageUpdate"
            examples:
              PackageUpdate:
                $ref: "#/components/examples/PackageUpdate"

      responses:
        200:
          description: object of the package
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    $ref: "#/components/schemas/PackageInfo"
              examples:
                Package:
                  $ref: "#/components/examples/Package"
      security:
        - Bearer: []
    delete:
      summary: delete package by package id
      description: delete package by package id
      tags:
        - MXsec Helper
      responses:
        204:
          description: delete package success
      security:
        - Bearer: []
  /api/mxsec/v1/packages/remove:
    post:
      summary: remove multiple packages
      description: remove multiple packages
      tags:
        - MXsec Helper
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PackageRemove"
            examples:
              PackageRemove:
                $ref: "#/components/examples/PackageRemove"
      responses:
        200:
          description: object of the package
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/PackageInfo"
              examples:
                PackageList:
                  $ref: "#/components/examples/PackageList"
      security:
        - Bearer: []

  /api/mxsec/v1/interfaces:
    get:
      tags:
        - MXsec Helper
      summary: get all interfaces
      description: get all interfaces
      responses:
        200:
          description: array of interfaces
          content:
            application/json:
              schema:
                type: object
                properties:
                  max:
                    type: integer
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Interface"
              examples:
                InterfaceList:
                  $ref: "#/components/examples/InterfaceList"
      security:
        - Bearer: []
    post:
      summary: create new interface
      description: create new interface
      tags:
        - MXsec Helper
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InterfaceCreate"
            examples:
              InterfaceCreate:
                $ref: "#/components/examples/InterfaceCreate"
      responses:
        201:
          description: An Interface of the interface
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InterfaceRes"
              examples:
                InterfaceRes:
                  $ref: "#/components/examples/InterfaceRes"
      security:
        - Bearer: []
  /api/mxsec/v1/interfaces/{interfaceId}:
    parameters:
      - name: interfaceId
        in: path
        description: interface unique identifier
        required: true
        schema:
          type: string
    get:
      summary: get interface by interface id
      description: get interface by interface id
      tags:
        - MXsec Helper
      responses:
        200:
          description: interface of the interface
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InterfaceRes"
              examples:
                ProjectRes:
                  $ref: "#/components/examples/InterfaceRes"
      security:
        - Bearer: []
    patch:
      summary: update interface by interface id
      description: update interface by interface id
      tags:
        - MXsec Helper
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InterfaceUpdate"
            examples:
              InterfaceUpdate:
                $ref: "#/components/examples/InterfaceUpdate"
      responses:
        200:
          description: An Interface of the interface
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InterfaceRes"
              examples:
                InterfaceRes:
                  $ref: "#/components/examples/InterfaceRes"
      security:
        - Bearer: []
  /api/mxsec/v1/interfaces/exist:
    parameters:
      - name: name
        in: query
        description: check interface name exists or not
        schema:
          type: string
    get:
      summary: check interface name exists or not
      description: check interface name exists or not
      tags:
        - MXsec Helper
      responses:
        200:
          description: determining the interface name exists or not
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    items:
                      $ref: "#/components/schemas/NameExist"
              examples:
                NameExist:
                  $ref: "#/components/examples/NameExist"
      security:
        - Bearer: []
  /api/mxsec/v1/interfaces/remove:
    post:
      summary: remove multiple interfaces
      description: remove multiple interfaces
      tags:
        - MXsec Helper
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InterfaceRemove"
            examples:
              InterfaceRemove:
                $ref: "#/components/examples/InterfaceRemove"
      responses:
        200:
          description: An Interface of the interface
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Interface"
              examples:
                InterfaceList:
                  $ref: "#/components/examples/InterfaceList"
      security:
        - Bearer: []
  /api/mxsec/v1/profiles:
    get:
      tags:
        - MXsec Helper
      summary: get all profiles
      description: get all profiles
      responses:
        200:
          description: array of profiles
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Profile"
              examples:
                ProfileList:
                  $ref: "#/components/examples/ProfileList"
      security:
        - Bearer: []
    post:
      summary: create new profile
      description: create new profile
      tags:
        - MXsec Helper
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProfileCreate"
            examples:
              ProfileCreate:
                $ref: "#/components/examples/ProfileCreate"
      responses:
        201:
          description: An Profile of the profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfileRes"
              examples:
                ProfileRes:
                  $ref: "#/components/examples/ProfileRes"
      security:
        - Bearer: []
  /api/mxsec/v1/profiles/{profileId}:
    parameters:
      - name: profileId
        in: path
        description: profile unique identifier
        required: true
        schema:
          type: string
    get:
      summary: get profile by profile id
      description: get profile by profile id
      tags:
        - MXsec Helper
      responses:
        200:
          description: profile of the profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfileRes"
              examples:
                ProjectRes:
                  $ref: "#/components/examples/ProfileRes"
      security:
        - Bearer: []
    patch:
      summary: update profile by profile id
      description: update profile by profile id
      tags:
        - MXsec Helper
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProfileUpdate"
            examples:
              ProfileUpdate:
                $ref: "#/components/examples/ProfileUpdate"
      responses:
        200:
          description: An Profile of the profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfileRes"
              examples:
                ProfileRes:
                  $ref: "#/components/examples/ProfileRes"
      security:
        - Bearer: []

  /api/mxsec/v1/profiles/exist:
    parameters:
      - name: profilename
        in: query
        description: check profilename exists or not
        schema:
          type: string
    get:
      summary: check profilename exists or not
      description: check profilename exists or not
      tags:
        - MXsec Helper
      responses:
        200:
          description: determining the profilename exists or not
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    items:
                      $ref: "#/components/schemas/NameExist"
              examples:
                NameExist:
                  $ref: "#/components/examples/NameExist"
      security:
        - Bearer: []

  /api/mxsec/v1/profiles/remove:
    post:
      summary: remove multiple profiles
      description: remove multiple profiles
      tags:
        - MXsec Helper
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProfileRemove"
            examples:
              ProfileRemove:
                $ref: "#/components/examples/ProfileRemove"
      responses:
        200:
          description: An Profile of the profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Profile"
              examples:
                ProfileList:
                  $ref: "#/components/examples/ProfileList"
      security:
        - Bearer: []
  /api/mxsec/v1/objects:
    get:
      tags:
        - MXsec Helper
      summary: get all objects
      description: get all objects
      responses:
        200:
          description: array of objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Object"
              examples:
                ObjectList:
                  $ref: "#/components/examples/ObjectList"
      security:
        - Bearer: []
    post:
      summary: create new object
      description: create new object
      tags:
        - MXsec Helper
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ObjectCreate"
            examples:
              ObjectCreate:
                $ref: "#/components/examples/ObjectCreate"
      responses:
        201:
          description: An Object of the object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectRes"
              examples:
                ObjectRes:
                  $ref: "#/components/examples/ObjectRes"
      security:
        - Bearer: []

  /api/mxsec/v1/objects/{objectId}:
    parameters:
      - name: objectId
        in: path
        description: object unique identifier
        required: true
        schema:
          type: string
    get:
      summary: get object by object id
      description: get object by object id
      tags:
        - MXsec Helper
      responses:
        200:
          description: object of the object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectRes"
              examples:
                ProjectRes:
                  $ref: "#/components/examples/ObjectRes"
      security:
        - Bearer: []
    patch:
      summary: update object by object id
      description: update object by object id
      tags:
        - MXsec Helper
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ObjectUpdate"
            examples:
              ObjectUpdate:
                $ref: "#/components/examples/ObjectRes"
      responses:
        200:
          description: An Object of the object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectRes"
              examples:
                ObjectRes:
                  $ref: "#/components/examples/ObjectRes"
      security:
        - Bearer: []
  /api/mxsec/v1/objects/table:
    get:
      summary: update object by object id
      description: get object table info
      tags:
        - MXsec Helper
      responses:
        200:
          description: get object table info
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    items:
                      $ref: "#/components/schemas/ObjectTable"
              examples:
                ObjectTable:
                  $ref: "#/components/examples/ObjectTable"
      security:
        - Bearer: []

  /api/mxsec/v1/objects/exist:
    parameters:
      - name: objectname
        in: query
        description: check objectname exists or not
        schema:
          type: string
    get:
      summary: check objectname exists or not
      description: check objectname exists or not
      tags:
        - MXsec Helper
      responses:
        200:
          description: determining the objectname exists or not
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    items:
                      $ref: "#/components/schemas/NameExist"
              examples:
                NameExist:
                  $ref: "#/components/examples/NameExist"
      security:
        - Bearer: []

  /api/mxsec/v1/objects/remove:
    post:
      summary: remove multiple objects
      description: remove multiple objects
      tags:
        - MXsec Helper
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ObjectRemove"
            examples:
              ObjectRemove:
                $ref: "#/components/examples/ObjectRemove"
      responses:
        200:
          description: An Object of the object
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Object"
              examples:
                ObjectList:
                  $ref: "#/components/examples/ObjectList"
      security:
        - Bearer: []

  /api/mxsec/v1/auditLogs:
    get:
      summary: get audit event logs
      description: get audit event logs
      tags:
        - MXsec Helper
      parameters:
        - name: postfix
          in: query
          description: set .csv postfix filename
          required: false
          schema:
            type: string
        - name: startTime
          in: query
          description: start time, epoch time (unit:second)
          required: false
          schema:
            type: integer
        - name: endTime
          in: query
          description: end time, epoch time (unit:second)
          required: false
          schema:
            type: integer
        - name: category
          in: query
          description: query log by category, multiple category should separate by comma(,). ex. category=Software Package, MoxaSRS
          required: false
          schema:
            type: string
        - name: severity
          in: query
          description: filter audit logs by severity
          required: false
          schema:
            type: string
            enum:
              - Emergency
              - Alert
              - Critical
              - Error
              - Warning
              - Notice
              - Informational
              - Debug
        - name: event
          in: query
          description: filter audit logs by event name
          required: false
          schema:
            type: string
        - name: username
          in: query
          description: filter audit logs by username
          required: false
          schema:
            type: string
        - name: message
          in: query
          description: filter audit logs by message
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Max events count (default is 500 and max is 100000). The export log file has a 100000 number of log limitations.
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          description: offset
          required: false
          schema:
            type: integer
        - name: distinct
          in: query
          description: get distict value of speific field, this query parameter will return string array only
          required: false
          schema:
            type: string
            enum:
              - severity
              - event
        - name: mode
          in: query
          description: Export log file (default is text, which means not export to file). Due to the data size, the maximum time interval is 1 month which setting on the startTime and endTime, and the maximum number of logs is 10000.
          required: false
          schema:
            type: string
            enum:
              - text
              - file
      responses:
        200:
          description: Get events by project level or return an array of the eventLog
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/AuditEventLog"
                  - $ref: "#/components/schemas/LogDistinct"
              examples:
                AuditEventLog:
                  $ref: "#/components/examples/AuditEventLogList"
                AuditLogDistinctList:
                  $ref: "#/components/examples/AuditLogDistinctList"
      security:
        - Bearer: []

  /api/mxsec/v1/firewallLogs:
    get:
      summary: get firewall event logs
      description: get firewall event logs
      tags:
        - MXsec Helper
      parameters:
        - name: table
          in: query
          description: Event log info
          required: true
          schema:
            type: string
            enum:
              - ADP
              - DPI
              - IPS
              - L2POLICY
              - L3POLICY
              - TRUSTACCESS
              - MALFORMED
              - DOS
              - DEVLOCKDOWN
              - SC
        - name: postfix
          in: query
          description: set .csv postfix filename
          required: false
          schema:
            type: string
        - name: startTime
          in: query
          description: start time, epoch time (unit:second)
          required: false
          schema:
            type: integer
        - name: endTime
          in: query
          description: end time, epoch time (unit:second)
          schema:
            type: integer
        - name: severity
          in: query
          description: filter logs by severity
          required: false
          schema:
            type: string
            enum:
              - Emergency
              - Alert
              - Critical
              - Error
              - Warning
              - Notice
              - Informational
              - Debug
        - name: id
          in: query
          description: filter logs by id
          required: false
          schema:
            type: string
        - name: hostname
          in: query
          description: filter logs by hostname
          required: false
          schema:
            type: string
        - name: groupName
          in: query
          description: filter logs by group name
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Max events count (default is 500 and max is 100000). The export log file has a 100000 number of log limitations.
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          description: offset
          required: false
          schema:
            type: integer
        - name: distinct
          in: query
          description: get distict value of speific field, this query parameter will return string array only
          required: false
          schema:
            type: string
            enum:
              - severity
              - event
        - name: mode
          in: query
          description: Export log file (default is text, which means not export to file). Due to the data size, the maximum time interval is 1 month which setting on the startTime and endTime, and the maximum number of logs is 10000.
          required: false
          schema:
            type: string
            enum:
              - text
              - file
        - name: others
          in: query
          description: Parameters based on table
          schema:
            oneOf:
              - $ref: "#/components/schemas/ADPParams"
              - $ref: "#/components/schemas/DOSParams"
              - $ref: "#/components/schemas/DPIParams"
              - $ref: "#/components/schemas/IPSParams"
              - $ref: "#/components/schemas/L2POLICYParams"
              - $ref: "#/components/schemas/L3POLICYParams"
              - $ref: "#/components/schemas/MALFORMEDParams"
              - $ref: "#/components/schemas/SCParams"
              - $ref: "#/components/schemas/TRUSTACCESSParams"
      responses:
        200:
          description: Get eventLog distict data or an array of the eventLog
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/FirewallEventLog"
                  - $ref: "#/components/schemas/LogDistinct"
              examples:
                FirewallEventLog:
                  $ref: "#/components/examples/FirewallEventLogList"
                FirewallDistinctList:
                  $ref: "#/components/examples/FirewallDistinctList"
      security:
        - Bearer: []
  /api/mxsec/v1/vpnLogs:
    get:
      summary: get vpn event logs
      description: get vpn event logs
      tags:
        - MXsec Helper
      parameters:
        - name: postfix
          in: query
          description: set .csv postfix filename
          required: false
          schema:
            type: string
        - name: startTime
          in: query
          description: start time, epoch time (unit:second)
          required: false
          schema:
            type: integer
        - name: endTime
          in: query
          description: end time, epoch time (unit:second)
          schema:
            type: integer
        - name: severity
          in: query
          description: filter vpn logs by severity
          required: false
          schema:
            type: string
            enum:
              - Emergency
              - Alert
              - Critical
              - Error
              - Warning
              - Notice
              - Informational
              - Debug
        - name: event
          in: query
          description: filter vpn logs by event name
          required: false
          schema:
            type: string
        - name: hostname
          in: query
          description: filter vpn logs by hostname
          required: false
          schema:
            type: string
        - name: groupName
          in: query
          description: filter vpn logs by group name
          required: false
          schema:
            type: string
        - name: message
          in: query
          description: filter vpn logs by message
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Max events count (default is 500 and max is 100000). The export log file has a 100000 number of log limitations.
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          description: offset
          required: false
          schema:
            type: integer
        - name: distinct
          in: query
          description: get distict value of speific field, this query parameter will return string array only
          required: false
          schema:
            type: string
            enum:
              - severity
              - event
        - name: mode
          in: query
          description: Export log file (default is text, which means not export to file). Due to the data size, the maximum time interval is 1 month which setting on the startTime and endTime, and the maximum number of logs is 10000.
          required: false
          schema:
            type: string
            enum:
              - text
              - file
      responses:
        200:
          description: Get events by project level and return an array of the eventLog
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/VpnEventLog"
                  - $ref: "#/components/schemas/LogDistinct"
              examples:
                VpnEventLog:
                  $ref: "#/components/examples/VpnEventLogList"
                VpnDistinctList:
                  $ref: "#/components/examples/VpnDistinctList"
      security:
        - Bearer: []
  /api/mxsec/v1/deviceLogs:
    get:
      summary: get device event logs
      description: get device event logs
      tags:
        - MXsec Helper
      parameters:
        - name: postfix
          in: query
          description: set .csv postfix filename
          required: false
          schema:
            type: string
        - name: startTime
          in: query
          description: start time, epoch time (unit:second)
          required: false
          schema:
            type: integer
        - name: endTime
          in: query
          description: end time, epoch time (unit:second)
          required: false
          schema:
            type: integer
        - name: severity
          in: query
          description: filter device logs by severity
          required: false
          schema:
            type: string
            enum:
              - Emergency
              - Alert
              - Critical
              - Error
              - Warning
              - Notice
              - Informational
              - Debug
        - name: event
          in: query
          description: filter device logs by event name
          required: false
          schema:
            type: string
        - name: mac
          in: query
          description: filter device logs by mac
          required: false
          schema:
            type: string
        - name: username
          in: query
          description: filter device logs by username
          required: false
          schema:
            type: string
        - name: hostname
          in: query
          description: filter device logs by hostname
          required: false
          schema:
            type: string
        - name: groupName
          in: query
          description: filter device logs by group name
          required: false
          schema:
            type: string
        - name: message
          in: query
          description: filter device logs by message
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Max events count (default is 500 and max is 100000). The export log file has a 100000 number of log limitations.
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          description: offset
          required: false
          schema:
            type: integer
        - name: distinct
          in: query
          description: get distict value of speific field, this query parameter will return string array only
          required: false
          schema:
            type: string
            enum:
              - severity
              - event
        - name: mode
          in: query
          description: Export log file (default is text, which means not export to file). Due to the data size, the maximum time interval is 1 month which setting on the startTime and endTime, and the maximum number of logs is 10000.
          required: false
          schema:
            type: string
            enum:
              - text
              - file
      responses:
        200:
          description: Get events by project level and return an array of the eventLog
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DeviceEventLog"
                  - $ref: "#/components/schemas/LogDistinct"
              examples:
                DeviceEventLog:
                  $ref: "#/components/examples/DeviceEventLogList"
                DeviceLogDistinctList:
                  $ref: "#/components/examples/DeviceLogDistinctList"
      security:
        - Bearer: []
  /api/mxsec/v1/logs/top:
    get:
      summary: get top log info
      description: get top log info
      tags:
        - MXsec Helper
      parameters:
        - name: category
          in: query
          description: Event log info
          required: true
          schema:
            type: string
            enum:
              - firewallLog
              - vpnLog
        - name: table
          in: query
          description: Event log info
          required: true
          schema:
            type: string
            enum:
              - ADP
              - DPI
              - IPS
              - L3POLICY
        - name: column
          in: query
          description: get specific column info, ipsCategory is only for table=IPS
          required: true
          schema:
            type: string
            enum:
              - srcIp
              - dstIp
              - event
              - severity
              - ipsCategory
      responses:
        200:
          description: Get filter events info
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/EventLogTop"
              examples:
                EventLogTop:
                  $ref: "#/components/examples/EventLogTop"
      security:
        - Bearer: []
  /api/mxsec/v1/logs/statistic:
    get:
      summary: get statistic log info
      description: get statistic log info
      tags:
        - MXsec Helper
      parameters:
        - name: category
          in: query
          description: Event log category
          required: true
          schema:
            type: string
            enum:
              - auditLog
              - deviceLog
              - firewallLog
              - vpnLog
        - name: time
          in: query
          description: time span calculated in hour unit, ex. 720 means 30 days
          required: true
          schema:
            type: integer
        - name: type
          in: query
          description: get specific firewall log, only required when category=firewallLog
          required: false
          schema:
            type: string
            enum:
              - ADP
              - DOS
              - DPI
              - IPS
              - L2POLICY
              - L3POLICY
              - MALFORMED
              - SC
              - TRUSTACCESS
              - DEVLOCKDOWN
      responses:
        200:
          description: Get relevent category event logs count by hour or day in specific time span
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: category name
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/EventLogStatistic"
              examples:
                EventLogTop:
                  $ref: "#/components/examples/EventLogStatistic"
      security:
        - Bearer: []

  "/api/serial_port/monitoring_settings":
    get:
      tags:
        - Serial Port
      summary: Get the serial port monitoring settings for the specified device.
      description: Get the serial port monitoring settings for the specified device.
      parameters:
        - name: ip
          in: query
          description: ip of the devices you want to query
          schema:
            type: string
      responses:
        "200":
          description: Settings
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/query-serial-port-mon-settings"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Settings not found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Serial Port
      summary: Modify the serial port monitoring settings for the specified devices.
      description: Modify the serial port monitoring settings.
      requestBody:
        description: Serial Port Monitoring settings
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/serial-port-mon-settings"
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Operation failed
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  "/api/serial_port/monitoring_status":
    get:
      tags:
        - Serial Port
      summary: Get the serial port monitoring status for the specified device.
      description: Get the serial port monitoring status for the specified device.
      parameters:
        - name: ip
          in: query
          required: true
          description: One or more ip
          schema:
            type: array
            items:
              type: string
          example:
            - 192.168.127.69
            - 10.123.35.62
      responses:
        "200":
          description: Settings
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sp-monitoring-status"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Settings not found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  "/api/serial_port/monitoring_flags":
    get:
      tags:
        - Serial Port
      summary: Get the serial port monitoring triggered flag for the specified device.
      description: Get the serial port monitoring triggered flag for the specified device.
      responses:
        "200":
          description: Settings
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sp-monitoring-flags"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Settings not found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  "/api/syslog/":
    get:
      tags:
        - Syslog
      summary: Get syslogs recorded in MXvie wOne
      description: TODO
      parameters:
        - name: count
          in: query
          description: Number of recent syslogs you want to get
          required: true
          schema:
            type: integer
            format: integer
        - name: offset
          in: query
          description: >-
            Skip {offset} syslogs. The offset parameter should be divisible by
            count
          schema:
            type: integer
            format: integer
        - name: severity_threshold_type
          in: query
          description: "Severity threshold type (0: >, 1: =, 2: <)"
          schema:
            type: integer
        - name: severity
          in: query
          description: >-
            Syslog severity (0: Emergency, 1: Alert, 2: Critical, 3: Error, 4:
            Warning, 5: Notice, 6: Informational, 7: Debug)
          schema:
            type: integer
        - name: start_time
          in: query
          description: Get syslogs happened after start_time
          schema:
            type: string
            format: unix timestamp
        - name: end_time
          in: query
          description: Get syslogs happened before end_time
          schema:
            type: string
            format: unix timestamp
        - name: source_ip
          in: query
          description: Get syslogs of a device indicated by its IP address
          schema:
            type: string
            format: IP string
      responses:
        "200":
          description: Syslogs
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/syslogs"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Syslog not found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    delete:
      tags:
        - Syslog
      summary: Delete all syslogs
      description: TODO
      responses:
        "200":
          description: OK
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Operation failed
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/syslog/site/{siteId}":
    get:
      tags:
        - Syslog
      summary: Get MXview One Syslog server settings
      description: TODO
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
        - name: count
          in: query
          description: Number of recent syslogs you want to get
          required: true
          schema:
            type: integer
            format: integer
        - name: offset
          in: query
          description: >-
            Skip {offset} syslogs. The offset parameter should be divisible by
            count
          schema:
            type: integer
            format: integer
        - name: severity_threshold_type
          in: query
          description: "Severity threshold type (0: >, 1: =, 2: <)"
          schema:
            type: integer
        - name: severity
          in: query
          description: >-
            Syslog severity (0: Emergency, 1: Alert, 2: Critical, 3: Error, 4:
            Warning, 5: Notice, 6: Informational, 7: Debug)
          schema:
            type: integer
        - name: start_time
          in: query
          description: Get syslogs happened after start_time
          schema:
            type: string
            format: unix timestamp
        - name: end_time
          in: query
          description: Get syslogs happened before end_time
          schema:
            type: string
            format: unix timestamp
        - name: source_ip
          in: query
          description: Get syslogs of a device indicated by its IP address
          schema:
            type: string
            format: IP string
      responses:
        "200":
          description: Syslogs
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/syslogs"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: Syslog not found
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    delete:
      tags:
        - Syslog
      summary: Delete all syslogs of a site
      description: TODO
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: OK
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Operation failed
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/syslog/server/settings":
    get:
      tags:
        - Syslog
      summary: Get MXview One Syslog server settings
      description: TODO
      responses:
        "200":
          description: Syslog settings
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/syslog-server-settings"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Syslog
      summary: Update MXview One Syslog server settings
      description: TODO
      requestBody:
        description: Syslog server settings
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/syslog-server-settings"
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  "/api/syslog/server/settings/site/{siteId}":
    get:
      tags:
        - Syslog
      summary: Get MXview One Syslog server settings
      description: TODO
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Syslog settings
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/syslog-server-settings"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Syslog
      summary: Update MXview One Syslog server settings
      description: TODO
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: Syslog server settings
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/syslog-server-settings"
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  "/api/syslog/server/forward_settings":
    get:
      tags:
        - Syslog
      summary: Get MXview One Syslog server forward settings
      description: TODO
      responses:
        "200":
          description: Syslog settings
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/syslog-server-forward-settings"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Syslog
      summary: Update MXview One Syslog server forward settings
      description: TODO
      requestBody:
        description: Syslog server settings
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/syslog-server-forward-settings"
            examples:
              Any IP + Any Cond:
                value:
                  syslog_forward_type: 1
                  syslog_forward_ip1: 192.168.123.195
                  syslog_forward_port1: 514
                  syslog_forward_ip2: ""
                  syslog_forward_port2: 514
                  syslog_forward_cond:
                    - cond: 255
              Spec IP + Spec Cond:
                value:
                  syslog_forward_type: 1
                  syslog_forward_ip1: 192.168.127.222
                  syslog_forward_port1: 514
                  syslog_forward_ip2: 10.123.35.120
                  syslog_forward_port2: 514
                  syslog_forward_cond:
                    - ip:
                        - 192.168.127.14
                        - 192.168.127.16
                      cond: 3
                    - ip:
                        - 192.168.127.24
                        - 192.168.127.25
                      cond: 12
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []

  "/api/ConfigCenter/site/{siteId}/config/ip/{ip}":
    get:
      tags:
        - Config Center
      description: >-
        Export config file from a device and update config center if the config
        is changed
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
        - name: ip
          in: path
          description: The IP Address of the device
          required: true
          schema:
            type: string
            format: IP address
      responses:
        "200":
          description: The config file
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: the device is not found
          content: {}
        "422":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Config Center
      description: Import a config file to a device
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
        - name: ip
          in: path
          description: The IP Address of the device
          required: true
          schema:
            type: string
            format: IP address
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data
              properties:
                data:
                  type: string
                  description: config file
                  format: binary
          multipart/form-data:
            schema:
              required:
                - data
              properties:
                data:
                  type: string
                  description: config file
                  format: binary
        required: true
      responses:
        "200":
          description: "OK, the config is imported"
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: >-
            either the device is not found, or the file indicated by filename
            does not exist
          content: {}
        "422":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/ConfigCenter/site/{siteId}/config/records/list":
    get:
      tags:
        - Config Center
      description: Get all saved config records of all devices in config center
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: The records
          content:
            application/json:
              schema:
                type: object
                example:
                  - config_files:
                      - filename: 192.168.127.1_20180508_1621.ini
                        createTime: 1525767660
                        lastUpdatedTime: 1525773360
                      - filename: 192.168.127.2_20180509_1024.ini
                        createTime: 1525832640
                        lastUpdatedTime: 1525841100
                      - filename: 192.168.127.3_20180509_1346.ini
                        createTime: 1525844760
                        lastUpdatedTime: 1525844760
                    site_id: d9272062f646bbff
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/ConfigCenter/site/{siteId}/config/records/list/ip/{ip}":
    get:
      tags:
        - Config Center
      description: Get all saved config records of a device in config center
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
        - name: ip
          in: path
          description: The IP Address of the device
          required: true
          schema:
            type: string
            format: IP address
      responses:
        "200":
          description: The records
          content:
            application/json:
              schema:
                type: object
                example:
                  - config_files:
                      - filename: 192.168.127.1_20180508_1621.ini
                        createTime: 1525767660
                        lastUpdatedTime: 1525773360
                      - filename: 192.168.127.1_20180509_1024.ini
                        createTime: 1525832640
                        lastUpdatedTime: 1525841100
                      - filename: 192.168.127.1_20180509_1346.ini
                        createTime: 1525844760
                        lastUpdatedTime: 1525844760
                    site_id: d9272062f646bbff
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/ConfigCenter/site/{siteId}/config/records/ip/{ip}":
    get:
      tags:
        - Config Center
      description: Download a saved config file in config center
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
        - name: ip
          in: path
          description: The IP Address of the device
          required: true
          schema:
            type: string
            format: IP address
        - name: filename
          in: query
          description: the filename indicated in config center
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The config file
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: >-
            either the device is not found, or the file indicated by filename
            does not exist
          content: {}
        "422":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Config Center
      description: Import a config file saved in config center to a device
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
        - name: ip
          in: path
          description: The IP Address of the device
          required: true
          schema:
            type: string
            format: IP address
        - name: filename
          in: query
          description: the filename indicated in config center
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "OK, the config is imported"
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: >-
            either the device is not found, or the file indicated by filename
            does not exist
          content: {}
        "422":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    delete:
      tags:
        - Config Center
      description: Deleteone or more config files in config center
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
        - name: ip
          in: path
          description: The IP Address of the device
          required: true
          schema:
            type: string
            format: IP address
      requestBody:
        description: the filename indicated in config center
        content:
          application/json:
            schema:
              type: array
              description: an array of filenames
              items:
                type: string
                description: config file name
          multipart/form-data:
            schema:
              type: array
              description: an array of filenames
              items:
                type: string
                description: config file name
        required: false
      responses:
        "200":
          description: "OK, the config is imported"
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "404":
          description: >-
            either the device is not found, or the file indicated by filename
            does not exist
          content: {}
        "422":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/warranty":
    get:
      tags:
        - Warranty
      summary: Get a list of devices and their warranty info
      description: Get a list of devices and their warranty info
      responses:
        "200":
          description: Return the data of the warranty info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/get-warranty-res"
        "400":
          description: |
            errno:
              * -102: failed to get warranty data
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
        "500":
          description: Internal server error
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Warranty
      summary: Update warranty info
      description: update warranty info
      requestBody:
        required: true
        description: the parameter of updating warranty info
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  description: the id list you want to update
                  items:
                    type: integer
                    description: the id of warranty
                channel_extended_end_date:
                  type: integer
                  description: |
                    channel extended end date(unix timestamp)
                    * If you want to set empty value, set -1 in this field.
              required:
                - ids
                - channel_extended_end_date
              example:
                ids: [1, 2, 3]
                channel_extended_end_date: 1803358260
      responses:
        "200":
          description: update result
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
        "400":
          description: |
            errno:
              * -103: ids field is required
              * -103: ids cannot be empty
              * -102: failed to update warranty data
          content: {}
        "500":
          description: Internal server error
          content: {}
      security:
        - Bearer: []
  "/api/warranty/remote_download_task":
    post:
      tags:
        - Warranty
      summary: run remote download task to download warranty data
      description: run remote download task to download warranty data
      responses:
        "200":
          description: start to run remote download task
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
        "400":
          description: |
            errno:
              * -102: Failed to run remote download task
          content: {}
        "500":
          description: Internal server error
          content: {}
      security:
        - Bearer: []
  "/api/warranty/warranty_check":
    get:
      tags:
        - Warranty
      summary: Get a devices info and its warranty info by serial number or mac address
      description: Get a devices info and its warranty info by serial number or mac address
      parameters:
        - name: mac_address
          in: query
          description: the mac address of the device you want to check
          required: false
          schema:
            type: string
            format: string
        - name: serial_number
          in: query
          description: the serial number of the device you want to check
          required: false
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Return the data of the warranty info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/get-warranty-check-res"
        "400":
          description: |
            errno:
              * -103: Not enough parameter For request
              * -103: Invalid mac_address format
              * -103: Invalid serial_number format
              * -103: Too many parameters for request.
              * -3001: Unable to query Moxa Warranty Server status.
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
        "500":
          description: Internal server error
          content: {}
      security:
        - Bearer: []
  "/api/warranty/remote_status":
    get:
      tags:
        - Warranty
      summary: Get status of warranty service
      description: get status of warranty service
      responses:
        "200":
          description: warranty service is available
          content:
            application/json:
              schema:
                type: object
                properties:
                  online:
                    type: boolean
                    description: online
                  last_update_time:
                    type: integer
                    description: The last time the remote download task was completed
                  progress:
                    type: integer
                    description: |
                      - The progress of remote download task
                      - The value of progress would be between "-1" and "100"
                      - "-1" means the download task is not running now
                example:
                  online: true
                  last_update_time: 1706077848
                  progress: 23
        "400":
          description: |
            errno:
              * -102: failed to get status of warranty service
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
        "500":
          description: Internal server error
          content: {}
      security:
        - Bearer: []
  "/api/warranty/notification":
    get:
      tags:
        - Warranty
      summary: Get notification setting of warranty
      description: get notification setting of warranty
      responses:
        "200":
          description: successfully get warranty notification
          content:
            application/json:
              schema:
                type: object
                properties:
                  enabled:
                    type: boolean
                    description: enabled
                  notify_before:
                    type: integer
                    description: notify_before
                  email_address:
                    type: string
                    description: email address
                example:
                  enabled: true
                  notify_before: 150
                  email_address: abc@moxa.com
        "400":
          description: |
            errno:
              * -102: failed to get notification setting of warranty
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
        "500":
          description: Internal server error
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - Warranty
      summary: Update notification setting of warranty
      description: update notification setting of warranty
      requestBody:
        description: the parameter of updating notification setting of warranty
        content:
          application/json:
            schema:
              type: object
              properties:
                enabled:
                  type: boolean
                  description: enabled
                notify_before:
                  type: integer
                  description: notify_before
                email_address:
                  type: string
                  description: email address
              example:
                enabled: true
                notify_before: 180
                email_address: abc@moxa.com,qwe@moxa.com
      responses:
        "200":
          description: update notification setting of warranty
          content: {}
        "400":
          description: |
            errno:
              * -103: enabled field should be a boolean value
              * -103: notify_before field should be a integer value and not less than zero
              * -103: invalid email address format
              * -103: channel_extended_end_date field is required
              * -102: failed to update notification setting
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
        "500":
          description: Internal server error
          content: {}
      security:
        - Bearer: []
  "/api/jobSchedulers/site/{siteId}":
    get:
      tags:
        - Job Scheduler
      description: Get all jobs in Job scheduler
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Server status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job-parameters"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    post:
      tags:
        - Job Scheduler
      description: Add a new job to Job Scheduler
      parameters:
        - name: siteId
          in: path
          description: site name
          example: EWFZZlQJKajhLbCL
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Job name
                  example: new Job
                description:
                  type: string
                  description: Job description
                  example: new Job description
                action:
                  type: integer
                  description: >-
                    Action type
                    1=ExportConfig 2=ImportConfig 3=DB backup 4=SRS_Check 5/6/7=Firmware 8=RemoteBackup 9=CLI upgrade 10/11/12=Built-in command 13=AutoTopology
                  enum: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
                  example: 1
                frequency:
                  type: integer
                  description: >-
                    Job frequency
                    1=once, 2=daily, 3=weekly, 4=monthly
                  enum: [1, 2, 3, 4]
                  example: 1
                devices:
                  type: string
                  description: An Array of device ID, ex [1,3]
                time:
                  type: integer
                  description: >-
                    The job would execute once in this timestamp. Required if
                    `frequency` is 1
                  format: unix timestamp
                  example: 1701835208
                hour:
                  type: integer
                  description: >-
                    The job would execute in hour (0-23). Required if
                    `frequency` is either 2, 3, or 4
                minute:
                  type: integer
                  description: >-
                    The job would execute in minute (0-59). Required if
                    `frequency` is either 2, 3, or 4
                day_of_week:
                  type: integer
                  description: >-
                    The job would execute in this day of week(0-6). Required if
                    `frequency` is 3, 0=Sunday ... 6=Saturday
                day_of_month:
                  type: integer
                  description: >-
                    The job would execute in this day of month (1-31). Required
                    if `frequency` is 4
                config:
                  type: string
                  description: config file
                  format: binary
              required:
                - name
                - action
                - frequency
                - description
                - hour
                - minute
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/jobSchedulers/site/{siteId}/id/{id}/log":
    get:
      tags:
        - Job Scheduler
      description: Download the log of a job
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
        - name: id
          in: path
          description: The ID of the job
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: A text file of the content of the log
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/jobSchedulers/site/{siteId}/id/{id}":
    put:
      tags:
        - Job Scheduler
      description: Modify a job in Job Scheduler
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
        - name: id
          in: path
          description: The ID of the job to be updated
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  type: string
                  description: Job description
                action:
                  type: integer
                  description: Action type
                  enum: []
                frequency:
                  type: integer
                  description: Job frequency
                  enum: []
                devices:
                  type: array
                  description: An Array of device ID
                  items:
                    type: integer
                cli_id:
                  type: integer
                  description: When action=9, it represents the CLI template id
                time:
                  type: integer
                  description: >-
                    The job would execute once in this timestamp. Required if
                    `frequency is 1
                  format: unix timestamp
                hour:
                  type: integer
                  description: >-
                    The job would execute in hour (0-23). Required if
                    `frequency` is either 2, 3, or 4
                minute:
                  type: integer
                  description: >-
                    The job would execute in minute (0-59). Required if
                    `frequency` is either 2, 3, or 4
                day_of_week:
                  type: integer
                  description: >-
                    The job would execute in this day of week. Required if
                    `frequency` is 3
                  enum: []
                day_of_month:
                  type: integer
                  description: >-
                    The job would execute in this day of month (1-31). Required
                    if `frequency` is 4
                config:
                  type: string
                  description: config file
                  format: binary
          multipart/form-data:
            schema:
              properties:
                description:
                  type: string
                  description: Job description
                action:
                  type: integer
                  description: Action type
                  enum: []
                frequency:
                  type: integer
                  description: Job frequency
                  enum: []
                devices:
                  type: array
                  description: An Array of device ID
                  items:
                    type: integer
                time:
                  type: integer
                  description: >-
                    The job would execute once in this timestamp. Required if
                    `frequency is 1
                  format: unix timestamp
                hour:
                  type: integer
                  description: >-
                    The job would execute in hour (0-23). Required if
                    `frequency` is either 2, 3, or 4
                minute:
                  type: integer
                  description: >-
                    The job would execute in minute (0-59). Required if
                    `frequency` is either 2, 3, or 4
                day_of_week:
                  type: integer
                  description: >-
                    The job would execute in this day of week. Required if
                    `frequency` is 3
                  enum:
                    - 1
                    - 2
                    - 3
                    - 4
                    - 5
                    - 6
                    - 7
                day_of_month:
                  type: integer
                  description: >-
                    The job would execute in this day of month (1-31). Required
                    if `frequency` is 4
                config:
                  type: string
                  description: config file
                  format: binary
      responses:
        "200":
          description: OK
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
    delete:
      tags:
        - Job Scheduler
      description: Remove a job from Job Scheduler
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
        - name: id
          in: path
          description: The ID of the job to be updated
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content: {}
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
      security:
        - Bearer: []
  "/api/v2/grid/site/{siteId}/status":
    get:
      tags:
        - MXview One Grid
      description: Get PRP HSR link display status
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Display status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/grid-link-status"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "504":
          description: Request timeout.
          content: {}
    put:
      tags:
        - MXview One Grid
      description: Update link display status
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                prp_lan_a_flag:
                  type: boolean
                  description: prp_lan_a_flag
                prp_lan_b_flag:
                  type: boolean
                  description: prp_lan_b_flag
                hsr_flag:
                  type: boolean
                  description: prp_lan_a_flag
      responses:
        "200":
          description: Display status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/grid-link-status"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "422":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "504":
          description: Request timeout.
          content: {}
  "/api/v2/grid/site/{siteId}/tags":
    get:
      tags:
        - MXview One Grid
      description: Get all prp_lan_a ,prp_lan_b and hsr tag
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Display status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/grid-tag"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "504":
          description: Request timeout.
          content: {}
    post:
      tags:
        - MXview One Grid
      description: insert device into tag
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - prp_lan_b
              properties:
                prp_lan_b:
                  $ref: "#/components/schemas/grid-tag-post-property"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/grid-tag-property"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "504":
          description: Request timeout.
          content: {}
  "/api/v2/grid/site/{siteId}/tag":
    post:
      tags:
        - MXview One Grid
      description: create a new tag with name and type
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - name
                - type
              properties:
                name:
                  type: string
                  format: string
                  description: "tag name"
                type:
                  type: string
                  format: string
                  description: "tag type. like prp_lan_a hsr"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/grid-tag"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "504":
          description: Request timeout.
          content: {}
    delete:
      tags:
        - MXview One Grid
      description: Get all prp_lan_a ,prp_lan_b and hsr tag
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - tag_id
              properties:
                tag_id:
                  type: array
                  items:
                    type: integer
      responses:
        "200":
          description: Display status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "504":
          description: Request timeout.
          content: {}
  "/api/v2/grid/site/{siteId}/tag_devices":
    delete:
      tags:
        - MXview One Grid
      description: Add a substation .SCD file for Goose Check
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - tag_id
              properties:
                tag_id:
                  type: integer
                  description: tag id
                devices:
                  type: array
                  description: devices id
                  items:
                    type: integer
      responses:
        "200":
          description: Display status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "504":
          description: Request timeout.
          content: {}
  "/api/v2/grid/site/{siteId}/scd":
    put:
      tags:
        - MXview One Grid
      description: Add a substation .SCD file for Goose Check
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                data:
                  type: string
                  description: the xml-format scd file
      responses:
        "200":
          description: OK
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "504":
          description: Request timeout.
          content: {}
  "/api/v2/grid/site/{siteId}/goose":
    get:
      tags:
        - MXview One Grid
      description: Get goose inforamation of the network
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: The goose information of the network
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/goose-information"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "504":
          description: Request timeout.
          content: {}
  "/api/v2/grid/site/{siteId}/gooseflows":
    get:
      tags:
        - MXview One Grid
      description: Get goose flow
      parameters:
        - name: siteId
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: The goose information of the network
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    publisher:
                      type: integer
                      default: 1
                    subscriber:
                      type: integer
                      default: 1
                    links:
                      type: array
                      items:
                        type: object
                        properties:
                          status:
                            type: string
                          subscriber:
                            type: integer
                            default: 1
                          from:
                            type: integer
                            default: 10
                          to:
                            type: integer
                            default: 110
                    app_id:
                      type: string
                    mac:
                      type: string
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "504":
          description: Request timeout.
          content: {}
  "/api/v2/grid/site/{site_id}/goose/appid/{appid}/mac/{mac}":
    get:
      tags:
        - MXview One Grid
      description: Get goose infomation of published devices
      parameters:
        - name: site_id
          in: path
          description: site name
          required: true
          schema:
            type: string
            format: string
        - name: appid
          in: path
          description: the goose message of the appid
          required: true
          schema:
            type: string
            format: string
        - name: mac
          in: path
          description: the goose message of the mac
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: The goose information of the network
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/goose-message-information"
        "400":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mxview-errors"
        "401":
          description: The authorization token is invalid.
          content: {}
        "403":
          description: |
            errno:
              * -120: You are authenticated but don't have the right to access the resource
              * -510: The license status of designated sites is invalid
          content: {}
        "504":
          description: Request timeout.
          content: {}
components:
  schemas:
    EventLogTop:
      type: object
      properties:
        name:
          type: string
          description: column name
        value:
          type: integer
          description: quantity
    EventLogStatistic:
      type: object
      properties:
        time:
          type: string
          description: time in ISO data format, like 2024-03-21T13:00:00Z.
        count:
          type: integer
          description: quantity
    LogDistinct:
      type: object
      properties:
        data:
          type: object
          properties:
            event:
              type: array
              items:
                type: object
                properties:
                  category:
                    type: string
                    description: event category
                  event:
                    description: event name
                    type: array
                    items:
                      type: string
            severity:
              description: severity level
              type: array
              items:
                type: string
    AuditEventLog:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier representing a specific event log
        category:
          type: string
          description: Event category
        severity:
          type: string
          description: Event severity
          enum:
            - Emergency
            - Alert
            - Critical
            - Error
            - Warning
            - Notice
            - Informational
            - Debug
        event:
          type: string
          description: Event name.
        eventAt:
          type: string
          description: Event log happened time, ISO data format, like 2018-08-12T20:17:46.384Z.
        message:
          type: string
          description: Event message
        createdAt:
          type: string
          description: Event log created time, ISO data format, like 2018-08-12T20:17:46.384Z.
        deviceId:
          type: string
          description: Unique identifier representing a specific device
        hostname:
          type: string
          description: Device hostname
        userId:
          type: string
          description: Unique identifier representing a specific user
        username:
          type: string
          description: User name
        groupId:
          type: integer
          description: Unique identifier representing a specific group
        groupName:
          type: string
          description: Group name

    FirewallEventLog:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier representing a specific event log
        category:
          type: string
          description: Event category
        severity:
          type: string
          description: Event severity
          enum:
            - Emergency
            - Alert
            - Critical
            - Error
            - Warning
            - Notice
            - Informational
            - Debug
        eventId:
          type: string
          description: Event id.
        event:
          type: string
          description: Event name.
        eventAt:
          type: string
          description: Event log happened time, ISO data format, like 2018-08-12T20:17:46.384Z.
        message:
          type: string
          description: Event message
        createdAt:
          type: string
          description: Event log created time, ISO data format, like 2018-08-12T20:17:46.384Z.
        deviceId:
          type: string
          description: Unique identifier representing a specific device
        hostname:
          type: string
          description: Device hostname
        groupId:
          type: integer
          description: Unique identifier representing a specific group
        groupName:
          type: string
          description: Group name
        protocol:
          type: string
          description: event protocol
        srcPort:
          type: integer
          description: source port
        dstPort:
          type: integer
          description: destination port
        srcIp:
          type: string
          description: Source IP
        dstIp:
          type: string
          description: Destination IP
        fromInterface:
          type: string
          description: incoming interface
        toInterface:
          type: string
          description: outgoing interface
        action:
          type: string
          description: Event action
          enum:
            - pass
            - deny
        etherType:
          type: integer
          description: ethernet type
        srcMac:
          type: string
          description: source mac
        tcpFlag:
          type: string
          description: Source IP
        icmpType:
          type: integer
          description: ICMP type
        icmpCode:
          type: integer
          description: ICMP code
        policyId:
          type: integer
          description: policy id
        policyName:
          type: string
          description: policy name
        subCategory:
          type: string
          description: DOS sub category
        appProtocol:
          type: string
          description: DPI app protocol
        ipsCategory:
          type: string
          description: IPS category
        ipsSeverity:
          type: string
          description: IPS severity
    VpnEventLog:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier representing a specific event log
        severity:
          type: string
          description: Event severity
          enum:
            - Emergency
            - Alert
            - Critical
            - Error
            - Warning
            - Notice
            - Informational
            - Debug
        event:
          type: string
          description: Event name.
        eventAt:
          type: string
          description: Event log happened time, ISO data format, like 2018-08-12T20:17:46.384Z.
        message:
          type: string
          description: Event message
        createdAt:
          type: string
          description: Event log created time, ISO data format, like 2018-08-12T20:17:46.384Z.
        deviceId:
          type: string
          description: Unique identifier representing a specific device
        hostname:
          type: string
          description: Device hostname
        groupId:
          type: integer
          description: Unique identifier representing a specific group
        groupName:
          type: string
          description: Group name

    DeviceEventLog:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier representing a specific event log
        category:
          type: string
          description: Event category
        severity:
          type: string
          description: Event severity
          enum:
            - Emergency
            - Alert
            - Critical
            - Error
            - Warning
            - Notice
            - Informational
            - Debug
        event:
          type: string
          description: Event name.
        eventAt:
          type: string
          description: Event log happened time, ISO data format, like 2018-08-12T20:17:46.384Z.
        message:
          type: string
          description: Event message
        createdAt:
          type: string
          description: Event log created time, ISO data format, like 2018-08-12T20:17:46.384Z.
        deviceId:
          type: string
          description: Unique identifier representing a specific device
        mac:
          type: string
          description: Device mac
        hostname:
          type: string
          description: Device hostname
        userId:
          type: string
          description: Unique identifier representing a specific user
        username:
          type: string
          description: User name
        groupId:
          type: integer
          description: Unique identifier representing a specific group
        groupName:
          type: string
          description: Group name

    AuditEventLogList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/AuditEventLog"
        count:
          type: integer
          description: count of events
        offset:
          type: integer
          description: offset of query
        limit:
          type: integer
          description: limit of query

    FirewallEventLogList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/FirewallEventLog"
        count:
          type: integer
          description: count of events
        offset:
          type: integer
          description: offset of query
        limit:
          type: integer
          description: limit of query
    VpnEventLogList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/VpnEventLog"
        count:
          type: integer
          description: count of events
        offset:
          type: integer
          description: offset of query
        limit:
          type: integer
          description: limit of query

    DeviceEventLogList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/DeviceEventLog"
        count:
          type: integer
          description: count of events
        offset:
          type: integer
          description: offset of query
        limit:
          type: integer
          description: limit of query
    ADPParams:
      type: object
      properties:
        appProtocol:
          type: filter logs by application protocol
        policyId:
          type: filter logs by policy id
        policyName:
          type: filter logs by policy name
        etherType:
          type: filter logs by ether type
        protocol:
          type: filter logs by ip protocol
        fromInterface:
          type: filter logs by incoming inferface
        srcIp:
          type: filter logs by source ip
        srcPort:
          type: filter logs by source port
        toInterface:
          type: filter logs by outgoing inferface
        dstIp:
          type: filter logs by destination ip
        dstPort:
          type: filter logs by destination port
        action:
          type: filter logs by destination action
    DOSParams:
      type: object
      properties:
        subCategory:
          type: filter logs by sub category
        etherType:
          type: filter logs by ether type
        protocol:
          type: filter logs by ip protocol
        fromInterface:
          type: filter logs by incoming inferface
        srcMac:
          type: filter logs by source mac
        srcIp:
          type: filter logs by source ip
        srcPort:
          type: filter logs by source port
        toInterface:
          type: filter logs by outgoing inferface
        dstIp:
          type: filter logs by destination ip
        dstPort:
          type: filter logs by destination port
        tcpFlag:
          type: filter logs by tcp flag
        icmpType:
          type: filter logs by icmp type
        icmpCode:
          type: filter logs by icmp code
        action:
          type: filter logs by destination action
        message:
          type: filter logs by message
    DPIParams:
      type: object
      properties:
        appProtocol:
          type: filter logs by application protocol
        policyId:
          type: filter logs by policy id
        policyName:
          type: filter logs by policy name
        etherType:
          type: filter logs by ether type
        protocol:
          type: filter logs by ip protocol
        fromInterface:
          type: filter logs by incoming inferface
        srcIp:
          type: filter logs by source ip
        srcPort:
          type: filter logs by source port
        toInterface:
          type: filter logs by outgoing inferface
        dstIp:
          type: filter logs by destination ip
        dstPort:
          type: filter logs by destination port
        action:
          type: filter logs by destination action
    IPSParams:
      type: object
      properties:
        ipsSeverity:
          type: filter logs by severity
        ipsCategory:
          type: filter logs by ips category
        policyId:
          type: filter logs by policy id
        policyName:
          type: filter logs by policy name
        etherType:
          type: filter logs by ether type
        protocol:
          type: filter logs by ip protocol
        fromInterface:
          type: filter logs by incoming inferface
        srcMac:
          type: filter logs by source mac
        srcIp:
          type: filter logs by source ip
        srcPort:
          type: filter logs by source port
        toInterface:
          type: filter logs by outgoing inferface
        dstIp:
          type: filter logs by destination ip
        dstPort:
          type: filter logs by destination port
        tcpFlag:
          type: filter logs by tcp flag
        action:
          type: filter logs by destination action
    L2POLICYParams:
      type: object
      properties:
        etherType:
          type: filter logs by ether type
        srcMac:
          type: filter logs by source mac
        dstMac:
          type: filter logs by destination mac
        action:
          type: filter logs by destination action
    L3POLICYParams:
      type: object
      properties:
        policyId:
          type: filter logs by policy id
        policyName:
          type: filter logs by policy name
        etherType:
          type: filter logs by ether type
        protocol:
          type: filter logs by ip protocol
        fromInterface:
          type: filter logs by incoming inferface
        srcMac:
          type: filter logs by source mac
        srcIp:
          type: filter logs by source ip
        srcPort:
          type: filter logs by source port
        toInterface:
          type: filter logs by outgoing inferface
        dstIp:
          type: filter logs by destination ip
        dstPort:
          type: filter logs by destination port
        tcpFlag:
          type: filter logs by tcp flag
        icmpType:
          type: filter logs by icmp type
        icmpCode:
          type: filter logs by icmp code
        action:
          type: filter logs by destination action
    MALFORMEDParams:
      type: object
      properties:
        etherType:
          type: filter logs by ether type
        protocol:
          type: filter logs by ip protocol
        fromInterface:
          type: filter logs by incoming inferface
        srcMac:
          type: filter logs by source mac
        srcIp:
          type: filter logs by source ip
        srcPort:
          type: filter logs by source port
        toInterface:
          type: filter logs by outgoing inferface
        dstIp:
          type: filter logs by destination ip
        dstPort:
          type: filter logs by destination port
        tcpFlag:
          type: filter logs by tcp flag
        icmpType:
          type: filter logs by icmp type
        icmpCode:
          type: filter logs by icmp code
        action:
          type: filter logs by destination action
        message:
          type: filter logs by message
    SCParams:
      type: object
      properties:
        policyId:
          type: filter logs by policy id
        policyName:
          type: filter logs by policy name
        etherType:
          type: filter logs by ether type
        protocol:
          type: filter logs by ip protocol
        fromInterface:
          type: filter logs by incoming inferface
        srcMac:
          type: filter logs by source mac
        srcIp:
          type: filter logs by source ip
        srcPort:
          type: filter logs by source port
        toInterface:
          type: filter logs by outgoing inferface
        dstIp:
          type: filter logs by destination ip
        dstPort:
          type: filter logs by destination port
        tcpFlag:
          type: filter logs by tcp flag
        action:
          type: filter logs by destination action
    TRUSTACCESSParams:
      type: object
      properties:
        etherType:
          type: filter logs by ether type
        protocol:
          type: filter logs by ip protocol
        fromInterface:
          type: filter logs by incoming inferface
        srcMac:
          type: filter logs by source mac
        srcIp:
          type: filter logs by source ip
        srcPort:
          type: filter logs by source port
        toInterface:
          type: filter logs by outgoing inferface
        dstIp:
          type: filter logs by destination ip
        dstPort:
          type: filter logs by destination port
        tcpFlag:
          type: filter logs by tcp flag
        icmpType:
          type: filter logs by icmp type
        icmpCode:
          type: filter logs by icmp code
        action:
          type: filter logs by destination action
        message:
          type: filter logs by message
    PackageInfo:
      type: object
      properties:
        packageId:
          type: integer
          description: package id.
        description:
          type: string
          description: description of package.
        name:
          type: string
          description: name of package.
        version:
          type: string
          description: version of package.
        supportModelSeries:
          description: describe the support model series
          type: array
          items:
            type: string
        info:
          description: describe the detail info of package
          type: array
          items:
            type: string
        buildTime:
          type: integer
          description: build time of package, epoch time
        buildAt:
          type: string
          description: build time of package, ISO data format, like 2018-08-12T20:17:46.384Z
        profileInUse:
          type: object
          description: is this package referenced by profile
        scheduleInUse:
          type: object
          description: is this package referenced by schedule

    PackageIdRes:
      type: object
      properties:
        Package:
          $ref: "#/components/schemas/PackageInfo"
        PackageMemo:
          $ref: "#/components/schemas/PackageMemo"

    PackageMemo:
      type: object
      properties:
        packageId:
          type: integer
          description: package id.
        memo:
          type: object
          description: package memo info.

    PackageRemove:
      type: object
      properties:
        packageIdList:
          type: array
          description: package id list
          items:
            type: integer

    PackageUpdate:
      type: object
      properties:
        description:
          type: string
    UploadPackage:
      type: object
      required:
        - package
      properties:
        package:
          type: string
          format: binary
          description: Upload package file, .pkg file
        name:
          type: string
          description: package name
          enum:
            - janus
            - zeus
        description:
          type: string
          description: description of package
    Schedule:
      type: object
      properties:
        action:
          type: string
          description: action of schedule
          enum:
            - reboot
            - firmware
            - package
            - profile
            - restore
        name:
          type: string
          description: package action name
          enum:
            - janus
            - zeus
        payload:
          type: object
          description: schedule payload for different action
          properties:
            firmwareId:
              type: integer
              description: Valid for firmware action, firmwareId = -1 means up to date
            packageId:
              type: integer
              description: Valid for package action, packageId = -1 means up to date
            profileId:
              type: integer
              description: Valid for profile action
            configId:
              type: integer
              description: Valid for restore action
        content:
          type: object
          description: schedule content
          properties:
            mode:
              type: string
              description: schedule mode
              enum:
                - daily
                - weekly
                - oneTime
            dayOfWeek:
              type: array
              description: day of week, only valid in weekly mode
              items:
                type: integer
                enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
            time:
              type: string
              description: execution time, for weekly/daily the time format is 17:10(%H:%M), for onetTime the format is epoch time
            startDate:
              type: string
              description: start date for schedule, format is 2022-07-01 (%Y%M%D), valid for weekly and daily mode
            endDate:
              type: string
              description: end date for schedule, format is 2022-07-01 (%Y%M%D), valid for weekly and daily mode

    ScheduleRes:
      type: object
      properties:
        action:
          type: string
          description: action of schedule
          enum:
            - reboot
            - firmware
            - package
            - profile
            - restore
        payload:
          type: object
          description: schedule payload for different action
          properties:
            firmwareId:
              type: integer
              description: Valid for firmware action, firmwareId = -1 means up to date
            packageId:
              type: integer
              description: Valid for package action, packageId = -1 means up to date
            profileId:
              type: integer
              description: Valid for profile action
            configId:
              type: integer
              description: Valid for restore action
            firmwareVersion:
              type: string
              description: firmware version
            packageVersion:
              type: string
              description: package version
            profileName:
              type: string
              description: profile name
            configName:
              type: string
              description: config name
        content:
          type: object
          description: schedule content
          properties:
            mode:
              type: string
              description: schedule mode
              enum:
                - daily
                - weekly
                - oneTime
            dayOfWeek:
              type: array
              description: day of week, only valid in weekly mode
              items:
                type: integer
                enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
            time:
              type: string
              description: execution time, for weekly/daily the time format is 17:10(%H:%M), for onetTime the format is epoch time
            startDate:
              type: string
              description: start date for schedule, format is 2022/07/01 (%Y%M%D), valid for weekly and daily mode
            endDate:
              type: string
              description: end date for schedule, format is 2022/07/01 (%Y%M%D), valid for weekly and daily mode
    DeviceSchedulePatch:
      type: object
      properties:
        deviceIdList:
          type: array
          description: device id list of group
          items:
            type: string
        schedule:
          type: object
          $ref: "#/components/schemas/Schedule"
    DeviceScheduleRes:
      type: object
      properties:
        deviceIdList:
          type: array
          description: device id list of group
          items:
            type: string
        schedule:
          type: object
          $ref: "#/components/schemas/Schedule"
    DeviceScheduleRemove:
      type: object
      properties:
        deviceIdList:
          type: array
          description: device id list of group
          items:
            type: string
        action:
          type: string
          description: action schedule need be removed
        name:
          type: string
          enum:
            - janus
            - zeus
          description: package action need append package name
    DeviceJob:
      type: object
      properties:
        deviceIdList:
          type: array
          description: device id list of group
          items:
            type: string
        action:
          type: string
          enum:
            - reboot
            - firmware
            - package
            - profile
            - restore
          description: device action
        payload:
          type: object
          description: device action payload
    DeviceJobRes:
      type: object
      properties:
        message:
          type: string
          description: create job response
    Status:
      type: object
      properties:
        checkPackage:
          type: boolean
          description: checkPackage button status
        status:
          type: boolean
          description: connection status to moxasrs server
        lastTime:
          type: string
          description: last connection time to moxasrs server
        result:
          type: object
          properties:
            package:
              type: object
              properties:
                message:
                  type: string
                  description: last download update result msg
                mode:
                  type: string
                  description: last download update mode
                  enum:
                    - manually
                    - schedulely
                time:
                  type: string
                  description: last download update time
    PackageDict:
      type: object
      description: an object that key is modelSeries and value is array of that modelSeries' different version packages
      additionalProperties:
        x-additionalPropertiesName: modelSeries
        type: array
        items:
          $ref: "#/components/schemas/Package"
    Package:
      type: object
      properties:
        id:
          type: string
          description: unique id of package
        version:
          type: string
          description: package version
        downloadUrl:
          type: string
          description: package download link
        releaseNote:
          type: object
          $ref: "#/components/schemas/ReleaseNote"
    ReleaseNote:
      type: object
      properties:
        approach:
          type: string
        change:
          type: string
        enhancement:
          type: string
        feature:
          type: string
        fix:
          type: string
        impact:
          type: string
        note:
          type: string
        risk:
          type: string
        verification:
          type: string
        releaseTime:
          type: string
        applicableProduct:
          type: array
          items:
            type: string
        supportedOS:
          type: array
          items:
            type: string

    PackageDownload:
      type: object
      description: an object that key is modelSeries and value is array of that modelSeries' different version packages
      additionalProperties:
        x-additionalPropertiesName: modelSeries
        type: array
        items:
          type: object
          properties:
            version:
              type: string
              description: package version
            downloadUrl:
              type: string
              description: package download link
            releaseNote:
              type: object
              $ref: "#/components/schemas/ReleaseNote"
    Settings:
      type: object
      properties:
        sync:
          type: boolean
          description: schedule is active or not
        modelSeries:
          type: array
          description: download specific modelSeries
          items:
            type: string
        schedule:
          type: object
          properties:
            mode:
              type: string
              description: schedule mode
              enum:
                - daily
                - weekly
            dayOfWeek:
              type: array
              description: day of week, only valid in weekly mode
              items:
                type: integer
                enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
            time:
              type: string
              description: execution time, time format is 17:10(%H:%M)
            startDate:
              type: string
              description: start date for schedule, format is 2022-07-01 (%Y-%M-%D)
            endDate:
              type: string
              description: end date for schedule, format is 2022-07-01 (%Y-%M-%D)
    Interface:
      type: object
      properties:
        interfaceId:
          type: string
          description: unique identifier representing a specific interface
        name:
          type: string
          description: name of interface
        info:
          type: object
          description: info of interface
          $ref: "#/components/schemas/InterfaceInfo"
        objectInUse:
          type: object
          description: is this interface referenced by object

    InterfaceCreate:
      type: object
      required:
        - info
      properties:
        info:
          type: object
          description: info
          $ref: "#/components/schemas/InterfaceInfo"

    InterfaceUpdate:
      type: object
      properties:
        name:
          type: string
          description: name
        info:
          type: object
          description: info
          $ref: "#/components/schemas/InterfaceInfo"

    InterfaceInfo:
      type: object
      properties:
        name:
          type: string
          description: name
        mode:
          type: string
          description: mode of info
          enum:
            - VLAN
            - BRIDGE
        value:
          type: string
          description: value of info, VLAN available value(1 - 4094), BRIDGE available value(port, zone)

    InterfaceRemove:
      interfaceIdList:
        type: array
        description: interface id list
        items:
          type: integer

    InterfaceRes:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/Interface"

    Profile:
      type: object
      properties:
        profileId:
          type: string
          description: unique identifier representing a specific profile
        name:
          type: string
          description: name of profile
        description:
          type: string
          description: description of profile
        ngfw:
          type: object
          description: next generation firewall of profile
        deviceInUse:
          type: object
          description: is this profile referenced by device
        scheduleInUse:
          type: object
          description: is this profile referenced by schedule

    ProfileCreate:
      type: object
      required:
        - name
        - ngfw
      properties:
        name:
          type: string
          description: name
        description:
          type: string
          description: description of profile
        ngfw:
          type: object
          description: ngfw of profile

    ProfileUpdate:
      type: object
      properties:
        name:
          type: string
          description: name
        description:
          type: string
          description: description of profile
        ngfw:
          type: object
          description: ngfw of profile

    ProfileRemove:
      profileIdList:
        type: array
        description: profile id list
        items:
          type: integer

    ProfileRes:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/Profile"

    Object:
      type: object
      properties:
        objectId:
          type: string
          description: unique identifier representing a specific object
        name:
          type: string
          description: name of object
        info:
          type: object
          description: info of object
        profileInUse:
          type: object
          description: is this object referenced by policy

    ObjectCreate:
      type: object
      required:
        - info
      properties:
        info:
          type: object
          description: info

    ObjectUpdate:
      type: object
      properties:
        value:
          type: object
          description: value

    ObjectRemove:
      objectIdList:
        type: array
        description: object id list
        items:
          type: string

    ObjectRes:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/Object"

    NameExist:
      type: object
      properties:
        data:
          type: object
          properties:
            isExist:
              type: boolean
              description: determining if the objectname exists or not

    ObjectTable:
      type: object

    grid-tag:
      type: object
      properties:
        prp_lan_a:
          type: array
          items:
            $ref: "#/components/schemas/grid-tag-property"
          description: prp_lan_a
        prp_lan_b:
          type: array
          items:
            $ref: "#/components/schemas/grid-tag-property"
          description: prp_lan_b
        hsr:
          type: array
          items:
            $ref: "#/components/schemas/grid-tag-property"
          description: hsr
    grid-tag-property:
      type: array
      items:
        type: object
        properties:
          tag_id:
            type: integer
            default: 1
          name:
            type: string
            description: "tag name"
          devices:
            type: array
            description: "device of the tag which properties have device id location"
            items:
              type: object
              properties:
                id:
                  type: integer
                  default: 1
                x:
                  type: integer
                  default: 100
                y:
                  type: integer
                  default: 500
    grid-tag-post-property:
      type: array
      items:
        type: object
        properties:
          tag_id:
            type: integer
            default: 1
          name:
            type: string
            description: "tag name"
          devices:
            type: array
            description: "device of the tag which properties have device id location"
            items:
              type: object
              properties:
                id:
                  type: integer
                  default: 1
    grid-link-status:
      type: object
      properties:
        prp_lan_a_flag:
          type: boolean
          description: prp_lan_a_flag
        prp_lan_b_flag:
          type: boolean
          description: prp_lan_b_flag
        hsr_flag:
          type: boolean
          description: prp_lan_a_flag
    goose-message-information:
      description: Goose information from devices
      type: object
      properties:
        devices_id:
          type: array
          items:
            type: integer
            description: IED name
    site-goose-information:
      description: Goose information of a site
      type: object
      properties:
        ngi:
          $ref: "#/components/schemas/single-goose-information"
        site_id:
          type: string
          description: The ID of a site
    published-goose-message:
      description: The detail of the published goose message from an IED
      type: object
      properties:
        cb_name:
          type: string
          description: The control block name of the goose message
        vlan_id:
          type: integer
          description: the vlan ID of the goose message
        mac:
          type: string
          description: The Destination MAC Address of the goose message
        app_id:
          type: string
          description: The APP ID of the goose message
    subscribed-goose-message:
      description: The detail of the subscribed goose message from an IED
      type: object
      properties:
        cb_name:
          type: string
          description: The control block name of the goose message
        vlan_id:
          type: integer
          description: the vlan ID of the goose message
        mac:
          type: string
          description: The Destination MAC Address of the goose message
        app_id:
          type: string
          description: The APP ID of the goose message
    single-goose-information:
      description: Goose information of a device
      type: object
      properties:
        device_id:
          type: integer
          description: the device id in MXview One
        ied_name:
          type: string
          description: The IED name
        published_gm:
          $ref: "#/components/schemas/published-goose-message"
        subscribed_gm:
          $ref: "#/components/schemas/subscribed-goose-message"
    goose-information:
      type: array
      items:
        $ref: "#/components/schemas/single-goose-information"
      example:
        - device_id: 27
          ied_name: SZ02
          published_gms:
            - cb_name: GooseCB
              vlan_id: 0
              mac: 01-0C-CD-01-01-10
              app_id: 0BBA
          subscribed_gms:
            - ied_name: SZ01
              cb_name: GooseCB
        - device_id: 28
          ied_name: SZ01
          published_gms:
            - cb_name: GooseCB
              vlan_id: 0
              mac: 01-0C-CD-01-01-10
              app_id: 0BB9
          subscribed_gms: null
    mxview-devices-firmware:
      type: object
      properties:
        devices:
          type: object
          description: The devices in the model.
        ignore:
          type: boolean
          description: Ingore the model firmware update
        modelSeries:
          type: string
          description: the model name
        needUpgrade:
          type: integer
          description: devices counts needed to be upgraded
        count:
          type: integer
          description: devices counts
        state:
          type: integer
          description: The state of existence of this version of firmware. 1=Downloading, 2=In use, 3=Not in use, 4=Absent/corrupt, 5=no information. 2/3 represent the firmware file exists
        latestVersion:
          type: string
          description: the latest version of the model
        latestVersionBuild:
          type: string
          description: the latest version of the model build date
        latestVersionSecurity:
          type: boolean
          description: the latest version of the model is security patch
        lastSelected:
          type: string
          description: the latest selected version of the model
        selectedVersionBuild:
          type: string
          description: the selected version of the model build date
        selectedVersionSecurity:
          type: boolean
          description: the selected version of the model is security patch
        selectedVersionFilename:
          type: string
          description: the selected version of the model's firmware file name
        taskInfo:
          type: object
          description: the lastest task status
        status:
          type: string
          description: the lastest task status, Running, Waiting, Fail, Success
        securityMap:
          type: object
          description: the firmware version list of the model
      example:
        deviceModelList:
          EDS-408A:
            devices:
              - ip: 192.168.4.244
                id: 3
                mac: "0090e825cd7e"
                group: 0
                model: EDS-408A
                alias: 192.168.4.244--EDS-408A
                location: ""
                status: ""
                severity: 1
                icon_url: dev_images/EDS-408A.png
                icon_id: 0
                redundancy: 16
                x: 457
                y: 106
                sysobjid: ".1.3.6.1.4.1.8691.7.7"
                site_id: hacNnRloIAoZrdoZ
                wireless_role: 0
                router_role: 0
                prphsr_role: ""
                v3_trap_parse_status: 0
                device_components:
                  Availability:
                    status: 100.00%
                    index: "0"
                Appendix:
                Availability: 100.00%
            ignore: false
            modelSeries: EDS-408A
            sysobjid: ".1.3.6.1.4.1.8691.7.7"
            needUpgrade: 1
            count: 1
            state: 3
            latestVersion: "3.12"
            latestVersionBuild: ""
            latestVersionSecurity: false
            lastSelected: "3.12"
            selectedVersionBuild: ""
            selectedVersionSecurity: false
            selectedVersionFilename: moxa-eds-408a-series-firmware-v3.12.rom
        # firmwareInfo:
        # - result:
        #   - ip: 192.168.4.244
        #     current: "--"
        #     latest: '3.12'
        #     last_selected: '3.12'
        #     model: EDS-408A
        #     alias: 192.168.4.244--EDS-408A
        #   online: true
        #   site_id: hacNnRloIAoZrdoZ
        #   LastUpdated: 1692579444
        #   errno: 0
        # ignoreList:
        # - result:
        #   - model: MDS-G4012
        #     ignored: "-"
        #   site_id: hacNnRloIAoZrdoZ
        taskInfo:
          - ip: 192.168.4.243
            alias: 192.168.4.243--EDS-508A
            modelSeries: EDS-508A
            lastSelected: "3.9"
            selectedVersionBuild: "21110513"
            selectedVersionSecurity: false
            status: running
          - ip: 192.168.4.244
            alias: 192.168.4.244--EDS-408A
            modelSeries: EDS-408A
            lastSelected: "3.12"
            selectedVersionBuild: ""
            selectedVersionSecurity: false
            status: waiting

    scan-range-ori-req:
      type: array
      items:
        type: object
        description: the list of IP ranges.
        properties:
          active:
            type: boolean
            description: Is this scan range active?
          start:
            type: string
            description: The first IP Address of the scan range
          end:
            type: string
            description: The last IP Address of the scan range
          name:
            type: string
            description: The name of the scan range
          group_id:
            type: integer
            description: The ID of the group this scan range lives in
        example:
          active: true
          start: 192.168.127.195
          end: 192.168.127.195
          name: range-1
          group_id: 0
      example:
        - start: 192.168.127.1
          end: 192.168.127.254
          group_id: 0
          name: Sample scan range 1
          active: true
        - start: 192.168.128.1
          end: 192.168.128.254
          group_id: 0
          name: Sample scan range 2
          active: false

    scan-range-new-req:
      type: object
      properties:
        add_to_baseline:
          type: boolean
          description: scan and adding the devices to baseline or not
        scan_range:
          type: array
          description: a list of IP range
          items:
            type: object
            properties:
              active:
                type: boolean
                description: Is this scan range active?
              start:
                type: string
                description: The first IP Address of the scan range
              end:
                type: string
                description: The last IP Address of the scan range
              name:
                type: string
                description: The name of the scan range
              group_id:
                type: integer
                description: The ID of the group this scan range lives in

    scan-range-new-req-ex:
      type: object
      properties:
        add_to_baseline:
          type: boolean
          description: scan and adding the devices to baseline or not
        scan_range:
          type: array
          description: a list of IP range
          items:
            type: object
            properties:
              active:
                type: boolean
                description: Is this scan range active?
              start:
                type: string
                description: The first IP Address of the scan range
              end:
                type: string
                description: The last IP Address of the scan range
              name:
                type: string
                description: The name of the scan range
              group_id:
                type: integer
                description: The ID of the group this scan range lives in
              background_scan:
                type: boolean
                description: The scan range enable devices background_scan
              conflict_scan:
                type: boolean
                description: The scan range enable devices ip conflict_scan

    mxview-devices-release-note:
      type: object
      properties:
        ReleaseType:
          type: string
          description: If the ReleaseType contains Vulnerability, it will be displayed as a security update.
        state:
          type: integer
          description: The state of existence of this version of firmware. 1=Downloading, 2=In use, 3=Not in use, 4=Absent/corrupt, 5=no information
      example:
        - site_id: hacNnRloIAoZrdoZ
          ReleaseNote:
            change: |-
              • Removed "recommended browser" in the Web interface.
              • Cleaned the TACACS+ and RADIUS shared keys and SNMPv3 data encryption key after changing
              specific configurations (TACACS+/RADIUS login list, SNMP version, SNMP auth/encrypt option).
              • The default settings of "Modbus TCP Enable" was changed from enabled to disabled because of
              security concerns.
              • The default setting of "SNMP Enable" was changed from enabled to disabled because of security
              concerns.
            enhancememt: |-
              • The connected IGMP querier IP address can be shown in the Web interface and the command line
              interface.
              • There is a new SNMP Trap for when the status of the Digital Input (DI) changes.
              • Supports “hmac-sha2-256 & hmac-sha2-256 & diffie-hellman-group14-sha256” in SSH.
              • Supports 2048-bit RSA key in SSH.
              • Removed the DSA key.
              • The reset button is active for 10 minutes after rebooting the device.
              • The Modbus/TCP protocol is disabled by default due to security concerns.
              • The SNMP protocol is disabled by default due to security concerns.
              • Supports TLS v1.3.
              • The SFP Enable/Disable information can be shown via the CLI.
              • Supports TACACS+ Authentication, Authorization, and Accounting via the Web interface and command line interface.
              • Supports resetting specific interfaces to the default parameters via the command line interface.
              • Supports sequentially showing VLAN Trunk Ports with port numbers.
              • Supports a new CLI command "#sh logging event-log latest" to display the event log from the newest to the oldest.
              • Supports the Error Disable function for any specific ports that are linked down.
              • Supports two TACACS+ servers for Authentication, Authorization, and Accounting.
              • Supports SNMPv3 with AES encryption.
              • Supports RADIUS logging with MS-CHAPv2 encryption.
              • Displays the Web and Console management session via the Web interface, command line
              interface, and SNMP.
              • Supports adjustable threshold settings in the Fiber Check function.
              • The HTTPS Warning in Chrome and Edge browsers when importing the RootCA has been stopped.
              • Reserves only two ports for Turbo Ring when the DIP switch "TURBO RING" is on. (Four ports are reserved for Turbo Ring when the DIP switch "TURBO RING" and "COUPLER" are both on.)
              • Adjusts the Syslog format of Local/RADIUS/TACACS+ login for better readability.
              • Supports Syslog with the CEF format.
              • Related TCP ports (#502 and #44818) are disabled when disabling Modbus TCP and EtherNet/IP.
              • Supports a 12-digit serial number in Modbus TCP and EtherNet/IP.
            feature: |-
              • Supports the Media Redundancy Protocol (MRP).
              • Supports the Secure Copy Protocol (SCP).
              • Supports BPDU Guard and BPDU Filter.
            fix: |-
              • When both Trap servers were set, only one of the server names could be saved.
              • Operating SNMPv3 occasionally caused the device to reboot.
              • Sending e-mail notifications of cold/warm events occasionally failed.
              • The Gigabit port occasionally links down after configurations were restored by the ABC-02 device.
              • Specific LLDP packets occasionally caused the system to perform a warm start.
              • Unable to set the Trunk VLAN using MXconfig.
              • Importing the configuration file failed if the offset of daylight saving is 1.
              • The Canonical Format Indicator (CFI) flag was True in VLAN tagged packets (changed from True to
              False).
              • The wording of the SNMP port type on the Web interface was UDP not TCP.
              • The account and IP address of TACACS+ AAA were shown in the event log when TACACS+ AAA was successful.
              • When the authorization or accounting server disconnected, the local user ID was not able to login
              with "TACACS+, local mode".
              • VLAN configurations occasionally impacted the traffic of Trunk ports.
              • When copying and pasting commands in the CLI mode, the first two syntax-rows merged, which caused an error.
              • When exporting the configuration file to the TFTP server, the configuration file name included an
              extra backslash "\".
              • Part of the packet format of GMRP was incorrect (remove "GARP_END_MARK").
              • High latency of SSH connection and SSH key exchange.
              • Communication was lost for around 300 ms when changing the VLAN setting via the CLI.
              • IEEE 802.1x re-authentication could not be disabled.
              • Systems that used the module SFP-1FEMLC-T occasionally flapped.
              • Incorrect value was set to SNMP ifLastChange after specific interfaces were down or up.
              - The system occasionally rebooted when it was set with the maximum of 64 Tagged VLANs.
              - The system occasionally rebooted when the LLDP table was in a specific condition."
              • The system cold started when using N-Snap login via SSH.
              • Users occasionally could not connect to the system via SSH.
              • [CVE-2022-0778] Import certificate issue: Update OpenSSL package.
              • The event alarm was triggered on disabled ports when the event trigger alarm was set on these ports.
              • [CVE-2021-27417] The unverified memory assignment can lead to arbitrary memory allocation.
              • The space symbol " " in the SNMP location could not be displayed properly via the command line interface.
              • The system occasionally rebooted while polling via Modbus TCP.
              • System hangs or restarted when accessing the system via SSH by using Putty with version 0.60 or
              0.62.
            note: ""
          ReleaseType:
            - fix
            - feature
            - enhancement
          Importance: Important
          Version: "5.5"
          Build: "23032123"
          state: 4
        - site_id: hacNnRloIAoZrdoZ
          ReleaseNote:
            change: |-
              1. The IEEE 802.1x traffic enablement method has changed from MAC-based to port-based.
              2. The length of the 802.1x username is increased from 32 bytes to 64 bytes.
            enhancememt: |-
              1. The CPU utilization now displays a percentage instead of "Normal" and "Busy".
              2. Firmware upgrade processing status is displayed.
              3. Email addresses can contain up to 39 characters.
              4. Email Mail Servers can contain up to 39 characters.
              5. Enhanced SSH with secure key exchange algorithm, Diffie-Hellman Group 14.
              6. Improved random distribution of TCP Initial Sequence Number (ISN) values.
              7. Added an additional encryption option and command to the web UI and CLI.
            feature: 1. Supports Interface Tracking, Ping Tracking, and Logic Tracking.
            fix:
              "1. [MSRV-2017-002][CVE-2019-6563] Predictable Session ID: Supports random
              salt to prevent session prediction attack of HTTP/HTTPS.\n2. [MSRV-2017-003][CVE-2019-6526]
              Encryption of sensitive data is missing: Supports encrypted Moxa service with
              enable/disable button on the GUI to support the communication of encrypted commands
              with MXconfig/MXview.\n3. [MSRV-2017-004][CVE-2019-6524] Improper restriction
              of excessive authentication attempts: Supports encrypted Moxa service with enable/disable
              button on the GUI to support the communication of encrypted commands with MXconfig/MXview.\n4.
              [MSRV-2017-005][CVE-2019-6559] Resource exhaustion: Supports encrypted Moxa
              service with enable/disable button on the GUI to support the communication of
              encrypted commands with MXconfig/MXview.\n5. [MSRV-2019-006] Denial of Service
              by PROFINET DCE-RPC Endpoint discovery packets.\n6. The device would restart
              due to memory leak during the Nmap (a freeware that can scan the available ports)
              scanning test.\n7. RSTP Port Status error with Modbus TCP.\n8. Trunk port was
              not shown correctly in the LLDP table.\n9. The head switch of Turbo Chain was
              blocked when connecting to a Cisco switch.\n10. SNMP v3 memory leak.\n11. The
              device rebooted when performing a Nessus basic scan.\n12. MAC authentication
              bypass with RADIUS re-authentication.\n13. When SNMP pooled every 10 seconds,
              the system would perform a cold start after 25 minutes.\n14. The LLDP Table
              hung up in a serial console.\n15. Packet flooding from MGMT VLAN to redundancy
              port PVID VLAN.\n16. CERT could not be imported.\n17. Error with Turbo Ring
              v2 and port trunk LLDP display, recovery time and log miswrite.\n18. Relay warning
              did not work properly after the system rebooted.\n19. RSTP was not activated
              correctly through the configuration file import.\n20. Incorrect value for IGMP
              Query Interval on the exported configuration file.\n21. Logging into the web
              console failed if authentication with local RADIUS and account lockout were
              both enabled at the same time.\n22. Turbo Ring v2 looped when too many slaves
              in the ring were powered on at the same time.\n23. Switch automatically performed
              a cold start when receiving specific SNMPv3 packets.\n24. [CRM #200811300717]
              If a username had a capitalized letter then the user would not be able to log
              in using Menu mode.\n25. [CRM #190726273178] Unauthorized 802.1x devices could
              receive multicast and broadcast packets.\n26. [CRM #210115312454] Trap Server
              Host Name cannot be set via web GUI.\n27. [CRM #201019305310] Incorrect SNMPV3
              msgAuthoritativeEngineBoots behavior that the value will not count up after
              switch reboot. \n28. [CRM #200702298391] The relay trigger function by port
              traffic overload does not work."
            note: |-
              1. MSRV is Moxa's internal security vulnerability tracking ID.
              2. It is not possible to upgrade to firmware v5.4 directly from v4.1 or older.
          ReleaseType:
            - feature
            - enhancement
            - fix
          Importance: Important
          Version: "5.4"
          Build: "21042021"
          state: 3

    firmware_ignore_model:
      type: object
      properties:
        model:
          type: string
          description: device model name
        ignored:
          type: string
          description: firmware version to ignored, can be empty, dash or specify version. / - / 6.2
      example:
        model: EDS-510E
        ignored: "any"
    mxview-devices-readiness:
      type: object
      properties:
        state:
          type: integer
          description: 1=Downloading, 2=In use, 3=Not in use, 4=Absent/corrupt
      example:
        errno: 0
        message:
          state: 4
          site_id: rcnViLqysKIXtdIu

    firmware_download_from_mxsrc:
      type: object
      properties:
        model:
          type: string
          description: The model name
        version:
          type: string
          description: The firmware version
      example:
        model: EDS-510E
        version: "5.5"
    firmware_download_from_mxsrc_result:
      type: object
      properties:
        errno:
          type: integer
          description: negative number means error
        message:
          type: object
          description: error message when errno is negative number, result object when errno is zero.
        result:
          type: string
          description: Firmware IsReady=1, Download Started=2, Download Failed=3, Download Started=4
      example:
        errno: 0
        message:
          result: 1
          site_id: hacNnRloIAoZrdoZ
        # ----------------------------------------
        # errno: -102
        # message: no connection to mxsrc
        # ----------------------------------------
        # errno: -102
        # message: not found

    firmware_model_version:
      type: object
      properties:
        model:
          type: string
          description: |
            The model name
        selectedVersion:
          type: string
          description: |
            The devices firmware selected version
        selectedVersionBuild:
          type: string
          description: the selected version of the model build date
        selectedVersionSecurity:
          type: boolean
          description: the selected version of the model is security patch
        selectedVersionFilename:
          type: string
          description: the selected version of the model's firmware filename
      example:
        target:
          - model: EDS-508A
            selectedVersion: "3.9"
            selectedVersionBuild: "21110512"
            selectedVersionSecurity: false
            selectedVersionFilename: moxa-eds-508a-series-firmware-v3.9.rom
          - model: EDS-408A
            selectedVersion: "3.12"
            selectedVersionBuild: "21110512"
            selectedVersionSecurity: true
            selectedVersionFilename: moxa-eds-408a-series-firmware-v3.12.rom

    firmware_model_version_result:
      type: object
      properties:
        devices:
          type: object
          properties:
            modelSeries:
              type: string
              description: |
                The model name
            needUpgrade:
              type: integer
              description: |
                devices count need Upgrade
            count:
              type: integer
              description: |
                devices count in this model
            selectedVersion:
              type: string
              description: |
                The devices firmware selected version
            selectedVersionBuild:
              type: string
              description: the selected version of the model build date
            selectedVersionSecurity:
              type: boolean
              description: the selected version of the model is security patch
            selectedVersionFilename:
              type: string
              description: the selected version of the model's firmware filename
      example:
        EDS-408A:
          devices:
            - ip: 192.168.4.244
              id: 3
              mac: "0090e825cd7e"
              group: 0
              model: EDS-408A
              alias: 192.168.4.244--EDS-408A
              location: Switch Location
              status: ""
              severity: 1
              icon_url: dev_images/EDS-408A.png
              icon_id: 0
              redundancy: 16
              x: 457
              y: 106
              sysobjid: ".1.3.6.1.4.1.8691.7.7"
              site_id: hacNnRloIAoZrdoZ
              wireless_role: 0
              router_role: 0
              prphsr_role: ""
              v3_trap_parse_status: 0
              device_components:
                Availability:
                  status: 100.00%
                  index: "0"
                activeProtocolOfRedundancy:
                  status: turboRing
                  index: "0"
                cpuLoading:
                  status: "0"
                  index: "0"
                defaultGateway:
                  status: 0.0.0.0
                  index: "0"
                dhEnabled:
                  status: "no"
                  index: "0"
                dnsServer1IpAddr:
                  status: 0.0.0.0
                  index: "0"
                dnsServer2IpAddr:
                  status: 0.0.0.0
                  index: "0"
                enableAutoIpConfig:
                  status: disabled
                  index: "0"
                firmwareVersion:
                  status: V3.12 build 22101114
                  index: "0"
                ifDescr:
                  - status: Ethernet Port 1
                    index: "1"
                  - status: Ethernet Port 2
                    index: "2"
                  - status: Ethernet Port 3
                    index: "3"
                  - status: Ethernet Port 4
                    index: "4"
                  - status: Ethernet Port 5
                    index: "5"
                  - status: Ethernet Port 6
                    index: "6"
                  - status: Ethernet Port 7
                    index: "7"
                  - status: Ethernet Port 8
                    index: "8"
                  - status: Management Port of EtherDevice Server
                    index: "129"
                ifNumber:
                  status: "10"
                  index: "0"
                ifOperStatus:
                  - status: up
                    index: "1"
                  - status: up
                    index: "2"
                  - status: down
                    index: "3"
                  - status: down
                    index: "4"
                  - status: down
                    index: "5"
                  - status: down
                    index: "6"
                  - status: down
                    index: "7"
                  - status: down
                    index: "8"
                  - status: up
                    index: "129"
                ifSpeed:
                  - status: "100000000"
                    index: "1"
                  - status: "100000000"
                    index: "2"
                  - status: "10000000"
                    index: "3"
                  - status: "10000000"
                    index: "4"
                  - status: "10000000"
                    index: "5"
                  - status: "10000000"
                    index: "6"
                  - status: "10000000"
                    index: "7"
                  - status: "10000000"
                    index: "8"
                  - status: "100000000"
                    index: "129"
                ifType:
                  - status: ethernetCsmacd
                    index: "1"
                  - status: ethernetCsmacd
                    index: "2"
                  - status: ethernetCsmacd
                    index: "3"
                  - status: ethernetCsmacd
                    index: "4"
                  - status: ethernetCsmacd
                    index: "5"
                  - status: ethernetCsmacd
                    index: "6"
                  - status: ethernetCsmacd
                    index: "7"
                  - status: ethernetCsmacd
                    index: "8"
                  - status: ethernetCsmacd
                    index: "129"
                memoryUtilization:
                  status: "71"
                  index: "0"
                modelName:
                  status: EDS-408A-PN
                  index: "0"
                numberOfPorts:
                  status: "8"
                  index: "0"
                portDesc:
                  - status: 100TX,RJ45.
                    index: "1"
                  - status: 100TX,RJ45.
                    index: "2"
                  - status: 100TX,RJ45.
                    index: "3"
                  - status: 100TX,RJ45.
                    index: "4"
                  - status: 100TX,RJ45.
                    index: "5"
                  - status: 100TX,RJ45.
                    index: "6"
                  - status: 100TX,RJ45.
                    index: "7"
                  - status: 100TX,RJ45.
                    index: "8"
                portEnable:
                  - status: "1"
                    index: "1"
                  - status: "1"
                    index: "2"
                  - status: "1"
                    index: "3"
                  - status: "1"
                    index: "4"
                  - status: "1"
                    index: "5"
                  - status: "1"
                    index: "6"
                  - status: "1"
                    index: "7"
                  - status: "1"
                    index: "8"
                portName:
                  - status: T
                    index: "1"
                  - status: Test
                    index: "2"
                  - status: Test
                    index: "3"
                  - status: Test
                    index: "4"
                  - status: Test
                    index: "5"
                  - status: Test
                    index: "6"
                  - status: Test
                    index: "7"
                  - status: Test
                    index: "8"
                portSpeed:
                  - status: auto
                    index: "1"
                  - status: auto
                    index: "2"
                  - status: auto
                    index: "3"
                  - status: auto
                    index: "4"
                  - status: auto
                    index: "5"
                  - status: auto
                    index: "6"
                  - status: auto
                    index: "7"
                  - status: auto
                    index: "8"
                power1InputStatus:
                  status: "on"
                  index: "0"
                power2InputStatus:
                  status: "off"
                  index: "0"
                snmpInformEnable:
                  status: disabled
                  index: "0"
                snmpInformRetries:
                  status: "3"
                  index: "0"
                snmpInformTimeout:
                  status: "10"
                  index: "0"
                sysContact:
                  status: ""
                  index: "0"
                sysDescr:
                  status: EDS-408A-PN
                  index: "0"
                sysLocation:
                  status: Switch Location
                  index: "0"
                sysName:
                  status: ""
                  index: "0"
                sysObjectId:
                  status: ".1.3.6.1.4.1.8691.7.7"
                  index: "0"
                sysUpTime:
                  status: "5953369"
                  index: "0"
                usnmpTrap2Community:
                  status: ""
                  index: "0"
                usnmpTrapCommunity:
                  status: ""
                  index: "0"
                utrap2ServerAddr:
                  status: ""
                  index: "0"
                utrapServerAddr:
                  status: ""
                  index: "0"
              Appendix:
              Availability: 100.00%
          modelSeries: EDS-408A
          sysobjid: ".1.3.6.1.4.1.8691.7.7"
          needUpgrade: 1
          count: 1
          selectedVersion: "3.12"
          selectedVersionBuild: "21110512"
          selectedVersionSecurity: true
          selectedVersionFilename: moxa-eds-408a-series-firmware-v3.12.rom

    # mxview-devices-srs-status :
    #   type: object
    #   example:
    #     moxaSRSStatus:
    #     - current_status: false
    #       site_id: hacNnRloIAoZrdoZ

    mxview-devices-check-schedule-result:
      type: object
      properties:
        frequency:
          type: integer
          description: 1=once 2=daily 3=weekly 4=monthly
        id:
          type: integer
          description: uniqueId of the check schedule
      example:
        online: false
        lastUpdated: 1692157776
        hasSchedule: true
        scheduleInfo:
          id: 5
          hour: 10
          minute: 20
          name: checkSchedule
          action: 4
          day: 1
          month: 1
          year: 1
          day_of_week: 0
          day_of_month: 0
          frequency: 2
          description: SRS check
          devices:
          filename: ""
          site_id: hacNnRloIAoZrdoZ

    mxview-devices-check-schedule-new-request:
      type: object
      properties:
        frequency:
          type: integer
          description: 1=once 2=daily 3=weekly 4=monthly
        time:
          type: integer
          description: unix timestamp
          format: unix timestamp
          example: 1701835208
        hour:
          type: integer
          description: >-
            The job would execute in hour (0-23). Required if
            `frequency` is either 2, 3, or 4
        minute:
          type: integer
          description: >-
            The job would execute in minute (0-59). Required if
            `frequency` is either 2, 3, or 4
        day_of_week:
          type: integer
          description: >-
            The job would execute in this day of week(0-6). Required if
            `frequency` is 3, 0=Sunday ... 6=Saturday
        day_of_month:
          type: integer
          description: >-
            The job would execute in this day of month (1-31). Required
            if `frequency` is 4
    mxview-devices-check-schedule-new-response:
      type: object
      properties:
        id:
          type: integer
          description: uniqueId of the check schedule
      example:
        errno: 0
        message:
          - id: 8
            site_id: hacNnRloIAoZrdoZ

    mxview-devices-latest-info-result:
      type: object
      properties:
        online:
          type: boolean
          description: MoxaSRS Service is connected
        lastUpdated:
          type: integer
          description: update time
        hasSchedule:
          type: boolean
          description: MoxaSRS check schedule is enable
        errno:
          type: integer
          description: negative number indicates that mxview haven't connect to MoxaSRS Service before. (can't use this firmware upgrade feature), if the value is zero and the online flag is also false, represents the offline mode.
        frequency:
          type: integer
          description: 1=once 2=daily 3=weekly 4=monthly
        id:
          type: integer
          description: uniqueId of the check schedule
      example:
        online: false
        errno: 0
        lastUpdated: 1692157776
        hasSchedule: true
        scheduleInfo:
          id: 5
          hour: 10
          minute: 20
          name: checkSchedule
          action: 4
          day: 1
          month: 1
          year: 1
          day_of_week: 0
          day_of_month: 0
          frequency: 2
          description: SRS check
          site_id: hacNnRloIAoZrdoZ

    mxview-devices-check-schedule-delete-request:
      type: object
      properties:
        id:
          type: integer
          description: uniqueId of the check schedule
      example:
        id: 8

    firmware_update_task_request:
      type: object
      properties:
        target:
          type: array
          items:
            type: object
            properties:
              ip:
                type: string
                description: |
                  device ip
              targetVersion:
                type: string
                description: |
                  firmware version
              order:
                type: integer
                description: |
                  devices update order
          description: selected devices informations to upgrade firmware
        command:
          type: string
          description: |
            The update strategy:
              * 0: SmartConcurrent (System recommended order)
              * 1: Sequential (User defined order)
              * 2: Concurrent (All devices are updated simultaneously)

        stop:
          type: boolean
          description: |
            stop all upgrade task when any upgrade error occurred:
              * true: stop
              * false: continue process the next devices
      example:
        target:
          - ip: 192.168.4.244
            targetVersion: "3.12"
            order: 1
          - ip: 192.168.4.245
            targetVersion: "3.11"
            order: 3
        command: "2"
        stop: true

    firmware_update_task_response:
      type: object
      properties:
        tasks:
          type: array
          items:
            type: object
            properties:
              message:
                type: string
                description: |
                  error messages
              errno:
                type: integer
                description: |
                  error number
      example:
        tasks:
          - message: "OK"
            errno: 0

    firmware_update_task_query_response:
      type: object
      properties:
        running:
          type: array
          items:
            type: string
            description: |
              The IP of the devices running upgrade:
                * []: no task is running
                * ['192.168.127.122']: The running devices IP
        waiting:
          type: array
          items:
            type: string
            description: |
              The IP of the devices waiting for upgrade:
                * []: no task is waiting
                * ['192.168.4.244', '192.168.4.245']: The waiting devices IP
        fail:
          type: array
          items:
            type: string
            description: |
              The IP of the devices upgraded fail
                * []: no task is fail
        success:
          type: array
          items:
            type: string
            description: |
              The IP of the devices upgraded finish
                * []: no task is success
        site_id:
          type: string
          description: The siteId
      example:
        tasks:
          - running: []
            waiting:
              - 192.168.4.244
              - 192.168.4.245
            fail: []
            success: []
            site_id: rcnViLqysKIXtdIu

    firmware_update_strategy_request:
      type: object
      properties:
        ip:
          type: string
          description: The device IP
        id:
          type: integer
          description: The device id
        sysobjid:
          type: string
          description: The device sysobjid
        currentVersion:
          type: string
          description: The device current firmware version
        selectedVersion:
          type: string
          description: The device target firmware version
        selectedVersionBuild:
          type: string
          description: the selected version of the model build date
        selectedVersionSecurity:
          type: boolean
          description: the selected version of the model is security patch
        selectedVersionFilename:
          type: string
          description: the selected version of the firmware filename
      example:
        target:
          - ip: 192.168.4.244
            id: 3
            model: EDS-408A
            alias: 192.168.4.244--EDS-408A
            sysobjid: ".1.3.6.1.4.1.8691.7.7"
            currentVersion: V3.9 build 22030411
            selectedVersion: "3.12"
            selectedVersionBuild: "21110512"
            selectedVersionSecurity: False
            selectedVersionFilename: moxa-eds-408a-series-firmware-v3.12.rom

    firmware_update_strategy_response:
      type: object
      properties:
        mxviewInTopology:
          type: boolean
          description: the MXview is in the topology, if not, only can use concurrent update
        currentVersion:
          type: string
          description: The device current firmware version
        targetVersion:
          type: string
          description: The device target firmware version
        sequentialOrder:
          type: integer
          description: The device update sequence in Sequential mode
        concurrentOrder:
          type: integer
          description: The device update sequence in Concurrent mode
        smartConcurrentOrder:
          type: integer
          description: The device update sequence in Optimized Sequential mode
        distanceFromMXview:
          type: integer
          description: The device distance from MXView
        selectedVersionFilename:
          type: string
          description: the selected version of the firmware filename

      example:
        mxviewInTopology: true
        target:
          - ip: 192.168.4.244
            id: 3
            model: EDS-408A
            alias: 192.168.4.244--EDS-408A
            sysobjid: ".1.3.6.1.4.1.8691.7.7"
            current_version: V3.9 build 22030411
            currentVersion: "3.12"
            selectedVersion: "3.12"
            selectedVersionBuild: "21110512"
            selectedVersionSecurity: false
            distanceFromMXview: 3
            sequentialOrder: 1
            concurrentOrder: 1
            smartConcurrentOrder: 1
            selectedVersionFilename: moxa-eds-408a-series-firmware-v3.12.rom

    builtin_commands_strategy_request:
      type: object
      properties:
        ip:
          type: string
          description: The device IP
        id:
          type: integer
          description: The device id
        sysobjid:
          type: string
          description: The device sysobjid
        alias:
          type: string
          description: The device alias
        model:
          type: string
          description: The device model
      example:
        target:
          - ip: 192.168.4.244
            id: 11
            model: EDS-408A
            alias: 192.168.4.244--EDS-408A
          - ip: 192.168.4.243
            id: 10
            model: EDS-508A
            alias: 192.168.4.243--EDS-508A

    builtin_commands_strategy_response:
      type: object
      properties:
        mxviewInTopology:
          type: boolean
          description: the MXview is in the topology, if not, only can use concurrent update
        ip:
          type: string
          description: The device IP
        id:
          type: integer
          description: The device id
        alias:
          type: string
          description: The device alias
        model:
          type: string
          description: The device model
        sequentialOrder:
          type: integer
          description: The device update sequence in Sequential mode
        concurrentOrder:
          type: integer
          description: The device update sequence in Concurrent mode
        smartConcurrentOrder:
          type: integer
          description: The device update sequence in Optimized Sequential mode
        distanceFromMXview:
          type: integer
          description: The device distance from MXView

      example:
        mxviewInTopology: true
        target:
          - ip: 192.168.4.244
            id: 11
            model: EDS-408A
            alias: 192.168.4.244--EDS-408A
            distanceFromMXview: 4
            sequentialOrder: 1
            concurrentOrder: 1
            smartConcurrentOrder: 1
          - ip: 192.168.4.243
            id: 10
            model: EDS-508A
            alias: 192.168.4.243--EDS-508A
            distanceFromMXview: 2
            sequentialOrder: 2
            concurrentOrder: 1
            smartConcurrentOrder: 2

    firmware_update_task_schedule_request:
      type: object
      properties:
        targets:
          type: array
          items:
            type: object
            properties:
              deviceID:
                type: string
                description: |
                  the device ID
              targetVersion:
                type: string
                description: |
                  firmware version
              order:
                type: integer
                description: |
                  devices update order
          description: selected devices informations to upgrade firmware
        command:
          type: string
          description: |
            The update strategy:
              * 0: Optimized Sequential (System recommended order)
              * 1: Sequential (User defined order)
              * 2: Concurrent (All devices are updated simultaneously)

        stop:
          type: boolean
          description: |
            stop all upgrade task when any upgrade error occurred:
              * true: stop
              * false: continue process the next devices
      example:
        name: Test
        description: firmware update
        action: "5"
        frequency: "2"
        hour: "17"
        minute: "59"
        day_of_week: "1"
        day_of_month: "1"
        targets:
          - deviceID: 3
            filename: moxa-eds-408a-series-firmware-v3.12.rom
            order: 2
          - deviceID: 4
            filename: moxa-eds-508a-series-firmware-v3.9.rom
            order: 1

    firmware_update_task_schedule_response:
      type: object
      properties:
        errno:
          type: integer
          description: negative number means error
        message:
          type: object
          description: error message when errno is negative number, result object when errno is zero.
        id:
          type: integer
          description: The uniqueId of the upgrade schedule
      example:
        errno: 0
        message:
          id: 18
          site_id: hacNnRloIAoZrdoZ

    builtin_commands_task_schedule_response:
      type: object
      properties:
        errno:
          type: integer
          description: negative number means error
        message:
          type: object
          description: error message when errno is negative number, result object when errno is zero.
        id:
          type: integer
          description: The uniqueId of the upgrade schedule
      example:
        errno: 0
        message:
          id: 18
          site_id: hacNnRloIAoZrdoZ

    device-unencrypted-port-request:
      type: object
      properties:
        ip:
          type: string
          description: The ip of the device to be updated
      example:
        ip: 192.168.127.17

    cli_query_response:
      type: object
      properties:
        id:
          type: integer
          description: The unique id of the CLI command
        name:
          type: string
          description: The name of the CLI command
        description:
          type: string
          description: The description of the CLI command
        script:
          type: string
          description: The command lines of the CLI command
        scheduleMap:
          type: array
          description: The list of the schedule contains this CLI
          items:
            type: object
            properties:
              name:
                type: name
                description: The name of the CLI schedule
              description:
                type: string
                description: The description of the CLI schedule
              filename:
                type: string
                description: The execution CLI id of the CLI schedule
            example:
              [{ "name": "Test", "description": "Test", "filename": "9" }]
        btnGroup:
          type: array
          description: The list of the btnName contains this CLI
          items:
            type: string
            description: The the btn Name contains this CLI
            example: ["reboot"]
      example:
        cliscripts:
          - name: reboot
            description: test description
            script: "reload\r\ny\r\n"
            id: 9
            scheduleMap:
              - name: Test
                description: Test
                filename: "9"
              - name: Test
                description: firmware update
                filename: "9"
            btnGroup: ["reboot"]
          - name: ttt
            description: test description aaa
            script: "reload\r\nY\r\n"
            id: 8
        site_id: hacNnRloIAoZrdoZ

    cli_btn_query_response:
      type: object
      properties:
        site_id:
          type: string
          description: The ID of a site
        size:
          type: integer
          description: The size of the Btn Group，1/2/3/4，1=Extra Large, 2=Large, 3=Medium, 4=Small
        ask_password:
          type: boolean
          description: Should the password be checked when executing the CLI
        show_button_widget:
          type: boolean
          description: CLI display style, true shows Btn Widget, false shows Btn Panel.
        caption_string:
          type: string
          description: Btn Widget title
        caption_text_color:
          type: string
          description: Btn Widget title color
        caption_background_color:
          type: string
          description: Btn Widget title background color
        groups:
          type: array
          description: List of CLI Button Group
          items:
            type: object
            properties:
              name:
                type: string
                description: Group Name of CLI Btn
              last_execution_time:
                type: integer
                description: Btn last execution time
              trigger_user:
                type: string
                description: trigger user name
              btn_list:
                type: array
                description: List of CLI Button
                items:
                  type: object
                  properties:
                    button_color:
                      type: string
                      description: "The button background color (RGB, #333333)"
                    text_color:
                      type: string
                      description: "The button text color (RGB, #FFFFFF)"
                    name:
                      type: string
                      description: The name of the CLI Btn
                    description:
                      type: string
                      description: The description of the CLI Btn
                    script:
                      type: string
                      description: The command lines of the CLI Btn
                    id:
                      type: integer
                      description: The unique id of the CLI Btn
                    button_affected_ips:
                      type: string
                      description: The affected devices of the CLI Btn
                    button_state:
                      type: boolean
                      description: The state the CLI Btn
                    button_affected_groups:
                      type: object
                      description: The group and devices hierarchical relationship.
                    button_affected_devices:
                      type: object
                      description: The affected devices of the CLI Btn
        button_affected_groups:
          type: object
          description: The group and devices hierarchical relationship.
      example:
        site_id: EWFZZlQJKajhLbCL
        size: 2
        ask_password: true
        show_button_widget: true
        caption_string: a Title
        caption_text_color: "#FFFFFF"
        caption_background_color: "#008787"
        groups:
          - name: Unnamed
            last_execution_time: 1737690200,
            trigger_user: "admin"
            btn_list:
              - button_color: "#0d0087"
                text_color: "#000000"
                button_timestamp: "2025-01-24T11:43:20.447335+08:00"
                button_trigger: "admin"
                button_affected_ips: '[{"ip":"192.168.123.151"},{"ip":"192.168.123.153"}]'
                button_state: true,
                name: Btn1
                description: Btn1
                script: '[{"id":1,"ip":"192.168.123.151"}]'
                id: 5
                button_affected_groups:
                  - site_id: EWFZZlQJKajhLbCL
                    id: 5
                    state: -1
                    severity: 1
                    name: G1
                    description: G1
                    x: 206
                    y: 241
                    parent_id: 0
                    device_group: false
                    devices:
                      - group: 5
                        id: 8
                        ip: 192.168.127.197
                        alias: 192.168.127.197--ICMP Device
                        sysobjid: ""
                        selected: false
                  - site_id: EWFZZlQJKajhLbCL
                    id: 6
                    state: -1
                    severity: 1
                    name: G2
                    description: G2
                    x: 249
                    y: 160
                    parent_id: 5
                    device_group: false
                    devices:
                      - group: 6
                        id: 7
                        ip: 192.168.123.195
                        alias: 192.168.123.195--ICMP Device
                        sysobjid: ""
                        selected: false
                  - site_id: EWFZZlQJKajhLbCL
                    id: 0
                    state: -1
                    severity: 1
                    name: Root
                    description: The top layer group
                    x: 0
                    y: 0
                    parent_id: 0
                    device_group: false
                    devices:
                      - group: 0
                        id: 1
                        ip: 192.168.123.151
                        alias: 192.168.123.151--EDS-G516E
                        sysobjid: ".1.3.6.1.4.1.8691.7.71"
                        selected: true
                      - group: 0
                        id: 3
                        ip: 192.168.123.153
                        alias: 192.168.123.153--EDS-405A
                        sysobjid: ".1.3.6.1.4.1.8691.7.6"
                        selected: true
                button_affected_devices:
                  - group: 0
                    id: 1
                    ip: 192.168.123.151
                    alias: 192.168.123.151--EDS-G516E
                    sysobjid: ".1.3.6.1.4.1.8691.7.71"
                    selected: true
                  - group: 0
                    id: 3
                    ip: 192.168.123.153
                    alias: 192.168.123.153--EDS-405A
                    sysobjid: ".1.3.6.1.4.1.8691.7.6"
                    selected: true
              - button_color: "#138700"
                text_color: "#000000"
                button_timestamp: ""
                button_trigger: ""
                button_affected_ips: '[{"ip":"192.168.123.151"}]'
                button_state: false,
                name: Btn2
                description: Btn2
                script: '[{"id":2,"ip":"192.168.123.152"}]'
                id: 6
                button_affected_groups:
                  - site_id: EWFZZlQJKajhLbCL
                    id: 5
                    state: -1
                    severity: 1
                    name: G1
                    description: G1
                    x: 206
                    y: 241
                    parent_id: 0
                    device_group: false
                    devices:
                      - group: 5
                        id: 8
                        ip: 192.168.127.197
                        alias: 192.168.127.197--ICMP Device
                        sysobjid: ""
                        selected: false
                  - site_id: EWFZZlQJKajhLbCL
                    id: 6
                    state: -1
                    severity: 1
                    name: G2
                    description: G2
                    x: 249
                    y: 160
                    parent_id: 5
                    device_group: false
                    devices:
                      - group: 6
                        id: 7
                        ip: 192.168.123.195
                        alias: 192.168.123.195--ICMP Device
                        sysobjid: ""
                        selected: false
                  - site_id: EWFZZlQJKajhLbCL
                    id: 0
                    state: -1
                    severity: 1
                    name: Root
                    description: The top layer group
                    x: 0
                    y: 0
                    parent_id: 0
                    device_group: false
                    devices:
                      - group: 0
                        id: 1
                        ip: 192.168.123.151
                        alias: 192.168.123.151--EDS-G516E
                        sysobjid: ".1.3.6.1.4.1.8691.7.71"
                        selected: true
                      - group: 0
                        id: 3
                        ip: 192.168.123.153
                        alias: 192.168.123.153--EDS-405A
                        sysobjid: ".1.3.6.1.4.1.8691.7.6"
                        selected: false
                button_affected_devices:
                  - group: 0
                    id: 1
                    ip: 192.168.123.151
                    alias: 192.168.123.151--EDS-G516E
                    sysobjid: ".1.3.6.1.4.1.8691.7.71"
                    selected: true
        button_affected_groups:
          - site_id: EWFZZlQJKajhLbCL
            id: 5
            state: -1
            severity: 1
            name: G1
            description: G1
            x: 206
            y: 241
            parent_id: 0
            device_group: false
            devices:
              - group: 5
                id: 8
                ip: 192.168.127.197
                alias: 192.168.127.197--ICMP Device
                sysobjid: ""
                selected: false
          - site_id: EWFZZlQJKajhLbCL
            id: 6
            state: -1
            severity: 1
            name: G2
            description: G2
            x: 249
            y: 160
            parent_id: 5
            device_group: false
            devices:
              - group: 6
                id: 7
                ip: 192.168.123.195
                alias: 192.168.123.195--ICMP Device
                sysobjid: ""
                selected: false
          - site_id: EWFZZlQJKajhLbCL
            id: 0
            state: -1
            severity: 1
            name: Root
            description: The top layer group
            x: 0
            y: 0
            parent_id: 0
            device_group: false
            devices:
              - group: 0
                id: 1
                ip: 192.168.123.151
                alias: 192.168.123.151--EDS-G516E
                sysobjid: ".1.3.6.1.4.1.8691.7.71"
                selected: false
              - group: 0
                id: 3
                ip: 192.168.123.153
                alias: 192.168.123.153--EDS-405A
                sysobjid: ".1.3.6.1.4.1.8691.7.6"
                selected: false

    btn_group_modify_request:
      type: object
      properties:
        size:
          type: integer
          description: The size of the Btn Group，1/2/3/4，1=Extra Large, 2=Large, 3=Medium, 4=Small
        ask_password:
          type: boolean
          description: Should the password be checked when executing the CLI
        show_button_widget:
          type: boolean
          description: CLI display style, true shows Btn Widget, false shows Btn Panel.
        caption_string:
          type: string
          description: Btn Widget title
        caption_text_color:
          type: string
          description: Btn Widget title color
        caption_background_color:
          type: string
          description: Btn Widget title background color
        groups:
          type: array
          description: List of CLI Button Group
          items:
            type: object
            properties:
              name:
                type: string
                description: Group Name of CLI Btn
              btn_list:
                type: array
                description: List of CLI Button
                items:
                  type: object
                  properties:
                    button_color:
                      type: string
                      description: "The button background color (RGB, #333333)"
                    text_color:
                      type: string
                      description: "The button text color (RGB, #FFFFFF)"
                    name:
                      type: string
                      description: The name of the CLI Btn
                    description:
                      type: string
                      description: The description of the CLI Btn
                    script:
                      type: string
                      description: The command lines of the CLI Btn
                    id:
                      type: integer
                      description: The unique id of the CLI Btn
                    button_affected_ips:
                      type: string
                      description: The affected devices of the CLI Btn
                    button_state:
                      type: boolean
                      description: The state the CLI Btn
    add_cli_commands:
      type: object
      properties:
        name:
          type: string
          description: The name of the CLI command
        description:
          type: string
          description: The description of the CLI command
        script:
          type: array
          description: The list of the CLI command, or CLI Collection in json format
          items:
            type: string
            example: [reload, y]
      example:
        name: reboot
        description: test description
        script:
          - reload
          - y
    add_cli_btn:
      type: object
      properties:
        name:
          type: string
          description: The name of the CLI Button
        description:
          type: string
          description: The description of the CLI Button
        script:
          type: array
          description: The list of the CLI Collection in json format
          items:
            type: object
            properties:
              id:
                type: integer
                description: the id of CLI Script
              ip:
                type: string
                description: the ip of a device
        group_name:
          type: string
          description: The name of the Button Group
        group_order:
          type: integer
          description: The display order of the Button Group
        button_order:
          type: integer
          description: The display order of the Btn in the group
        button_color:
          type: string
          description: "The button background color (RGB, #333333)"
        text_color:
          type: string
          description: "The button text color (RGB, #FFFFFF)"
        button_affected_ips:
          type: string
          description: The affected devices of the CLI Btn
        button_state:
          type: boolean
          description: The state the CLI Btn

    edit_cli_commands:
      type: object
      properties:
        id:
          type: integer
          description: The unique id of the CLI command
        name:
          type: string
          description: The name of the CLI command
        description:
          type: string
          description: The description of the CLI command
        script:
          type: array
          description: The list of the CLI command
          items:
            type: string
            description: The script
          example: [locator, exit]
    edit_cli_btn:
      type: object
      properties:
        id:
          type: integer
          description: The unique id of the CLI Button
        name:
          type: string
          description: The name of the CLI Button
        description:
          type: string
          description: The description of the CLI Button
        script:
          type: array
          description: The list of the CLI Collection in json format
          items:
            type: object
            properties:
              id:
                type: integer
                description: the id of CLI Script
              ip:
                type: string
                description: the ip of device
            example:
              id: 2
              ip: 192.168.4.244
          example: [{ id: 2, ip: 192.168.4.244 }, { id: 3, ip: 192.168.4.245 }]
        group_name:
          type: string
          description: The name of the Button Group
        group_order:
          type: integer
          description: The display order of the Group
        button_order:
          type: integer
          description: The display order of the Btn in the group
        button_color:
          type: string
          description: "The button background color (RGB, #333333)"
        text_color:
          type: string
          description: "The button text color (RGB, #FFFFFF)"
        button_affected_ips:
          type: string
          description: The affected devices of the CLI Btn
        button_state:
          type: boolean
          description: The state the CLI Btn

    cli_delete_request:
      type: object
      properties:
        id:
          type: integer
          description: The unique id of the CLI command
      example:
        id: [1, 2]

    cli_log_delete_request:
      type: object
      properties:
        year:
          type: integer
          description: year
        month:
          type: integer
          description: month, 0 means January
        day:
          type: integer
          description: day
        hour:
          type: integer
          description: hour
        minute:
          type: integer
          description: minute
      example:
        year: 2023
        month: 8
        day: 1
        hour: 15
        minute: 0

    run_cli_request:
      type: object
      properties:
        ip:
          type: string
          description: The specified devices's ip
        id:
          type: integer
          description: The CLI template id
        script:
          type: string
          description: The CLI commands array by lines
      example:
        ip:
          - 192.168.123.73
        id: -1
        script:
          - reload
          - y

    run_cli_response:
      type: object
      properties:
        ip:
          type: string
          description: The specified devices's ip
        ticket:
          type: integer
          description: cli's unique ticket, which can be used to correspond to the instant message from the websocket.
      example:
        - site_id: hacNnRloIAoZrdoZ
          ip: 192.168.123.73
          ticket: 22

    verify_user_response:
      type: object
      properties:
        result:
          type: boolean
          description: the verify result
        isRemoteUser:
          type: boolean
          description: verify from mxview or other system
      description: verify user result
      example:
        result: true
        isRemoteUser: false

    change_default_admin_request:
      type: object
      properties:
        ip:
          type: array
          description: the list of devices ip.
          items:
            type: string
          example: ["192.168.123.72", "192.168.123.151"]
        default_admin:
          type: string
          description: The account of device would be changed.
        new_admin:
          type: string
          description: The account of device would change to this account name.
        new_admin_pwd:
          type: string
          description: The password of new device account.
      example:
        ip: [192.168.123.72]
        default_admin: "admin03252"
        new_admin: "admin032929"
        new_admin_pwd: "89191230"

    change_default_admin_response:
      type: object
      properties:
        errno:
          type: string
        site_id:
          type: string
        deleteList:
          type: array
          description: the result list of delete account
          items:
            type: object
            properties:
              ip:
                type: string
                description: the ip of device
              username:
                type: array
                description: the list of device account
                items:
                  type: string
        addList:
          type: array
          description: the result list of add account
          items:
            type: object
            properties:
              ip:
                type: string
                description: the ip of device
              username:
                type: array
                description: the list of device account
                items:
                  type: string
      example:
        site_id: "CkCUksxQdidYQajn"
        deleteList:
          - ip: 192.168.123.72
            username:
              - admin03252
        addList:
          - ip: 192.168.123.72
            errormsg: ""
            username: admin032929

    devices_list_response:
      type: object
      properties:
        errno:
          type: integer
          description: the error no
        message:
          type: string
          description: the error message
        devices:
          type: array
          description: the list of all device data
          items:
            type: object
            properties:
              id:
                type: integer
                description: The id of the device.
              ip:
                type: string
                description: The IP address of the device.
              model:
                type: string
                description: The modelof the device.
              alias:
                type: string
                description: The alias of the device.
              support:
                type: boolean
                description: false indicates the device not suppot password automation.
      example:
        errno: 0
        devices:
          - id: 4
            ip: 192.168.123.152
            model: EDS-518A
            alias: 192.168.123.152--EDS-518A
            support: false
          - id: 6
            ip: 192.168.123.163
            model: EDS-510E
            alias: 192.168.123.163--EDS-510E
            support: true
          - id: 7
            ip: 192.168.123.151
            model: EDS-G516E
            alias: 192.168.123.151--EDS-G516E
            support: true

    devices_account_response:
      type: object
      properties:
        site_id:
          type: string
          description: the ID of a site
        result:
          type: array
          description: the list of all device' user data
          items:
            type: object
            properties:
              ip:
                type: string
                description: The IP address of the device.
              result:
                type: boolean
                description: false indicates that accessing the device account data cannot be done correctly.
              user:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: the name of device account
                    role:
                      type: string
                      description: the role of device account
      example:
        site_id: EWFZZlQJKajhLbCL
        result:
          - ip: 192.168.123.70
            result: false
            user: null
          - ip: 192.168.123.72
            result: true
            user:
              - { id: newadmin, role: admin }
              - { id: admin, role: admin }
          - ip: 192.168.123.151
            result: true
            user:
              - { id: user, role: user }
              - { id: admin, role: admin }

    devices_account_add_request:
      type: object
      properties:
        ip:
          type: array
          description: the list of device's ip
          items:
            type: string
          example: [192.168.123.72, 192.168.123.151]
        role:
          type: string
          description: the role of device account
        username:
          type: string
          description: the name of device account
        password:
          type: string
          description: the password of device account
      example:
        ip:
          - 192.168.123.151
          - 192.168.123.72
        role: user
        username: test0326
        password: "89191230"

    devices_account_add_response:
      type: object
      properties:
        site_id:
          type: string
          description: the ID of a site
        result:
          type: array
          items:
            type: object
            properties:
              ip:
                type: string
                description: the ip of a device
              userdata:
                type: array
                description:
                items:
                  type: object
                  properties:
                    uid:
                      type: string
                      description: the account of a device
                    password:
                      type: string
                      description: the password of a device's account
              saved:
                type: boolean
                description: The result of the create device account
              errormsg:
                type: string
                description: The error message of the create device account
      example:
        site_id: EWFZZlQJKajhLbCL
        result:
          - {
              ip: "192.168.123.72",
              userdata: [{ uid: "test1234", password: "89191230" }],
              saved: true,
              errormsg: "",
            }
          - {
              ip: "192.168.123.151",
              userdata: [{ uid: "test1234", password: "89191230" }],
              saved: true,
              errormsg: "",
            }
          - { ip: "192.168.123.70", saved: false, errormsg: "login failure" }

    devices_account_delete_request:
      type: object
      properties:
        forced_delete:
          type: boolean
          description: false:check the account is used by MXview, true:direct delete
        command:
          type: array
          items:
            type: object
            description: the list of devices data with ip and device account.
            properties:
              ip:
                type: string
                description: the ip of a device
              username:
                type: string
                description: The specified account to be deleted.
      example:
        forced_delete: false
        command:
          - ip: 192.168.123.151
            username: test1234
          - ip: 192.168.123.72
            username: test1234

    devices_account_delete_response:
      type: object
      properties:
        site_id:
          type: string
          description: the ID of a site
        result:
          type: array
          description: the list of devices data
          items:
            type: object
            properties:
              ip:
                type: integer
                description: the ip of a device
              saved:
                type: boolean
                description: The result of the delete device account
              errormsg:
                type: string
                description: The error message of the delete device account
      example:
        site_id: EWFZZlQJKajhLbCL
        result:
          - ip: "192.168.123.72"
            saved: true
            errormsg: ""
          - ip: "192.168.123.151"
            saved: true
            errormsg: ""
          - ip: "192.168.123.70"
            saved: false
            errormsg: "login failure"

    password_updating_records:
      type: object
      properties:
        site_id:
          type: string
          description: the ID of a site
        result:
          type: array
          description: the list of account data get from devices
          items:
            type: object
            properties:
              ip:
                type: string
              username:
                type: array
                items:
                  type: string
                  example: [admin0326, admin0327, admin]
        last_check_time:
          type: integer
          description: The last timestamp of checking password
          format: unix timestamp
        next_check_time:
          type: integer
          description: The next timestamp of checking password
          format: unix timestamp
        not_start:
          type: boolean
          description: "The status of last exection (true: it's not executed in the 'next_check_time' timestamp)"
        duration:
          type: integer
          description: The frequency of executing password automation (days)
        launch:
          type: integer
          description: The hour of the day, 0~23
      example:
        site_id: EWFZZlQJKajhLbCL
        result:
          - ip: 192.168.123.72
            username:
              - admin0327a
              - admin0327b
              - admin0327c
              - test
          - ip: 192.168.123.151
            username:
              - admin0327c
              - test0322
        last_check_time: 1711525776
        next_check_time: 1711619376
        not_start: false
        duration: 1
        launch: 2

    password_duration_response:
      type: object
      properties:
        site_id:
          type: string
          description: the ID of a site
        duration:
          type: int
          description: The day of the schedule
        launch:
          type: int
          description: The hour of the day, 0~23
      example:
        site_id: EWFZZlQJKajhLbCL
        duration: 1
        launch: 2

    password_duration_request:
      type: object
      properties:
        duration:
          type: int
          description: The day of the schedule
        launch:
          type: int
          description: The hour of the day, 0~23
      example:
        duration: 180
        launch: 2

    send_verify_email_request:
      type: object
      properties:
        email1:
          type: string
          description: The first reciver's e-mail address
          required: true
        email2:
          description: The second reciver's e-mail address
          type: string
      example:
        email1: aaa.bb@moxa.com
        email2: bbb.cc@moxa.com

    send_verify_email_response:
      type: object
      properties:
        errno:
          type: integer
        site_id:
          type: string
      example:
        errno: 0
        site_id: EWFZZlQJKajhLbCL

    check_verify_code_request:
      type: object
      properties:
        code1:
          type: string
          required: true
        code2:
          type: string
      example:
        code1: "277060"
        code2: ""

    check_verify_code_response:
      type: object
      properties:
        errno:
          type: string
        code1:
          type: string
        result1:
          type: boolean
        code2:
          type: string
        result2:
          type: boolean
      example:
        errno: "0"
        code1: "931762"
        code2: "931763"
        result1: false
        result2: false

    password_automation_settings_request:
      type: object
      properties:
        email1:
          type: string
          description: The first reciver's e-mail address
        email2:
          type: string
          description: The second reciver's e-mail address
        pwd_length:
          description: The length of the random password must not be less than 8.
          type: integer
      example:
        email1: aaa.bb@moxa.com
        email2: bbb.cc@moxa.com
        pwd_length: 12

    query_password_automation_settings_response:
      type: object
      properties:
        errno:
          type: integer
        site_id:
          type: string
        email1:
          type: string
          description: The first reciver's e-mail address
        email2:
          type: string
          description: The second reciver's e-mail address
        pwd_length:
          description: The length of the random password must not be less than 8.
          type: integer
      example:
        errno: 0
        site_id: EWFZZlQJKajhLbCL
        email1: aaa.bb@moxa.com
        email2: bbb.cc@moxa.com
        pwd_length: 12

    password_automation_settings_response:
      type: object
      properties:
        errno:
          type: integer
        site_id:
          type: string
      example:
        errno: 0
        site_id: EWFZZlQJKajhLbCL

    pwd_randomized_request:
      type: object
      properties:
        reset_records:
          type: boolean
          description: set true when startOver wizard, set false when re generate password
        command:
          type: array
          description: list of device ip and account
          items:
            type: object
            properties:
              ip:
                type: string
                description: the ip of a device
              username:
                type: array
                description: the list of device's account
                items:
                  type: string
                example:
                  - admin
                  - user
                  - newadmin
      example:
        reset_records: true
        command:
          - ip: 192.168.123.151
            username: [test0326, test0327]
          - ip: 192.168.123.72
            username: [test0326, test]

    pwd_randomized_response:
      type: object
      properties:
        site_id:
          type: string
          description: the ID of a site
        result:
          type: array
          description: the list of device's account
          items:
            type: object
            properties:
              ip:
                type: string
                description: the ip of a device
              userdata:
                type: array
                description: list of device account and password
                items:
                  type: object
                  properties:
                    uid:
                      type: string
                      description: the account of a device
                    password:
                      type: string
                      description: the password of a device's account
              saved:
                type: boolean
                description: The result of the randomize device account's password
              errormsg:
                type: string
                description: The error message of the randomize device account's password
      example:
        site_id: EWFZZlQJKajhLbCL
        result:
          - {
              ip: "192.168.123.72",
              userdata: [{ uid: "test032929", password: ".nQG9.eHR5bA" }],
              saved: true,
              errormsg: "",
            }
          - {
              ip: "192.168.123.151",
              userdata: [{ uid: "test032929", password: ".nQG9.eHR5bB" }],
              saved: true,
              errormsg: "",
            }

    send_pwd_email_response:
      type: object
      properties:
        errno:
          type: integer
        site_id:
          type: string
          description: the ID of a site
      example:
        errno: 0
        site_id: EWFZZlQJKajhLbCL

    baseline_diff_response:
      type: object
      properties:
        site_id:
          type: string
          description: the ID of a site
        last_change_time:
          type: integer
          description: The time when the baseline is generated.
          format: unix timestamp
        last_check_time:
          type: integer
          description: The time of the last execution
          format: unix timestamp
        next_check_time:
          type: integer
          description: The time of the next execution
          format: unix timestamp
        auto_check:
          type: boolean
          description: enable auto check
        days:
          type: integer
          description: Next auto check interval
        deviceList:
          type: array
          description: the list of device data
          items:
            type: object
            properties:
              ip:
                type: string
                description: the ip of a device
              model:
                type: string
                description: the model name of a device
              alias:
                type: string
                description: the model alias of a device
              connected:
                type: boolean
                description: false indicates the device connecting fail or the device authentication fail.
              support:
                type: boolean
                description: false indicates the device not suppot password automation.
              baseline_diff:
                type: object
                properties:
                  baseline_acct:
                    type: array
                    description: list of device baseline account
                    items:
                      type: string
                  added_acct:
                    type: array
                    description: list of device new account
                    items:
                      type: string
                  deleted_acct:
                    type: array
                    description: list of device deleted account
                    items:
                      type: string
      example:
        site_id: EWFZZlQJKajhLbCL
        last_change_time: 1711962871
        last_check_time: 1711962871
        next_check_time: 1712826871
        auto_check: true
        days: 180
        deviceList:
          - ip: 192.168.123.72
            model: "EDS-G516E"
            alias: ""
            connected: true
            support: true
            baseline_diff:
              baseline_acct: ["newadmin", "admin"]
              added_acct: ["admin0326", "admin0327"]
              deleted_acct: ["admin0322"]
          - ip: 192.168.123.151
            model: "EDS-G516E"
            alias: ""
            connected: false
            support: true
            baseline_diff:
              baseline_acct: ["admin123", "admin"]
              added_acct: ["admin0326", "admin0327"]
              deleted_acct: ["admin0322"]

    baseline_response:
      type: object
      properties:
        errno:
          type: integer
        site_id:
          type: string
      example:
        errno: 0
        site_id: EWFZZlQJKajhLbCL

    baseline_auto_check_response:
      properties:
        errno:
          type: integer
        site_id:
          type: string
          description: the ID of a site
        auto_check:
          type: boolean
          description: the setting of auto check
        days:
          type: integer
          description: the interval of schedule (days)
        last_check:
          type: integer
          description: the last check timestamp
      example:
        errno: 0
        site_id: EWFZZlQJKajhLbCL
        auto_check: true
        days: 180
        last_check: 1711389657

    baseline_auto_check_setting_request:
      type: object
      properties:
        auto_check:
          type: boolean
          description: "Disabled or Enabled autoCheck"
        days:
          type: integer
          description: the interval of schedule (days)
      example:
        auto_check: false
        days: 180

    baseline_auto_check_setting_response:
      type: object
      properties:
        errno:
          type: integer
        site_id:
          type: string
          description: the ID of a site
        auto_check:
          type: boolean
          description: the setting of auto check
        days:
          type: integer
          description: the interval of schedule (days)
        last_check_time:
          type: integer
          description: the last check timestamp
        next_check_time:
          type: integer
          description: the next check timestamp
      example:
        errno: 0
        site_id: EWFZZlQJKajhLbCL
        last_check_time: 1716442975
        next_check_time: 1727070175
        auto_check: true
        days: 123
    account_check_time_response:
      type: object
      properties:
        site_id:
          type: string
          description: the ID of a site
        last_check:
          type: integer
          description: the last execution time of checking device's default password
      example:
        site_id: EWFZZlQJKajhLbCL
        last_check: 1711517935

    check_default_account_response:
      type: object
      properties:
        site_id:
          type: string
          description: the ID of a site
        result:
          type: array
          items:
            type: object
            properties:
              ip:
                type: string
                description: the ip of a device
              state:
                type: integer
                description: "the status of default account using default password (1: using default password login successful(YES), 2: using default password login fail(No), 3: device can not connected(N/A))"
              id:
                type: integer
                description: the id of device
              model:
                type: string
                description: the model name of device
              alias:
                type: string
                description: the model alias of device
              support:
                type: boolean
                description: false indicates the device not suppot password automation.
        last_check_time:
          type: integer
          description: the last time of checking device's default password
          format: unix timestamp
      example:
        site_id: EWFZZlQJKajhLbCL
        errno: 0
        result:
          - id: 2
            ip: 192.168.4.253
            model: EDS-518A
            alias: 192.168.4.253--EDS-518A
            state: 1
            support: false
          - id: 1
            ip: 192.168.123.151
            model: EDS-G516E
            alias: 192.168.123.151--EDS-G516E
            state: 2
            support: true
        last_check: 1719303564

    devices_temp_account_response:
      type: array
      description: list of device data with temp acct
      items:
        type: object
        properties:
          errno:
            type: integer
          id:
            type: integer
            description: the id of device
          ip:
            type: string
            description: the ip of device
          model:
            type: string
            description: the model name of device
          alias:
            type: string
            description: the model alias of device
          support:
            type: boolean
            description: false indicates the device not suppot password automation.
          device_components:
            type: object
            properties:
              sysObjectId:
                type: object
                description: the sysobjectid of device
                properties:
                  status:
                    type: string
          username:
            type: string
            description: the temporary account of a device
          start_time:
            type: integer
            description: the start time of temporary account scheduled
          end_time:
            type: integer
            description: the end time of temporary account scheduled
          status:
            type: boolean
            description: "the mode of temporary account (true: activated; false: not activate)"
      example:
        - errno: 0
          id: 1
          ip: 192.168.123.151
          model: EDS-G516E
          alias: 192.168.123.151--EDS-G516E
          support: true
          device_components:
            sysObjectId:
              status: ".1.3.6.1.4.1.8691.7.71"
          username: test0322
          start_time: 1743488000
          end_time: 1830901970
          status: false
        - errno: 0
          id: 2
          ip: 192.168.123.72
          model: AWK-1151C
          alias: 192.168.123.72--AWK-1151C
          support: true
          device_components:
            sysObjectId:
              status: ".1.3.6.1.4.1.8691.600.1.300.3"
          username: test0326
          start_time: 1743488000
          end_time: 1830901970
          status: false

    devices_temp_account_add_request:
      type: object
      properties:
        ip:
          type: array
          description: the list of device's ip
          items:
            type: string
          example: [192.168.123.151, 192.168.123.72]
        username:
          type: string
          description: the temp account of device
        password:
          type: string
          description: the temp password of device
        start_time:
          type: integer
          description: the start time of the activating temp account
        end_time:
          type: integer
          description: the end time of the dectivating temp account
      example:
        ip:
          - 192.168.123.151
          - 192.168.123.72
        username: temp666
        password: "89191230"
        start_time: 163488000
        end_time: 1730901970

    devices_temp_account_add_response:
      type: object
      properties:
        errno:
          type: integer
        site_id:
          type: string
          description: the ID of a site
      example:
        errno: 0
        site_id: EWFZZlQJKajhLbCL

    devices_temp_account_edit_request:
      type: object
      properties:
        ip:
          type: array
          description: the list of device's ip
          items:
            type: string
          example: [192.168.123.151, 192.168.123.72]
        username:
          type: string
          description: the temp account of device
        start_time:
          type: integer
          description: the start time of the activating temp account
        end_time:
          type: integer
          description: the end time of the dectivating temp account
      example:
        ip:
          - 192.168.123.151
          - 192.168.123.72
        username: temp666
        start_time: 1743480000
        end_time: 1830901970

    devices_temp_account_delete_request:
      type: object
      properties:
        username:
          type: string
          description: the account of device
        ip:
          type: array
          description: the list of device's ip
          items:
            type: string
          example: [192.168.123.151, 192.168.123.72]
      example:
        username: temp666
        ip:
          - 192.168.123.151
          - 192.168.123.72

    devices_temp_account_delete_response:
      type: object
      properties:
        errno:
          type: integer
        site_id:
          type: string
          description: the ID of a site
        result:
          type: array
          description: the list of delete deivce's account result
          items:
            type: object
            properties:
              ip:
                type: string
              uid:
                type: string
              saved:
                type: boolean
      example:
        errno: 0
        site_id: EWFZZlQJKajhLbCL
        result:
          - ip: 192.168.123.72
            uid: test0327
            saved: true
          - ip: 192.168.123.151
            uid: test0327
            saved: true

    support_list_response:
      type: object
      properties:
        errno:
          type: integer
        site_id:
          type: string
        result:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: The devices series name
              rule:
                type: string
                description: The devices sysobjectid in regular expressing form
      example:
        errno: 0
        site_id: EWFZZlQJKajhLbCL
        result:
          - name: EDRExperssion
            rule: ^(.1.3.6.1.4.1.8691.6.)\\.?\\d{1,5}(?:\\.\\d{1,5})*$
          - name: ECOSExperssion
            rule: ^((.1.3.6.1.4.1.8691.7)|(.1.3.6.1.4.1.8691.28))\\.?\\d{1,5}(?:\\.\\d{1,5})*$
          - name: MXnosExpression
            rule: ^(.1.3.6.1.4.1.8691.600.1)(?!(\\.300\\.))\\.?\\d{1,5}(?:\\.\\d{1,5})*$
          - name: AWKExpression
            rule: ^(.1.3.6.1.4.1.8691.600.1.300)\\.?\\d{1,5}(?:\\.\\d{1,5})*$

    test_email_request:
      type: object
      properties:
        email:
          type: string
          description: The test mail reciver's e-mail address
      example:
        email: aaa.bb@moxa.com

    test_email_response:
      type: object
      properties:
        errno:
          type: integer
        site_id:
          type: string
      example:
        errno: 0
        site_id: EWFZZlQJKajhLbCL

    builtin_commands_query_response:
      type: object
      properties:
        taskInfo:
          type: object
          description: the lastest task status
          properties:
            ip:
              type: string
              description: The specified devices's ip
            alias:
              type: string
              description: The specified devices's alias name
            order:
              type: string
              description: The execution sequence of equipment within the task.
            status:
              type: string
              description: the lastest task status, Running, Waiting, Fail, Success
      example:
        taskInfo:
          - ip: 192.168.123.106
            alias: 192.168.123.106--EDS-528E
            order: "1"
            status: running

    builtin_commands_insert_request:
      type: object
      properties:
        target:
          type: object
          description: the devices and built-in commands to be executed.
          properties:
            ip:
              type: string
              description: The specified devices's ip
            order:
              type: string
              description: The execution sequence of devices within the task.
            meta:
              type: string
              description: The specified built-in command
            json:
              type: string
              description: The specified built-in command's parameters
      example:
        target_set:
          - target:
              - ip: 192.168.127.12
                order: 1
            meta: PORT_MAC_STICKY
            json:
              - port_id: 1/3
                policy: 1
                port_limit: 3
                enable: true
          - target:
              - ip: 192.168.127.12
                order: 1
            meta: PORT_MAC_STICKY
            json:
              - port_id: 1/4
                policy: 1
                port_limit: 4
                enable: true

    builtin_commands_execution_request:
      type: object
      properties:
        command:
          type: string
          description: |
            The update strategy:
              * 0: SmartConcurrent (System recommended order)
              * 1: Sequential (User defined order)
              * 2: Concurrent (All devices are updated simultaneously)

        stop:
          type: boolean
          description: |
            stop all task when any upgrade error occurred:
              * true: stop
              * false: continue process the next devices
      example:
        command: "0"
        stop: false

    builtin_commands_execution_request2:
      type: object
      properties:
        ip:
          type: string
          description: The specified devices's ip
        order:
          type: integer
          description: The specified devices's execution order
        meta:
          type: string
          description: |
            The execution command type.
        command:
          type: string
          description: |
            The update strategy:
              * 0: SmartConcurrent (System recommended order)
              * 1: Sequential (User defined order)
              * 2: Concurrent (All devices are updated simultaneously)

        stop:
          type: boolean
          description: |
            stop all task when any upgrade error occurred:
              * true: stop
              * false: continue process the next devices
      example:
        target:
          - ip: 192.168.127.12
            order: 1
        meta: GLOBAL_MAC_STICKY_SWITCH
        json:
          global_enable: true
        command: "0"
        stop: false

    builtin_commands_list_query_response:
      type: object
      properties:
        result:
          type: object
          description: the built-in command list
          properties:
            meta:
              type: string
              description: The command's name
            rule:
              type: string
              description: The command's suitable devices in regular expressing form
      example:
        result:
          - meta: MAC_STICKY_RELEARN
            rule: "^((.1.3.6.1.4.1.8691.7)|(.1.3.6.1.4.1.8691.28))\\.?\\d{1,5}(?:\\.\\d{1,5})*$"
          - meta: MAC_STICKY_RELEARN
            rule: "^(.1.3.6.1.4.1.8691.600.1)(?!(\\.300\\.))\\.?\\d{1,5}(?:\\.\\d{1,5})*$"
          - meta: PORT_MAC_STICKY
            rule: "^((.1.3.6.1.4.1.8691.7)|(.1.3.6.1.4.1.8691.28))\\.?\\d{1,5}(?:\\.\\d{1,5})*$"
          - meta: PORT_MAC_STICKY
            rule: "^(.1.3.6.1.4.1.8691.600.1)(?!(\\.300\\.))\\.?\\d{1,5}(?:\\.\\d{1,5})*$"
          - meta: GLOBAL_MAC_STICKY_SWITCH
            rule: "^(.1.3.6.1.4.1.8691.600.1)(?!(\\.300\\.))\\.?\\d{1,5}(?:\\.\\d{1,5})*$"
          - meta: GLOBAL_MAC_STICKY_SWITCH
            rule: "^((.1.3.6.1.4.1.8691.7)|(.1.3.6.1.4.1.8691.28))\\.?\\d{1,5}(?:\\.\\d{1,5})*$"
          - meta: SNAPSHOT_CREATE
            rule: "^(.1.3.6.1.4.1.8691.12)\\.?\\d{1,5}(?:\\.\\d{1,5})*$"
          - meta: SNAPSHOT_VIEW
            rule: "^(.1.3.6.1.4.1.8691.12)\\.?\\d{1,5}(?:\\.\\d{1,5})*$"
          - meta: SNAPSHOT_RESTORE
            rule: "^(.1.3.6.1.4.1.8691.12)\\.?\\d{1,5}(?:\\.\\d{1,5})*$"
          - meta: REBOOT
            rule: "^(.1.3.6.1.4.1.8691.12)\\.?\\d{1,5}(?:\\.\\d{1,5})*$"
          - meta: REBOOT
            rule: "^(.1.3.6.1.4.1.8691.600.1.300)\\.?\\d{1,5}(?:\\.\\d{1,5})*$"
          - meta: REBOOT
            rule: "^(.1.3.6.1.4.1.8691.6.)\\.?\\d{1,5}(?:\\.\\d{1,5})*$"
          - meta: REBOOT
            rule: "^((.1.3.6.1.4.1.8691.7)|(.1.3.6.1.4.1.8691.28))\\.?\\d{1,5}(?:\\.\\d{1,5})*$"
          - meta: REBOOT
            rule: "^(.1.3.6.1.4.1.8691.600.1)(?!(\\.300\\.))\\.?\\d{1,5}(?:\\.\\d{1,5})*$"
          - meta: REBOOT
            rule: "^(.1.3.6.1.4.1.8691.2.8.)\\.?\\d{1,5}(?:\\.\\d{1,5})*$"
          - meta: DISABLE_UNUSED_PORT
            rule: "^(.1.3.6.1.4.1.8691.6.)\\.?\\d{1,5}(?:\\.\\d{1,5})*$"
          - meta: DISABLE_UNUSED_PORT
            rule: "^((.1.3.6.1.4.1.8691.7)|(.1.3.6.1.4.1.8691.28))\\.?\\d{1,5}(?:\\.\\d{1,5})*$"
          - meta: DISABLE_UNUSED_PORT
            rule: "^(.1.3.6.1.4.1.8691.600.1)(?!(\\.300\\.))\\.?\\d{1,5}(?:\\.\\d{1,5})*$"
          - meta: DISABLE_UNENCRYTP_PORT
            rule: "^(.1.3.6.1.4.1.8691.6.)\\.?\\d{1,5}(?:\\.\\d{1,5})*$"
          - meta: DISABLE_UNENCRYTP_PORT
            rule: "^(.1.3.6.1.4.1.8691.2.8.)\\.?\\d{1,5}(?:\\.\\d{1,5})*$"
          - meta: DISABLE_UNENCRYTP_PORT
            rule: "^(.1.3.6.1.4.1.8691.600.1.300)\\.?\\d{1,5}(?:\\.\\d{1,5})*$"
          - meta: DISABLE_UNENCRYTP_PORT
            rule: "^((.1.3.6.1.4.1.8691.7)|(.1.3.6.1.4.1.8691.28))\\.?\\d{1,5}(?:\\.\\d{1,5})*$"
          - meta: DISABLE_UNENCRYTP_PORT
            rule: "^(.1.3.6.1.4.1.8691.600.1)(?!(\\.300\\.))\\.?\\d{1,5}(?:\\.\\d{1,5})*$"
          - meta: CHANGE_WIFI_CHANNEL
            rule: "^(.1.3.6.1.4.1.8691.600.1.300)\\.?\\d{1,5}(?:\\.\\d{1,5})*$"
          - meta: CREATE_WIFI_SSID
            rule: "^(.1.3.6.1.4.1.8691.600.1.300)\\.?\\d{1,5}(?:\\.\\d{1,5})*$"
        site_id: hacNnRloIAoZrdoZ

    builtin_commands_model_query_response:
      type: object
      properties:
        result:
          type: object
          description: the built-in model list
          properties:
            model:
              type: string
              description: The model's name
            reg:
              type: string
              description: The model's suitable devices in regular expressing form
      example:
        result:
          - model: AWK
            reg: "^(.1.3.6.1.4.1.8691.600.1.300)\\.?\\d{1,5}(?:\\.\\d{1,5})*$"
          - model: EDR_PLATFORM
            reg: "^(.1.3.6.1.4.1.8691.6.)\\.?\\d{1,5}(?:\\.\\d{1,5})*$"
          - model: ECOS_SWITCH
            reg: "^((.1.3.6.1.4.1.8691.7)|(.1.3.6.1.4.1.8691.28))\\.?\\d{1,5}(?:\\.\\d{1,5})*$"
          - model: MXNOS_SWITCH
            reg: "^(.1.3.6.1.4.1.8691.600.1)(?!(\\.300\\.))\\.?\\d{1,5}(?:\\.\\d{1,5})*$"
          - model: NPORT_6000
            reg: "^(.1.3.6.1.4.1.8691.2.8.)\\.?\\d{1,5}(?:\\.\\d{1,5})*$"
          - model: UC
            reg: "^(.1.3.6.1.4.1.8691.12)\\.?\\d{1,5}(?:\\.\\d{1,5})*$"
        site_id: rcnViLqysKIXtdIu

    devices_port_list_query_response:
      type: object
      properties:
        interface:
          type: string
          description: The devices's port list
      example:
        interface:
          - 1/1
          - 1/2
          - 1/3
          - 1/4
          - 1/5
          - 1/6
          - 1/7
          - 1/8
        site_id: hacNnRloIAoZrdoZ

    rogue_settings_response:
      type: object
      properties:
        site_id:
          type: string
          description: site id
        enable:
          type: boolean
          description: The status for detecting rogue devices.
        baseline_creation:
          type: integer
          description: The created time of the baseline.
      example:
        site_id: EWFZZlQJKajhLbCL
        enable: true
        baseline_creation: 1712035934

    rogue_settings_modify_request:
      type: object
      properties:
        enable:
          type: boolean
          description: The status for detecting rogue devices.
      example:
        enable: true

    rogue_list_response:
      type: object
      properties:
        site_id:
          type: string
          description: site id
        result:
          type: array
          description: Rouge Device information
          items:
            type: object
            properties:
              mac:
                type: string
                description: device mac address
              ip:
                type: string
                description: device ip
              connected_ip:
                type: string
                description: connected device ip
              connected_port:
                type: integer
                description: connected device port
              first_seen:
                type: integer
                description: The time when the device was first discovered.
              last_seen:
                type: integer
                description: The time when the device was last discovered.
              vendor:
                type: string
                description: the vendor of the device
      example:
        site_id: EWFZZlQJKajhLbCL
        result:
          - mac: EAB86BB589F6
            ip: ""
            connected_ip: 192.168.123.167
            connected_port: -1
            first_seen: 1712035973
            last_seen: 1712635161
            vendor: ""
          - mac: "0090E8000055"
            ip: 192.168.123.152
            connected_ip: 192.168.4.201
            connected_port: 2
            first_seen: 1712635461
            last_seen: 1712636308
            vendor: "Moxa Technologies CORP. Ltd"

    rogue_devices_mac_request:
      type: object
      properties:
        mac_list:
          type: array
          items:
            type: string
            description: the mac address of the device
      example:
        mac_list:
          - "EAB86BB589F6"
          - "0090E8000055"

    rogue_ignored_list_response:
      type: object
      properties:
        site_id:
          type: string
          description: site id
        ignored_list:
          type: array
          description: The Device information in the baseline.
          items:
            type: object
            properties:
              mac:
                type: string
                description: device mac address
              ip:
                type: string
                description: device ip
              temp:
                type: boolean
                description: temporary device flag
              last_seen:
                type: integer
                description: The time when the device was last discovered.
              vendor:
                type: string
                description: the vendor of the device
      example:
        site_id: EWFZZlQJKajhLbCL
        ignored_list:
          - mac: "0090E869D39F"
            ip: 192.168.4.253
            vendor: Moxa Technologies CORP. Ltd
            temp: false
            last_seen: 1712733498
          - mac: "0090E89518BE"
            ip: 192.168.4.222
            vendor: Moxa Technologies CORP. Ltd
            temp: false
            last_seen: 1712733498

    refresh_ip_request:
      type: object
      properties:
        ips:
          type: array
          description: The list of the device's ip
          items:
            type: string
            example: ["192.168.127.12", "192.168.123.151"]
      example:
        ips:
          - 192.168.127.12
          - 192.168.123.151

    ied_group_request:
      type: object
      properties:
        ids:
          type: array
          description: The list of the device's id
          items:
            type: integer
            example: [2, 9]
        parent_id:
          type: integer
          description: parent's group id
      example:
        ids:
          - 9
          - 2
        parent_id: 0

    ied_group_delete_request:
      type: object
      properties:
        id:
          type: integer
          description: the group id
      example:
        id: 0

    mxview-devices:
      type: object
      example:
        - id: 1
          group: 0
          model: EDS-508A
          alias: 192.168.127.1--EDS-508A
          location: routeTest sysLocation
          status: 0
          severity: 1
          ip: 192.168.127.1
          mac: 0090E8171C8A
          sysobjid: .1.3.6.1.4.1.8691.7.9
          icon_url: dev_images/PKo0FC4.jpg
          icon_id: 177
          redundancy: Ring 1 Member
          icmp_polling_interval: 10
          snmp_polling_interval: 120
          snmp_version: 1
          read_community: public
          write_community: private
          snmp_username: admin
          snmp_password: ""
          snmpv3_encryption_key: ""
          snmpv3_authentication_type: 1
          snmpv3_privacy_protocol: 1
          snmpv3_security_level: 1
          x: 28
          y: 79
          router_role: 0
          icmp_unreachable_warning_threshold: 3
          snmp_unreachable_warning_threshold: 1
          prphsr_role: ""
          device_components: {}
          site_id: 3b1ff10586c50940
          mxsec_flag: 0
        - ip: 192.168.127.1
          id: 132
          mac: "0090e8112249"
          group: 136
          model: 65M-CPU14-IEC
          alias: 192.168.127.1--65M-CPU14-IEC
          location: ""
          status: ""
          severity: 1
          icon_url: dev_images/65M-CPU14-IEC.png
          icon_id: 0
          redundancy: 0
          x: 525
          y: 100
          sysobjid: ".1.3.6.1.4.1.8691.10.6500"
          site_id: EWFZZlQJKajhLbCL
          wireless_role: 0
          router_role: 0
          prphsr_role: ""
          v3_trap_parse_status: 0
          Appendix:
          Availability: 100.00%
          mxsec_flag: 0
          module_slot: CPU_1
    device-alias-types:
      type: object
      properties:
        prefix:
          type: integer
          description: |
            enum:
             * `1` - IP
             * `2` - Mac
             * `3` - Model Name
             * `4` - sysLocation
             * `5` - sysName
        postfix:
          type: integer
          description: |
            enum:
              * `1` - IP
              * `2` - Mac
              * `3` - Model Name
              * `4` - sysLocation
              * `5` - sysName
      description: Device alias types which are displayed on MXview One UI
      example:
        - prefix: 1
          postfix: 3
    serial-port-mon-settings:
      type: object
      properties:
        ips:
          type: array
          description: The list of the device's ip
          items:
            type: string
            example: ["192.168.127.69"]
        settings:
          type: array
          description: The list of the device's ip
          items:
            type: object
            properties:
              port:
                type: array
                description: The list of the device's port
                items:
                  type: string
                  example: ["1", "2"]
              data_type:
                type: integer
                description: |
                  monitoring type:
                    * `1` - SeverityRXTX
                    * `2` - SeverityTX
                    * `3` - SeverityRX
                    * `4` - ThresholdErrorCountFrame
                    * `5` - ThresholdErrorCountParity
                    * `6` - ThresholdErrorCountOverrun
                    * `7` - ThresholdErrorCountBreak
                    * `8` - AnyErrorCount
              duration:
                type: integer
                description: check minutes
              threshold:
                type: integer
                description: The monitoring threshold.
              severity:
                type: integer
                description: The severity of the trigger event. 2=Warning, 3=Critical.
      description: Syslog server settings
      example:
        ips:
          - 192.168.127.69
        settings:
          - port:
              - "1"
            data_type: 1
            duration: 1
            threshold: 0
            severity: 2
          - port:
              - "2"
            data_type: 2
            duration: 1
            threshold: 0
            severity: 2
          - port:
              - "3"
              - "4"
            data_type: 4
            duration: 0
            threshold: 2
            severity: 2

    query-serial-port-mon-settings:
      type: object
      properties:
        ips:
          type: array
          description: The list of the device's ip
          items:
            type: string
            example: ["192.168.127.69"]
        settings:
          type: array
          description: The list of the device's ip
          items:
            type: object
            properties:
              port:
                type: array
                description: The list of the device's port
                items:
                  type: string
                  example: ["1", "2"]
              data_type:
                type: integer
                description: |
                  monitoring type:
                    * `1` - SeverityRXTX
                    * `2` - SeverityTX
                    * `3` - SeverityRX
                    * `4` - ThresholdErrorCountFrame
                    * `5` - ThresholdErrorCountParity
                    * `6` - ThresholdErrorCountOverrun
                    * `7` - ThresholdErrorCountBreak
                    * `8` - AnyErrorCount
              duration:
                type: integer
                description: check minutes
              threshold:
                type: integer
                description: The monitoring threshold.
              severity:
                type: integer
                description: The severity of the trigger event. 1=Info, 2=Warning, 3=Critical.
        groups:
          type: object
          properties:
            id:
              type: integer
              description: The id of the group
            name:
              type: string
              description: The name of the group
            parent_id:
              type: integer
              description: The parent id of the group
            devices:
              type: array
              description: The list of the devices in the group
              items:
                type: object
                properties:
                  mac:
                    type: string
                    description: device mac address
                  id:
                    type: integer
                    description: device id
                  ip:
                    type: string
                    description: device ip
                  model:
                    type: string
                    description: device model
                  alias:
                    type: string
                    description: device alias
                  sysobjid:
                    type: string
                    description: device sysobjid
                  group:
                    type: onteger
                    description: device group
      description: Serial Port settings
      example:
        ips:
          - 192.168.127.69
        settings:
          - port:
              - "1"
            data_type: 1
            duration: 1
            threshold: 0
            severity: 2
          - port:
              - "2"
            data_type: 2
            duration: 1
            threshold: 0
            severity: 2
          - port:
              - "3"
              - "4"
            data_type: 4
            duration: 0
            threshold: 2
            severity: 2
        groups:
          - devices:
              - mac: "0090e80e793a"
                id: 13
                ip: 192.168.4.246
                model: NPort-6150
                alias: 192.168.4.246--NPort-6150
                sysobjid: ".1.3.6.1.4.1.8691.2.8.6150"
                group: 0
                device_components: {}
              - mac: "0090e865c34f"
                id: 14
                ip: 192.168.4.247
                model: NPort-6150
                alias: 192.168.4.247--NPort-6150
                sysobjid: ".1.3.6.1.4.1.8691.2.8.6150"
                group: 0
                device_components: {}
            id: 0
            name: Root
            parent_id: 0

    sp-monitoring-status:
      type: object
      properties:
        result:
          type: array
          description: The list of the port's trigger status.
          items:
            type: object
            properties:
              id:
                type: integer
                description: the device id
              port:
                type: integer
                description: the port number
              duration_rx:
                type: integer
                description: the duration of the rx, in seconds.
              duration_tx:
                type: integer
                description: the duration of the tx, in seconds.
              duration_rx_tx:
                type: integer
                description: the duration of the rx_tx, in seconds.
              threshold_error_count_frame:
                type: integer
                description: the threshold of the error_count_frame.
              threshold_error_count_parity:
                type: integer
                description: the threshold of the error_count_parity.
              threshold_error_count_overrun:
                type: integer
                description: the threshold of the error_count_overrun.
              threshold_error_count_break:
                type: integer
                description: the threshold of the error_count_break.
              trigger_rx:
                type: boolean
                description: the trigger_rx flag
              trigger_tx:
                type: boolean
                description: the trigger_tx flag
              trigger_rx_tx:
                type: boolean
                description: the trigger_rx_tx flag
              trigger_error_count_frame:
                type: boolean
                description: the trigger_error_count_frame flag
              trigger_error_count_parity:
                type: boolean
                description: the trigger_error_count_parity flag
              trigger_error_count_overrun:
                type: boolean
                description: the trigger_error_count_overrun flag
              trigger_error_count_break:
                type: boolean
                description: the trigger_error_count_break flag
              trigger_rx_last:
                type: integer
                description: last the trigger_rx timestamp
              trigger_tx_last:
                type: integer
                description: last the trigger_tx_last timestamp
              trigger_rx_tx_last:
                type: integer
                description: last the trigger_rx_tx_last timestamp
              severity_rx:
                type: integer
                description: the severity of the rx.
              severity_tx:
                type: integer
                description: the severity of the tx.
              severity_rx_tx:
                type: integer
                description: the severity of the rx_tx.
              severity_error_count_frame:
                type: integer
                description: the severity of the error_count_frame.
              severity_error_count_parity:
                type: integer
                description: the severity of the error_count_parity.
              severity_error_count_overrun:
                type: integer
                description: the severity of the error_count_overrun.
              severity_error_count_break:
                type: integer
                description: the severity of the error_count_break.
      description: The list of the port's trigger status.
      example:
        errno: 0
        site_id: CkCUksxQdidYQajn
        result:
          - ip: 192.168.127.69
            port_id: 1
            duration_rx: 0
            duration_tx: 0
            duration_rx_tx: 60
            threshold_error_count_frame: 2
            threshold_error_count_parity: 2
            threshold_error_count_overrun: 2
            threshold_error_count_break: 2
            trigger_rx: false
            trigger_tx: false
            trigger_rx_tx: true
            trigger_error_count_frame: false
            trigger_error_count_parity: false
            trigger_error_count_overrun: false
            trigger_error_count_break: false
            trigger_rx_last: 0
            trigger_tx_last: 0
            trigger_rx_tx_last: 1721705706
            severity_rx: 2
            severity_tx: 2
            severity_rx_tx: 3
            severity_error_count_frame: 2
            severity_error_count_parity: 2
            severity_error_count_overrun: 2
            severity_error_count_break: 2

    sp-monitoring-flags:
      type: object
      properties:
        result:
          type: array
          description: The list of the device's trigger flag.
          items:
            ip:
              type: string
              description: devices ip
            trigger:
              type: boolean
              description: the monitoring status triggered flag

      description: The list of the device's trigger flag.
      example:
        errno: 0
        site_id: EWFZZlQJKajhLbCL
        result:
          - ip: 192.168.127.69
            trigger: true

    group_query_response:
      type: object
      properties:
        id:
          type: integer
          description: The id of the group
        name:
          type: string
          description: The name of the group
        parent_id:
          type: integer
          description: The parent id of the group
        severity:
          type: integer
          description: The severity of the trigger event. 1=Info, 2=Warning, 3=Critical.
        x:
          $ref: "#/components/schemas/x"
        y:
          $ref: "#/components/schemas/y"
        icon_url:
          type: string
          description: The group's image URL in the topology.
        device_group:
          type: boolean
          description: Flag indicating whether the group is a special ioPac 6500 group.
      example:
        - site_id: EWFZZlQJKajhLbCL
          id: 10
          state: -1
          severity: 1
          name: G4
          description: G4
          x: 421
          y: 199
          parent_id: 9
          icon_url: EWFZZlQJKajhLbCL_group_icon_10.jpg
          device_group: false
        - site_id: EWFZZlQJKajhLbCL
          id: 17
          state: 0
          severity: 1
          name: ioPac6500_1
          description: ""
          x: 704
          y: 163
          parent_id: 5
          icon_url: EWFZZlQJKajhLbCL_group_icon_17.png
          device_group: true

    mxsec-devices:
      type: object
      properties:
        data:
          type: array
          description: The list of the device's information
      example:
        data:
          - actionResult:
              - action: package
                message: success
                mode: manually
                name: janus
                result: success
                time: "2024-09-25T09:01:15.733041Z"
                version: 8.0.0020
            applyProfile: ""
            canApply: true
            connectedAt: "2024-09-25T09:00:21Z"
            createdAt: "2024-09-25T02:19:27Z"
            deviceId: 7a27923b-392a-4506-9818-e85059abea4a
            disconnectedAt: "2024-09-25T09:00:06Z"
            firewallCap: true
            firmwareVersion: V3.2.0
            groupId: "1"
            groupName: Ungroup
            hostname: Firewall/VPN Router 55165
            ip: 192.168.127.35
            latestVersion: ""
            location: Device Location
            mac: 00:90:E8:91:86:82
            modelName: EDR-G9010-VPN-2MGSFP
            packageList:
              - latestVersion: ""
                name: janus
            product: EDR
            profile:
              general:
                cap:
                  SRV_CELLULAR: 0
                  SRV_GNSS_GENERAL: 0
                dpiCap:
                  - IPS
                  - SC
                  - L3L7
                  - MODBUS
                  - DNP3
                  - MMS
                  - IEC104
                  - ENIP
                  - FINS
                  - S7COMM
                firmwareVersion: V3.2.0
                hostname: Firewall/VPN Router 55165
                lan: 192.168.127.35
                location: Device Location
                mac: 00:90:e8:91:86:82
                modelName: EDR-G9010-VPN-2MGSFP
                objCap:
                  - L3L7
                  - SC
                serialNumber: TBZKB1155165
                uptime: "2024-09-25T09:00:05.696864Z"
                wan: 0.0.0.0
              license:
                - category: IPS-DEVICE
                  endTime: 1733875199
                  status: Valid
              package:
                - name: janus
                  version: 8.0.0020
                - name: zeus
                  version: 2.0.0013
              profile:
                status: ""
              wan:
                default: ethernet
            profileAppliedAt: "0001-01-01T00:00:00Z"
            profileUpdatedAt: "0001-01-01T00:00:00Z"
            scheduleList:
            serialNumber: ""
            status: ""
            updatedAt: "0001-01-01T00:00:00Z"

    syslog-server-settings:
      type: object
      properties:
        status:
          type: integer
          description: |
            Syslog server flag:
              * `0` - Disabled
              * `1` - UDP
              * `2` - TCP
              * `3` - UDP+TCP
        port:
          type: integer
          description: Syslog server udp port
          format: port number
        tcp_port:
          type: integer
          description: Syslog server tcp port
          format: port number
        tls_option:
          type: integer
          description: |
            Syslog server tcp use tls status:
              * `0` - Disabled
              * `1` - TLS Only
              * `2` - TLS+Cert
      description: Syslog server settings
      example:
        errno: 0
        site_id: EWFZZlQJKajhLbCL
        status: 0
        port: 514
        tcp_port: 6789
        tls_option: 0
    syslog-server-forward-settings:
      type: object
      properties:
        syslog_forward_type:
          type: integer
          description: Syslog server forward status, 0=Not forward, 1=UDP, 2=TCP, 3=TLS without certificate verification, 4=TLS with certificate verification
        syslog_forward_ip1:
          type: string
          description: forward Syslog server ip1
        syslog_forward_port1:
          type: integer
          description: forward Syslog server port1
          format: port number
        syslog_forward_ip2:
          type: string
          description: forward Syslog server ip2
        syslog_forward_port2:
          type: integer
          description: forward Syslog server port1
          format: port number
        syslog_forward_cond:
          type: array
          description: Syslog server forward condition
          items:
            type: object
            properties:
              ip:
                type: array
                description: forward the specified devices's syslog
                items:
                  type: string
                  description: device's ip
              cond:
                type: integer
                description: |
                  0-255, 0x0000111 = Emergency + Alert + Critical <br/>
                  bit definitions:<br/>
                  0 - Emergency <br/>
                  1 - Alert<br/>
                  2 - Critical<br/>
                  3 - Error<br/>
                  4 - Warning<br/>
                  5 - Notice<br/>
                  6 - Informational<br/>
                  7 - Debug<br/>
      description: Syslog server forward settings
      example:
        syslog_forward_type: 1
        syslog_forward_ip1: 192.168.123.195
        syslog_forward_port1: 514
        syslog_forward_ip2: ""
        syslog_forward_port2: 514
        syslog_forward_cond:
          - cond: 255
    network-vlan-information:
      type: object
      properties:
        ip:
          type: string
          description: device IP
        location:
          type: string
          description: device Location
        name:
          type: string
          description: device name
        vlan:
          type: array
          description: Device VLAN information
          items:
            type: object
            properties:
              vid:
                type: integer
                description: VLAN ID
              access_ports:
                type: array
                description: ports set as this VLAN's access port
                items:
                  type: integer
                  description: Port ID
              trunk_ports:
                type: array
                description: ports set as this VLAN's trunk port
                items:
                  type: integer
                  description: Port ID
              is_management_vlan:
                type: boolean
                description: True if this VLAN is management VLAN
      description: Device VLAN information
      example:
        ip: 192.168.127.34
        location: ""
        name: "NPort S8455I-SS-SC "
        vlan:
          - vid: 1
            access_ports:
              - 1
              - 2
            trunk_ports:
              - 3
              - 4
              - 5
            is_management_vlan: true
    security-view-settings:
      type: object
      properties:
        profile:
          type: integer
          description: |
            profile:
              * 0: user-defined profile
              * 1: built-in profile
        color:
          type: object
          properties:
            high:
              type: string
              description: the color used for displaying devices with high security level
              format: "#AARRGGBB"
            medium:
              type: string
              description: the color used for displaying devices with medium security level
              format: "#AARRGGBB"
            passed:
              type: string
              description: >-
                the color used for displaying devices which passed the security
                check
              format: "#AARRGGBB"
            failed:
              type: string
              description: >-
                the color used for displaying devices with failed to pass the
                security check
              format: "#AARRGGBB"
            basic:
              type: string
              description: the color used for displaying devices with basic security level
              format: "#AARRGGBB"
            open:
              type: string
              description: the color used for displaying devices with open security level
              format: "#AARRGGBB"
      description: security view profile and color settings
      example:
        profile: 0
        color:
          high: "#FF998877"
          medium: "#FF223344"
          basic: "#FF887766"
          open: "#FFEEDDCC"
          passed: "#FF445566"
          failed: "#FF112233"
        site_id: 69addc4637f2c875
    current-event-responses:
      type: array
      description: >-
        the response is an array of device IP, timestamp, threshold and value if
        exists
      example:
        - 10.80.92.223:
            "65543":
              timestamp: 1528688622
          10.80.90.1:
            "131077":
              timestamp: 1528688638
              threshold: 222200
              value: 303303
            "131079":
              timestamp: 1528688638
              threshold: 222200
              value: 303303
      items:
        type: object
        properties:
          ip:
            type: string
            description: Device IP
          threshold:
            type: object
            description: the threshold of the triggered event
          value:
            type: object
            description: the value of the triggered event
          timestamp:
            type: integer
            description: the triggered time of this event
            format: unix timestamp
    action-sms:
      type: object
      properties:
        baud_rate:
          type: integer
          description: Baud Rate
        com_port:
          type: integer
          description: Com port
        mode:
          type: integer
          description: SMS mode
      description: SMS settings
    license-file-only:
      type: object
      properties:
        license_file:
          type: string
          description: the license file
      description: The license registered in a site
      example:
        license_file: >-
          fHyJ7Z+t6sL3M0Hh9uxSsj/HudImlebKNvW6qgqOvS41AJtcbnuHO8ZsG3JJJV/W2bBVEULqfMItlK2CEJQsMtrGXb6FPM4r0CmmKlclQKhX8h6NNULBCoGYU2FOVGrlKffUxSCncjPCTnV8TPDuPwAVHYZND21DHFCqdltQ0ls=
    device-security-status:
      type: object
      properties:
        result:
          type: object
          properties:
            series:
              type: string
              description: the device series
            ip:
              type: string
              description: an IP address
              format: ipv4
            security_items:
              type: array
              description: the checked security items and their result
              items:
                type: object
                properties:
                  result:
                    type: integer
                    description: |
                      result:
                        * -1: failed
                        * 0: not supported
                        * 1: not passed
                        * 2: passed
                  item:
                    type: string
                    description: the name of a security item
            security_level:
              type: string
              description: the level of security of a device
      description: Device security status of the designated devices
      example:
        result:
          - series: SWITCH
            security_level: STR_OPEN
            ip: 192.168.127.18
            security_items:
              - item: AUTO_LOGOUT
                result: 1
              - item: LOGIN_NOTIFICATION
                result: 2
              - item: ENCRYPT_CONSOLE
                result: 2
              - item: ACCOUNT_LOCKOUT
                result: 2
              - item: ACCESSIBLE_IP_LIST
                result: 2
              - item: PASSWORD_POLICY
                result: 2
              - item: ENCRYPTED_CONFIG
                result: 2
              - item: BROAD_CAST_STORM
                result: 1
              - item: TRAPSYSLOG
                result: 1
              - item: PASSWORD_CHANGED
                result: 2
          - series: SWITCH
            security_level: STR_OPEN
            ip: 192.168.127.2
            security_items:
              - item: AUTO_LOGOUT
                result: 1
              - item: LOGIN_NOTIFICATION
                result: 0
              - item: ENCRYPT_CONSOLE
                result: 0
              - item: ACCOUNT_LOCKOUT
                result: 0
              - item: ACCESSIBLE_IP_LIST
                result: 1
              - item: PASSWORD_POLICY
                result: 0
              - item: ENCRYPTED_CONFIG
                result: 0
              - item: BROAD_CAST_STORM
                result: 0
              - item: TRAPSYSLOG
                result: 1
              - item: PASSWORD_CHANGED
                result: 2
          - series: SWITCH
            security_level: STR_OPEN
            ip: 192.168.127.1
            security_items:
              - item: AUTO_LOGOUT
                result: 1
              - item: LOGIN_NOTIFICATION
                result: 0
              - item: ENCRYPT_CONSOLE
                result: 0
              - item: ACCOUNT_LOCKOUT
                result: 0
              - item: ACCESSIBLE_IP_LIST
                result: 1
              - item: PASSWORD_POLICY
                result: 0
              - item: ENCRYPTED_CONFIG
                result: 0
              - item: BROAD_CAST_STORM
                result: 0
              - item: TRAPSYSLOG
                result: 1
              - item: PASSWORD_CHANGED
                result: 2
    custom-events:
      type: object
      properties:
        active:
          $ref: "#/components/schemas/active"
        duration:
          $ref: "#/components/schemas/duration"
        name:
          $ref: "#/components/schemas/event_name"
        severity:
          $ref: "#/components/schemas/severity"
        description:
          $ref: "#/components/schemas/description"
        recovery_description:
          $ref: "#/components/schemas/recovery_description"
        threshold_type:
          $ref: "#/components/schemas/threshold_type"
        threshold:
          $ref: "#/components/schemas/threshold"
        devices:
          $ref: "#/components/schemas/devices"
      description: custom events
    security-profile-items:
      type: object
      properties:
        profiles:
          type: object
          properties:
            series:
              type: string
              description: which device series is the profile for
            name:
              type: string
              description: the name of the profile
            checkItems:
              type: array
              description: check items of the profile
              items:
                type: object
                properties:
                  item:
                    type: string
                    description: the name of the security check item
                  enabled:
                    type: boolean
                    description: is this item checked in this profile
          description: an object of devices series and their corresponding security items
      description: Selected security items for each device series
      example:
        profiles:
          - series: SWITCH
            name: STR_GENERAL_BASELINE
            checkItems:
              - item: AUTO_LOGOUT
                enabled: true
              - item: LOGIN_NOTIFICATION
                enabled: false
              - item: ENCRYPT_CONSOLE
                enabled: false
              - item: ACCOUNT_LOCKOUT
                enabled: false
              - item: ACCESSIBLE_IP_LIST
                enabled: true
              - item: PASSWORD_POLICY
                enabled: false
              - item: ENCRYPTED_CONFIG
                enabled: false
              - item: BROAD_CAST_STORM
                enabled: false
              - item: TRAPSYSLOG
                enabled: true
              - item: PASSWORD_CHANGED
                enabled: true
          - series: SWITCH
            name: STR_IEC_62443_4_2_L1
            checkItems:
              - item: AUTO_LOGOUT
                enabled: true
              - item: LOGIN_NOTIFICATION
                enabled: true
              - item: ENCRYPT_CONSOLE
                enabled: true
              - item: ACCOUNT_LOCKOUT
                enabled: true
              - item: ACCESSIBLE_IP_LIST
                enabled: true
              - item: PASSWORD_POLICY
                enabled: true
              - item: ENCRYPTED_CONFIG
                enabled: false
              - item: BROAD_CAST_STORM
                enabled: true
              - item: TRAPSYSLOG
                enabled: true
              - item: PASSWORD_CHANGED
                enabled: true
    icmp_polling_interval:
      type: integer
      description: Device ICMP polling interval. (10-600)
    snmp_version:
      type: integer
      description: SNMP version of the device
    custom-events-with-id:
      type: object
      properties:
        active:
          $ref: "#/components/schemas/active"
        duration:
          $ref: "#/components/schemas/duration"
        name:
          $ref: "#/components/schemas/event_name"
        severity:
          $ref: "#/components/schemas/severity"
        description:
          $ref: "#/components/schemas/description"
        recovery_description:
          $ref: "#/components/schemas/recovery_description"
        threshold_type:
          $ref: "#/components/schemas/threshold_type"
        threshold:
          $ref: "#/components/schemas/threshold"
        devices:
          $ref: "#/components/schemas/devices-id"
        id:
          type: integer
          description: Event ID
      description: custom events
    device-availability-report:
      type: object
      properties:
        devices:
          type: array
          items:
            type: object
            properties:
              start_time:
                type: integer
                description: the start time of the availability calculation
                format: unix timestamp
              average:
                type: number
                description: the average uptime of the device
              device_id:
                type: string
                description: the ID of the device
              end_time:
                type: integer
                description: the end time of the availability calculation
                format: unix timestamp
              days:
                type: object
                description: the number of days does the report captured
              worst:
                type: number
                description: the worst uptime of the device
        site_id:
          type: string
      description: aaa
      example:
        devices:
          - device_id: 38458
            start_time: 1525190400
            end_time: 1525190400
            average: 100
            worst: 100
            days: 1
          - device_id: 38459
            start_time: 1525190400
            end_time: 1525190400
            average: 100
            worst: 100
            days: 1
          - device_id: 38460
            start_time: 1525190400
            end_time: 1525190400
            average: 100
            worst: 100
            days: 1
    usercode:
      type: object
      properties:
        usercode:
          type: string
          description: An 20-byte hex string
      description: A usercode generated by an MXview One server
      example:
        - usercode: CA510F30DC92CAD28515
          site_id: 7275766a7dbf177e
    event-type-responses:
      type: object
      properties:
        devices:
          type: object
          properties:
            ip:
              type: string
            events:
              type: array
              items:
                type: object
                properties:
                  time:
                    type: integer
                    format: unix timestamp
                  events:
                    type: array
                    items:
                      $ref: "#/components/schemas/event-responses"
      description: the response is grouped by device ip and timestamp
      example:
        devices:
          - ip: 192.168.127.2
            events:
              - time: 1522512000
                events:
                  - source_ip: 192.168.127.2
                    id: 358
                    device_id: 5
                    severity: 3
                    type: "268501000"
                    port: 0
                    value: 0
                    event_time: 1524558436
                    detector: 2
                    acked: false
                    site_id: d9272062f646bbff
                  - source_ip: 192.168.127.2
                    id: 151
                    device_id: 5
                    severity: 3
                    type: "268501000"
                    port: 0
                    value: 0
                    event_time: 1524556782
                    detector: 2
                    acked: false
                    site_id: d9272062f646bbff
          - ip: 192.168.127.26
            events:
              - time: 1522512000
                events:
                  - source_ip: 192.168.127.26
                    id: 445
                    device_id: 17
                    severity: 3
                    type: "268501000"
                    port: 0
                    value: 0
                    event_time: 1524558829
                    detector: 2
                    acked: false
                    site_id: d9272062f646bbff
        site_id: d9272062f646bbff
    user-preferences:
      type: object
      properties:
        language:
          type: string
          description: The language to display on Web
          enum:
            - English
            - Traditional Chinese
            - Simplified Chinese
        device_panel_size:
          type: integer
          description: Device panel size in percentage (1-100%)
        ui_profile:
          type: string
          description: Display different UI by different UI profiles
        table_spacing:
          type: number
          description: "the space size between two rows, 1 = small, 2 = medium, 3 = wide"
        topology_text_size:
          type: number
          description: "the text size on topology, 1 = small, 2 = medium, 3 = big"
      description: Preference objects
    system-alerts:
      type: object
      properties:
        disk_space:
          type: integer
          description: >-
            MXview One sends an alert when the empty space of your disk is below
            this threshold
      description: system alerts
    snmp_polling_interval:
      type: integer
      description: Device SNMP polling interval. (60-600)
    devices:
      type: array
      description: an array of device IP or IDs
      example:
        - 192.168.127.1
        - 192.168.127.2
      items:
        type: string
        description: The IP address or ID of a device. Could be empty.
    active:
      type: boolean
      description: "True if the custom event is active, false otherwise."
    icmp_unreachable_warning_threshold:
      type: integer
      description: >-
        Device severity changes after icmp_unreachable_warning_threshold
        consecutive icmp unreachable detected. (1-1000000)
    deactivated-license:
      type: object
      properties:
        deactivation_code:
          type: string
          format: hex
        deactivated_time:
          type: integer
          format: timestamp
        max_nodes:
          type: integer
      required:
        - deactivation_code
        - deactivated_time
      description: The information of deactivated licenses
      example:
        - deactivation_code: >-
            RDdBN0VGQjc1ODlDMjEwQqhG8OCwsyAJ1HWiN8oiN18CwJO6/21XZBpyKLE+rLymrgeHkK7BgXkHlcaYRYnK7n1Xhx7pFFktOg+qn0cZ+IVeK2Xlg0nGsprpWlOAWo1pfkbBLtvDn+XV7/3asR4pCw==
          deactivated_time: 1518397924
          max_nodes: 500
          site_id: 7275766a7dbf177e
    action-sounds:
      type: object
      properties:
        filename:
          type: string
          description: The filename of a sound file
        id:
          type: integer
      description: sound names
    action-parameters:
      required:
        - name
        - type
      type: object
      properties:
        name:
          type: string
          description: Action name
        type:
          type: integer
          description: |
            actionType:
              * 0 - SMS
              * 1 - Email
              * 3 - Sound
              * 4 - Message Box
              * 5 - SNMP Trap
              * 6 - MXview ToGo
              * 7 - Slack
              * 8 - Teams
        phone:
          type: string
          description: The phone number which notifications should be sent to
        email:
          type: string
          description: The email which notifications should be sent to
          format: email
        mobile:
          type: string
          description: The MXview ToGo mobile ID
        filename:
          type: string
          description: The filename of the sound or the program to be triggered
      description: Actions
    login-succeed-record:
      type: object
      description: An object containing the timestamp and the ip
      example:
        - timestamp: 1534215941
          ip: 192.168.127.210
    threshold_type:
      type: integer
      description: The threshold type of a custom event
    device-ip-interfaces:
      type: object
      properties:
        ip:
          type: array
          description: An array of IP interfaces
          items:
            type: object
            properties:
              ip:
                type: string
                description: IP interface
      description: All the IP interfaces of a device
      example:
        ip:
          - 192.168.127.1
          - 192.168.127.2
        site_id: ffffffffffffffff
    custom-opc-tags:
      type: object
      properties:
        active:
          type: boolean
          description: "True if the custom opc tag is active, false otherwise."
        name:
          type: string
          description: Tag name
        devices:
          $ref: "#/components/schemas/devices"
      description: custom events

    opcua_server_setting:
      type: object
      properties:
        status:
          type: boolean
          description: "Enable OPCUA Server, True if the opcua server is active, false otherwise."
        allow_non_secure_connection:
          type: boolean
          description: "Allow None Security, True if the opcua server connection allow none secure connection."
        port:
          type: integer
          description: Port, opcua server port
        auth_method:
          type: integer
          description: "Authenication Settings, opcua server auth method, 1: Anonymous, 2: Username, 3: Certificate"
        uid:
          type: string
          description: "Username, opcua server userid"
        password:
          type: string
          description: "Password, opcua server password"
        ip_or_domain:
          type: string
          description: "IP/Domain Name, opcua server ip or domain"
        ctrl_panel_port:
          type: integer
          description: "ControlPanel Link, control panel port, open panel link under Certificate Mode"
        interfaces:
          type: array
          description: An array of opcua server network interfaces
          items:
            type: string
            description: "IP/Domain Name dataSource, opcua server network interfaces"
      description: opcua server setting
      example:
        site_id: EWFZZlQJKajhLbCL
        status: false
        allow_non_secure_connection: false
        port: 4840
        auth_method: 2
        uid: admin
        password: moxamoxa
        ip_or_domain: 127.0.0.1
        ctrl_panel_port: 7100
        interfaces:
          - 10.123.122.67
          - 10.123.35.48
          - 127.0.0.1

    opcua_server_setting_req:
      type: object
      properties:
        status:
          type: boolean
          description: "Enable OPCUA Server, True if the opcua server is active, false otherwise."
        allow_non_secure_connection:
          type: boolean
          description: "Allow None Security, True if the opcua server connection allow none secure connection."
        port:
          type: integer
          description: Port, opcua server port
        auth_method:
          type: integer
          description: "Authenication Settings, opcua server auth method, 1: Anonymous, 2: Username, 3: Certificate"
        uid:
          type: string
          description: "Username, opcua server userid"
        password:
          type: string
          description: "Password, opcua server password"
        ip_or_domain:
          type: string
          description: "IP/Domain Name, opcua server ip or domain"

      description: opcua server setting
      example:
        status: false
        allow_non_secure_connection: false
        port: 4840
        auth_method: 2
        uid: admin
        password: moxamoxa
        ip_or_domain: 127.0.0.1

    opcua_server_setting_res:
      type: object
      properties:
        site_id:
          type: string
          description: "site_id"
        errno:
          type: integer
          description: errno,
        message:
          type: string
          description: "the error message"
      description: opcua server setting
      example:
        errno: 0
        site_id: EWFZZlQJKajhLbCL

    opcua_tags:
      type: object
      properties:
        status:
          type: bool
          description: "True if the tag setting  is active, false otherwise."
        property_name:
          type: string
          description: opcua tag property name
        tag_name:
          type: string
          description: user defined display tag
        devices:
          type: array
          description: An array of devices
          items:
            type: object
            properties:
              device_id:
                type: integer
                description: device id
              alias:
                type: string
                description: device alias name
              ip:
                type: string
                description: device ip
            description: a tag's device list info
      description: opcua tags inforamation, tag amount limit is 2000, total devices limit is 4000.
      example:
        site_id: EWFZZlQJKajhLbCL
        tags:
          - tag_name: sysUpTime
            property_name: sysUpTime
            status: true
            devices:
              - device_id: 497
                alias: 192.168.123.151--EDS-G516E
                ip: 192.168.123.151
              - device_id: 498
                alias: 192.168.123.152--EDS-518A
                ip: 192.168.123.152

    opcua_tags_change_req:
      type: object
      properties:
        tag_name:
          type: string
          description: user defined display tag
        property_name:
          type: string
          description: opcua tag property name, this field is key, can't modify
        status:
          type: bool
          description: "True if the tag setting  is active, false otherwise."
        device_id:
          type: array
          description: An array of registered device's id
          items:
            type: int
            description: registered device's id
      required:
        - tag_name
        - property_name
        - status
        - device_id
      description: opcua tags inforamation, tag amount limit is 2000, total devices limit is 4000.
      example:
        tag_name: sysUpTime
        property_name: sysUpTime
        status: true
        device_id:
          - 497
          - 498

    opcua_tags_delete_req:
      type: object
      properties:
        property_name:
          type: array
          description: An array of propertie name to be deleted
          items:
            type: string
            description: a propertie name
      required:
        - property_name
      description: Delete multiple device property names.
      example:
        property_name:
          - Availability
          - sysUpTime

    opcua_tags_change_res:
      type: object
      properties:
        errno:
          type: integer
          description: The errno value being zero indicates normalcy, while a non-zero errno value signifies the presence of an error message.
        site_id:
          type: string
          description: site_id
      description: opcua tags inforamation, tag amount limit is 2000, total devices limit is 4000.
      example:
        errno: 0
        site_id: EWFZZlQJKajhLbCL

    current-event-type-responses:
      type: array
      description: >-
        the response is an array of device IP, timestamp, threshold and value if
        exists
      example:
        - ip: 192.168.127.115
          site_id: 0558bddc90a99678
          timestamp: 1527646207
          threshold: 100
          value: 157
        - ip: 192.168.127.2
          site_id: 0558bddc90a99678
          timestamp: 1527646059
          threshold: 100
          value: 280
      items:
        type: object
        properties:
          ip:
            type: string
            description: Device IP
          threshold:
            type: object
            description: the threshold of the triggered event
          value:
            type: object
            description: the value of the triggered event
          timestamp:
            type: integer
            description: the triggered time of this event
            format: unix timestamp
    action-emails:
      type: object
      properties:
        encrypt_type:
          type: integer
          description: Encryption method
        username:
          type: string
          description: The username used for logging the email server
        password:
          type: string
          description: The password used for logging the email server
        sender:
          type: string
          description: the email address used for sending the email
          format: email
        server:
          type: string
          description: The email server
          format: email
        port:
          type: integer
          description: The email server's port
        host_name:
          type: string
          description: The site name
        allow_selfsigned_cert:
          type: boolean
          description: email server allow self signed certificate
      description: Email settings
      example:
        encrypt_type: 0
        username: tester
        password: moxamoxa
        sender: tester
        server: 192.168.127.198
        port: 25
        host_name: (Site) Moxa
        allow_selfsigned_cert: true

    action-mobile-delete:
      type: object
      properties:
        users:
          type: array
          items:
            type: string
            description: Registered users
            format: Email
      description: Mobile settings
    site-information-set:
      type: object
      properties:
        site_name:
          type: string
          description: Site name
        site_description:
          type: string
          description: Detail description of a site
        hidden:
          type: boolean
          description: "Set to true to hide a site, otherwise unhide the site"
      description: Site information
    use_global_account:
      type: boolean
      description: True to use global username password
    event-responses:
      type: object
      properties:
        id:
          type: integer
          description: Event ID
        ack_time:
          type: string
          description: >-
            The time of this event be acked. Empty means this event is not acked
            yet.
          format: unix timestamp
        acked:
          type: boolean
          description: Is this event acked
        device_id:
          type: integer
          description: The ID of the device related to this event.
        event_time:
          type: string
          description: The time of this event happened.
          format: unix timestamp
        port:
          type: integer
          description: "The port of the device related to this event, Could be ignored."
        severity:
          $ref: "#/components/schemas/severity"
        detector:
          type: integer
          description: The detector of the event
        source_ip:
          type: string
          description: The source device of the event. Empty if MXview One cannot determine.
          format: IP address
        security_event:
          type: boolean
          description: Whether this event is a security-related event
        threshold:
          type: string
          description: The threshold to trigger this event. Could be ignored.
        type:
          type: integer
          description: The type of an event. See detailed event document.
        value:
          type: string
          description: "The value of this event, Could be ignored."
        user:
          type: string
          description: The MXview One user related to this event. Could be ignored.
        vpn_connection_name:
          type: string
          description: The VPN connection name. Could be ignored
        trap_oid:
          type: string
          description: >-
            This field exists if the event is a trap (detector:2). This field
            could be either a trap type string (such as "topology change") or an
            oid (if MXview One does not recognize the trap), Could be ignored.
        trap_detail:
          type: string
          description: >-
            The detail of a trap. This field exists only if furthur description
            of a trap is needed. Could be ignored.
        event_name:
          type: string
          description: >-
            Used in custom events, indicating the name of the selected device
            property. Could be ignored.
      description: Event information
    mac-address-license:
      type: object
      properties:
        mac:
          type: string
          description: A 12-byte hex string
        overwrite:
          type: boolean
          description: set to true to force overwrite the usercode
      description: A MAC address which will be used for generating usercode
      required:
        - mac
      example:
        mac: "010203040506"
    license-trial:
      type: object
      properties:
        license_type:
          type: integer
          description: |
            mode:
             * 4 - Wireless Trial
             * 5 - Substation Trial
      required:
        - license_mode
      example:
        license_mode: 1
    license-status:
      type: object
      properties:
        license_mode:
          type: integer
          description: |
            mode:
             * 0 - No License
             * 1 - Full license
             * 2 - Free license
             * 3 - Trial
        errno:
          type: integer
          description: |
            errno:
              * 0 - OK
              * -1 - General error
              * -2 - Usercode deactivated
              * -3 - No usercode
              * -4 - The usercode in a license does not match the usercode in the system
              * -5 - The usercode bound Network adapter does not found
              * -6 - License is expired
              * -7 - A usercode already exists
              * -8 - License not found
              * -9 - The license is already registered in the system
              * -10 - The license is already deactivated
              * -11 - The format of a license file is incorrect
              * -20 - Trial expired
              * -21 - Trial does not activated yet
              * -22 - Trial is already began
              * -30 - The license is invalid in this situation
              * -31 - Cannot add a free license when you have full licenses
              * -32 - Cannot add multiple free licenses
              * -40 - The monitored nodes is more than licenses supported
              * -41 - All licenses are invalidated
        max_nodes:
          type: integer
          description: the max nodes this server supported
        nodes:
          type: integer
          description: current node this server supported
        trial_remaining:
          type: integer
          description: "The remaining days of MXview One trial, -1 means not in trial"
      required:
        - license_mode
        - errno
        - trial_remaining
      description: The license status of a site
      example:
        - license_mode: 1
          errno: 0
          max_nodes: 200
          nodes: 180
          trial_remaining: -1
    license-addon-status-sites:
      type: array
      items:
        $ref: "#/components/schemas/license-addon-status"
    license-addon-status:
      type: object
      properties:
        site_id:
          type: string
        addon_info:
          type: array
          items:
            type: object
            properties:
              addon_type:
                type: integer
                description: |
                  mode:
                  * 4 - Wireless license
                  * 5 - Power license
                  * 6 - MXsecurity license
              license_mode:
                type: integer
                description: |
                  mode:
                  * 0 - No License
                  * 1 - Full license
                  * 3 - Trial
              trial_remaining:
                type: integer
                description: "The remaining days of MXview One trial, -1 means not in trial"
              trial_enable:
                type: boolean
                description: "The flag of the trial license is enable or disable"
              errno:
                type: integer
                description: |
                  errno:
                    * 0 - OK
                    * -1 - General error
                    * -2 - Usercode deactivated
                    * -3 - No usercode
                    * -4 - The usercode in a license does not match the usercode in the system
                    * -5 - The usercode bound Network adapter does not found
                    * -6 - License is expired
                    * -7 - A usercode already exists
                    * -8 - License not found
                    * -9 - The license is already registered in the system
                    * -10 - The license is already deactivated
                    * -11 - The format of a license file is incorrect
                    * -20 - Trial expired
                    * -21 - Trial does not activated yet
                    * -22 - Trial is already began
                    * -30 - The license is invalid in this situation
                    * -31 - Cannot add a free license when you have full licenses
                    * -32 - Cannot add multiple free licenses
                    * -40 - The monitored nodes is more than licenses supported
                    * -41 - All licenses are invalidated
      required:
        - addon_info
      description: The addon license status of a site
      example:
        site_id: df050b6e50ec2075
        addon_info:
          - addon_type: 4
            license_mode: 3
            errno: 0
            trial_remaining: 89
            nodes: 0
            trial_enable: true
          - addon_type: 5
            license_mode: 3
            errno: 0
            trial_remaining: 89
            nodes: 0
            trial_enable: false
          - addon_type: 6
            license_mode: 3
            errno: 0
            trial_remaining: 89
            nodes: 0
            trial_enable: false

    license-addon-enable:
      type: object
      properties:
        license:
          type: array
          items:
            type: object
            properties:
              addon_type:
                type: integer
                description: |
                  mode:
                  * 4 - Wireless license
                  * 5 - Power license
                  * 6 - MXsecurity license
              enable:
                type: boolean
                description: trial enable flag.

      description: The addon license status of a site
      example:
        license:
          - addon_type: 4
            enable: true
          - addon_type: 5
            enable: false
          - addon_type: 6
            enable: true

    management-interfaces:
      type: object
      properties:
        http:
          type: integer
          description: HTTP port
          format: port
        https:
          type: integer
          description: HTTPS port
          format: port
        telnet:
          type: integer
          description: Telnet port
          format: port
        ssh:
          type: integer
          description: SSH port
          format: port
        default_web_protocol:
          type: integer
          description: "Default web protocol. 0: HTTP, 1: HTTPS"
      description: Management interface objects
    network-igmp-information:
      type: object
      properties:
        igmp:
          type: array
          description: Network IGMP information
          items:
            type: object
            properties:
              vid:
                maximum: 4096
                minimum: 1
                type: integer
                description: ports set as this VLAN's access port
              multicast_ip:
                type: string
                description: multicast ip address
                format: ipv4 string
      description: Device IGMP information
      example:
        igmp:
          - vid: 1
            multicast_ip: 239.255.255.250
          - vid: 2
          - vid: 3
          - vid: 20
          - vid: 30
        site_id: df050b6e50ec2075
    device-snmp-system-information-get:
      type: object
      properties:
        id:
          type: integer
          description: device ID
        sysName:
          type: string
          description: the sysname of a device
        sysContact:
          type: string
          description: the sysContact of a device
        sysLocation:
          type: string
          description: the sysLocation of a device
        sysDescr:
          type: string
          description: the sysDescr of a device
      description: snmp system information
      example:
        id: 1
        sysName: example sysName
        sysContact: example sysContact
        sysLocation: example sysLocation
        sysDescr: example sysDescr
    snmp_unreachable_warning_threshold:
      type: integer
      description: >-
        Device severity changes after snmp_unreachable_warning_threshold
        consecutive icmp unreachable detected. (1-1000000)
    by-device-access-parameters:
      type: object
      properties:
        ssh_enabled:
          type: boolean
          description: Is the SSH port of the device is enabled or not
        telnet_enabled:
          type: boolean
          description: Is the telnet port of the device is enabled or not
        http_enabled:
          type: boolean
          description: Is the http port of the device is enabled or not
        https_enabled:
          type: boolean
          description: Is the https port of the device is enabled or not
        icmp_polling_interval:
          type: integer
          description: Global icmp polling interval. (10-600)
        snmp_polling_interval:
          type: integer
          description: Global snmp polling interval. (60-600)
        icmp_unreachable_warning_threshold:
          type: integer
          description: >-
            Triggers a warning if a device is ICMP unreachable consecutively.
            (1-1000000)
        snmp_unreachable_warning_threshold:
          type: integer
          description: >-
            Triggers a warning if a device is SNMP unreachable consecutively.
            (1-1000000)
        username:
          type: string
          description: The default username used by MXview One to login the device
        password:
          type: string
          description: The default password used by MXview One to login the device
        snmp_version:
          $ref: "#/components/schemas/snmp_version"
        snmpv3_security_level:
          $ref: "#/components/schemas/snmpv3_security_level"
        snmpv3_authentication_type:
          $ref: "#/components/schemas/snmpv3_authentication_type"
        read_community:
          $ref: "#/components/schemas/read_community"
        write_community:
          $ref: "#/components/schemas/write_community"
        snmp_username:
          $ref: "#/components/schemas/snmp_username"
        snmp_password:
          $ref: "#/components/schemas/snmp_password"
        snmpv3_privacy_protocol:
          $ref: "#/components/schemas/snmpv3_privacy_protocol"
        snmpv3_encryption_key:
          $ref: "#/components/schemas/snmpv3_encryption_key"
        use_global_account:
          $ref: "#/components/schemas/use_global_account"
      description: device access parameter object
    event-type-count-responses:
      type: object
      properties:
        devices:
          type: object
          properties:
            counts:
              type: array
              items:
                type: object
                properties:
                  count:
                    type: integer
                  time:
                    type: integer
                    format: unix timestamp
            ip:
              type: string
      description: the response is grouped by device ip and timestamp
      example:
        devices:
          - ip: 192.168.127.2
            counts:
              - time: 1524585600
                count: 1
              - time: 1524499200
                count: 2
          - ip: 192.168.127.26
            counts:
              - time: 1524499200
                count: 1
        site_id: d9272062f646bbff
    background-discovery:
      type: object
      properties:
        enable:
          type: boolean
          description: "True to enable background discovery, false to disable."
      description: background discovery object
    device-access-parameters-arr:
      type: array
      description: Network IGMP information
      items:
        type: object
        properties:
          device-access-parameters:
            $ref: "#/components/schemas/device-access-parameters"
        description: device access parameter object
      example:
        - site_id: CkCUksxQdidYQajn
          username: admin
          password: moxa
          icmp_polling_interval: 10
          snmp_polling_interval: 60
          icmp_unreachable_warning_threshold: 2
          snmp_unreachable_warning_threshold: 3
          snmp_version: 1
          snmp_username: admin
          snmp_password: ""
          snmpv3_security_level: 1
          snmpv3_encryption_key: ""
          snmpv3_authentication_type: 1
          snmpv3_privacy_protocol: 1
          snmp_get_community: public
          snmp_set_community: private
          snmp_port: 161
          modbus_status: false
          modbus_port: 504
          eip_status: false
          eip_tcp_port: 44818
          eip_udp_port: 44818
          s7_status: false
          s7_port: 102
    device-access-parameters:
      type: object
      properties:
        icmp_polling_interval:
          type: integer
          description: Global icmp polling interval. (10-600)
        snmp_polling_interval:
          type: integer
          description: Global snmp polling interval. (60-600)
        icmp_unreachable_warning_threshold:
          type: integer
          description: >-
            Triggers a warning if a device is ICMP unreachable consecutively.
            (1-1000000)
        snmp_unreachable_warning_threshold:
          type: integer
          description: >-
            Triggers a warning if a device is SNMP unreachable consecutively.
            (1-1000000)
        username:
          type: string
          description: The default username used by MXview One to login the device
        password:
          type: string
          description: The default password used by MXview One to login the device
        snmp_version:
          $ref: "#/components/schemas/snmp_version"
        snmp_port:
          type: integer
          description: snmp port, default 161. (1-65535)
        snmpv3_security_level:
          $ref: "#/components/schemas/snmpv3_security_level"
        snmpv3_authentication_type:
          $ref: "#/components/schemas/snmpv3_authentication_type"
        read_community:
          $ref: "#/components/schemas/read_community"
        write_community:
          $ref: "#/components/schemas/write_community"
        snmp_username:
          $ref: "#/components/schemas/snmp_username"
        snmp_password:
          $ref: "#/components/schemas/snmp_password"
        snmpv3_privacy_protocol:
          $ref: "#/components/schemas/snmpv3_privacy_protocol"
        snmpv3_encryption_key:
          $ref: "#/components/schemas/snmpv3_encryption_key"
        modbus_status:
          type: boolean
          description: "True to enable modbus discovery, false to disable."
        modbus_port:
          type: integer
          description: modbus port, default 502. (1-65535)
        eip_status:
          type: boolean
          description: "True to enable eip discovery, false to disable."
        eip_tcp_port:
          type: integer
          description: eip tcp port, default 44818. (1-65535)
        eip_udp_port:
          type: integer
          description: eip udp port, default 44818. (1-65535)
        s7_status:
          type: boolean
          description: "True to enable s7 discovery, false to disable."
        s7_port:
          type: integer
          description: s7 port, default 102. (1-65535)
      description: device access parameter object
      example:
        site_id: CkCUksxQdidYQajn
        username: admin
        password: moxa
        icmp_polling_interval: 10
        snmp_polling_interval: 60
        icmp_unreachable_warning_threshold: 2
        snmp_unreachable_warning_threshold: 3
        snmp_version: 1
        snmp_username: admin
        snmp_password: ""
        snmpv3_security_level: 1
        snmpv3_encryption_key: ""
        snmpv3_authentication_type: 1
        snmpv3_privacy_protocol: 1
        snmp_get_community: public
        snmp_set_community: private
        snmp_port: 161
        modbus_status: false
        modbus_port: 504
        eip_status: false
        eip_tcp_port: 44818
        eip_udp_port: 44818
        s7_status: false
        s7_port: 102
    action-parameters-get:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          description: Action name
        type:
          type: integer
          description: |
            actionType:
              * 0 - SMS
              * 1 - Email
              * 3 - Sound
              * 4 - Message Box
              * 5 - SNMP Trap
              * 6 - MXview ToGo
              * 7 - Slack
              * 8 - Teams
        phone:
          type: string
          description: The phone number which notifications should be sent to
        email:
          type: string
          description: The email which notifications should be sent to
          format: email
        mobile:
          type: string
          description: The MXview ToGo mobile ID
        filename:
          type: string
          description: The filename of the sound or the program to be triggered
      description: Actions
    current-event-device-responses:
      type: array
      description: >-
        the response is an array of device IP, timestamp, threshold and value if
        exists
      example:
        - type: 131077
          timestamp: 1527646059
          value: 280
          threshold: 100
        - type: 131079
          timestamp: 1527646059
          value: 286
          threshold: 100
      items:
        type: object
        properties:
          threshold:
            type: object
            description: the threshold of the triggered event
          type:
            type: integer
            description: event type
          value:
            type: object
            description: the value of the triggered event
          timestamp:
            type: integer
            description: the triggered time of this event
            format: unix timestamp
    link-colors:
      type: object
      properties:
        poe_color:
          type: string
          description: Link color for PoE links
          format: "#AARRGGBB"
        turbo_ring_color:
          type: string
          description: Link color for Turbo Ring links
          format: "#AARRGGBB"
        turbo_ring_v2_color:
          type: string
          description: Link color for TurboRingV2 links
          format: "#AARRGGBB"
        turbo_chain_color:
          type: string
          description: Link color for Turbo Chain links
          format: "#AARRGGBB"
        rstp_color:
          type: string
          description: Link color for RSTP links
          format: "#AARRGGBB"
        link_up_color:
          type: string
          description: Link color for Link Up links
          format: "#AARRGGBB"
        link_down_color:
          type: string
          description: Link color for Link Down links
          format: "#AARRGGBB"
        prp_lan_a_color:
          type: string
          description: Link color for PRP LAN A links
          format: "#AARRGGBB"
        prp_lan_b_color:
          type: string
          description: Link color for PRP LAN B links
          format: "#AARRGGBB"
        hsr_color:
          type: string
          description: Link color for HSR Ring links
          format: "#AARRGGBB"
        mcp_color:
          type: string
          description: Link color for MCP links
          format: "#AARRGGBB"
        mrp_color:
          type: string
          description: Link color for MRP links
          format: "#AARRGGBB"
        mrp_int_color:
          type: string
          description: Link color for MRP_int links
          format: "#AARRGGBB"
      description: >-
        link colors. #AARRGGBB format. Note that by now, alpha(AA) only accept
        FF
    api-tokens:
      type: array
      description: An array of API keys
      example:
        - key: >-
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwiaWF0IjoxNTI1NjYxMzcxLCJqdGkiOiJjMDVkMzhmNWM3NmZmZDI0ZmUzNjY3Mjg2OWU1ZjQ2ZTgyMjkxYjJmIn0.evYCOosadaRGzxdek0aJivfDV4SNE6AueL5_ODpxnOE
          isRevoked: false
          name: bbbbb
          violationCount: 0
      items:
        type: object
        properties:
          isRevoked:
            type: boolean
            description: is this key revoked
          violationCount:
            type: integer
            description: the number of invalid accesses
          name:
            type: string
            description: the name of this API keys
          revokedAt:
            type: integer
            description: the timestamp this key is revoked
            format: unix timestamp
          key:
            type: string
            description: API key
    x:
      type: integer
      description: The X-coordination on the topology
    "y":
      type: integer
      description: The Y-coordination on the topology
    polling_ip:
      type: string
      description: the IP MXview One used for polling a layer 3 device
      format: ipv4
    deactivation-code:
      type: object
      properties:
        deactivation_code:
          type: string
          format: hex
      description: >-
        Deactivation code is used for deactivating a registered license on MOXA
        SLS
      example:
        - deactivation_code: >-
            NDZDOTVFREY5RTVERUZBMILThpJc792osxwDltWnUOJTFFX30UYd1/GlkIAXvLRXUo7KxOkfRcyuwEYnw0VlYIKgvBXLn/t97tYJlLswvuIMbRIK0vLGywZ0EFOiZuP2KwQ1yqDu9uo8wYXEUSqK7w==
          site_id: 7275766a7dbf177e
    mxview-server-version:
      type: object
      properties:
        version:
          type: string
          description: the build time and the version of MXview One
      description: MXview One server version
      example:
        - version: MXview_V3.1_Build_19041617
          site_id: abcdef123456
    login-messages:
      type: object
      properties:
        success:
          type: string
          description: >-
            MXview One will display this Login message when a user logs in the
            system
        fail:
          type: string
          description: >-
            MXview One will display this Login message when a user fails to login
            the system
      description: login messages
    action-traps:
      type: object
      properties:
        snmp_version:
          type: integer
          description: SNMP version for traps
        community_1:
          type: string
          description: The community string of the first trap server
        ip_1:
          type: string
          description: The IP address of the first trap server
          format: IP string
        enable_trap_forward_1:
          type: boolean
          description: set to true to forward received traps to trap server 1
        community_2:
          type: string
          description: The community string of the second trap server
        ip_2:
          type: string
          description: The IP address of the second trap server
          format: IP string
        enable_trap_forward_2:
          type: boolean
          description: set to true to forward received traps to trap server 2
      description: SNMP Trap settings
    vlan-igmp-information:
      type: object
      properties:
        devices:
          type: array
          description: Device IGMP information
          items:
            type: object
            properties:
              member_ports:
                type: array
                description: the member ports of the device
                items:
                  type: integer
                  description: Port ID
              querier_enabled:
                type: boolean
                description: Is the device's querier port enabled
              querier_ports:
                type: integer
                description: The querier port of the device
              id:
                type: integer
                description: deviceID
      description: Device IGMP information
      example:
        devices:
          - id: 138
            querier_port: 1
            querier_enabled: true
            member_ports:
              - 1
              - 5
          - id: 147
            querier_port: 19
            querier_enabled: true
            member_ports:
              - 7
              - 15
              - 19
        site_id: df050b6e50ec2075
    snmpv3_authentication_type:
      type: integer
      description: SNMP authentication type of the device
    password-policy:
      type: object
      properties:
        min_password_length:
          maximum: 16
          minimum: 4
          type: integer
          description: Minimum password length for an account. (4-16)
          format: decimal
        enable_password_strength_check:
          type: boolean
          description: Set to True to enable password strength check
        has_digits:
          type: boolean
          description: Account password must contain at least one digit(0-9)
        mixed_case:
          type: boolean
          description: Account password must contain both Upper and lower cases
        has_special_chars:
          type: boolean
          description: Account password must contain at least one special character
      description: Password policy settings
    threshold:
      type: integer
      description: >-
        The event would be triggered if the situation matches the condition of
        threshold and threshold_type
    link-traffic-parameters:
      type: object
      properties:
        input:
          type: integer
          description: Input traffic flow (0.01%)
        output:
          type: integer
          description: Output traffic flow (0.01%)
        id:
          type: integer
          description: Link ID
        source:
          type: integer
          description: >-
            Indicate that the traffic data is collected from which device. (0:
            from device; 1: to device)
      description: Link traffic information
    syslogs:
      type: object
      properties:
        source_ip:
          type: string
          description: The IP of the source device
        facility:
          type: integer
          description: Facility of syslog
        severity:
          type: integer
          description: Severity of the syslog
        time:
          type: string
          format: unix timestamp
        content:
          type: string
          description: A base64 encoded string of syslog content
          format: base64
      description: Syslog Information
    device-trap-settings:
      type: array
      description: Trap parameter object
      example:
        - ip: 192.168.127.253
          community: public
        - ip: 192.168.127.254
          community: public
      items:
        type: object
        properties:
          ip:
            type: string
            description: The IP address of a trap server. Could be empty.
          community:
            type: string
            description: The community string of a trap server. Could be empty
    background-colors:
      type: object
      properties:
        background_color:
          type: string
          description: Background color for topology view
          format: "#AARRGGBB"
      description: >-
        topology background colors. #AARRGGBB format. Note that by now,
        alpha(AA) only accept FF
    legacy-license:
      type: object
      properties:
        license:
          type: string
          description: the license code
        device_limit:
          type: integer
          description: the max nodes this license supported
      description: The license registered in a site
      example:
        - license: "1234567890"
          device_limit: 100
          site_id: 7275766a7dbf177e
    devices-id:
      type: array
      description: an array of device IDs
      items:
        type: object
        properties:
          device:
            type: string
            description: The ID of a device. Could be empty.
    snmpv3_security_level:
      type: integer
      description: SNMP security level of the device

    mxview-response:
      type: object
      properties:
        errno:
          type: integer
        site_id:
          type: string
      example:
        errno: 0
        site_id: 7275766a7dbf177e

    mxview-errors:
      type: object
      properties:
        errno:
          type: integer
          description: |
            errno:
              * '0': OK
              * '-102': Operation failed.
              * '-103': Bad Request. Possible errors in your query commands.
              * '-110': Cannot read the file.
              * '-120': The site is not accessible. You don't have enough permission to access the site
              * '-121': The username or password is incorrect.
              * '-122': This route can only be executed by an administrator.
              * '-123': You don't have enough authority to execute this route.
              * '-210': You can only execute this route on the master MXview One server
        message:
          type: string
          description: error message
      example:
        errno: 0
        message: OK
    read_community:
      type: string
      description: The SNMP read community the device
    legacy-device-property-names:
      type: object
      properties:
        site_id:
          type: string
          description: The ID of a site
        device_components:
          type: array
          description: an array of device property names
          items:
            type: object
            properties:
              deviceProperty:
                type: string
                description: The lagacy name of a device property
      description: device properties
      example:
        - device_components:
            - Alias
            - firmwareVersion
          site_id: abcdef123456
    snmpv3_encryption_key:
      type: string
      description: The encryption password of SNMP of the device
    network-vlan-information-of-id:
      type: object
      properties:
        devices:
          type: array
          description: VLAN information of a VID of devices
          items:
            type: object
            properties:
              pvid:
                type: integer
                description: VLAN ID
              id:
                type: integer
                description: device ID
              ports:
                type: array
                description: Port VLAN information of a device
                items:
                  type: object
                  properties:
                    is_access_port:
                      type: boolean
                      description: "true if the port is an access port, false otherwise"
                    pvid:
                      type: integer
                      description: PVID
                    index:
                      type: integer
                      description: Port index
      description: VLAN information of a VLAN ID
      example:
        devices:
          - id: 1
            managementVLAN: true
            ports:
              - index: 1
                pvid: 1
                is_access_port: true
              - index: 2
                pvid: 2
                is_access_port: false
    network-adapters:
      type: object
      properties:
        address:
          type: string
          description: a MAC address
        name:
          type: string
          description: The name of the network adapter
      description: all network adapters of a sites
      example:
        - address: 705A0F30DC92
          name: Intel(R) Ethernet Connection (2) I219-LM
          site_id: 7275766a7dbf177e
        - address: 6805CA2D83CF
          name: Intel(R) Gigabit CT Desktop Adapter
          site_id: 7275766a7dbf177e
    action-mobile-get:
      type: object
      properties:
        users:
          type: array
          items:
            type: string
            description: Registered users
        site_id:
          type: string
          description: site ID
      description: Mobile settings
    mxview-error-licenses:
      type: object
      properties:
        errno:
          type: integer
          description: |
            errno:
              * '0': OK
              * '-510': Bad license
              * '-103': Bad Request. Possible errors in your query commands.
        message:
          type: object
          properties:
            errno:
              type: integer
              description: |
                errno:
                  * 0 - OK
                  * -1 - General error
                  * -2 - Usercode deactivated
                  * -3 - No usercode
                  * -4 - The usercode in a license does not match the usercode in the system
                  * -5 - The usercode bound Network adapter does not found
                  * -6 - License is expired
                  * -7 - A usercode already exists
                  * -8 - License not found
                  * -9 - The license is already registered in the system
                  * -10 - The license is already deactivated
                  * -11 - The format of a license file is incorrect
                  * -20 - Trial expired
                  * -21 - Trial does not activated yet
                  * -22 - Trial is already began
                  * -30 - The license is invalid in this situation
                  * -31 - Cannot add a free license when you have full licenses
                  * -32 - Cannot add multiple free licenses
                  * -40 - The monitored nodes is more than licenses supported
                  * -41 - All licenses are invalidated
            message:
              type: string
              description: error message
          description: error object
      example:
        errno: -510
        message:
          errno: -1
          message: General error
    recovery_description:
      type: string
      description: A user-friendly description of a recovered custom event
    bottom-label-types:
      type: object
      properties:
        type:
          type: integer
          description: |
            enum:
              * `1` - None
              * `2` - sysLocation
              * `3` - Alias
              * `4` - Model Name
              * `5` - Mac
      description: Bottom label types which are displayed on MXview One UI
    login-mode:
      type: object
      properties:
        type:
          type: integer
          description: |
            enum:
              * `0` - Local
              * `1` - Tacacs+
      description: Login mode
    tacacs-settings:
      type: object
      properties:
        auth_type:
          type: integer
          description: |
            enum:
              * `0` - ASCII
              * `1` - PAP
              * `2` - CHAP
              * `3` - MSCHAP
        host:
          type: string
          description: the address (host/ip) of the Tacacs+ server
        shared_key:
          type: string
          description: the shared-key of the Tacacs+ server
        port:
          type: integer
          format: port (1-65535)
          description: the port of the Tacacs+ server
        timeout:
          type: integer
          description: the timeout of a connection (1-10) seconds
    availability-timeframe:
      type: object
      properties:
        timeframe:
          maximum: 168
          minimum: 1
          type: integer
          description: The timeframe of device availability calculation
      description: availability timeframe
    license:
      type: object
      properties:
        license_file:
          type: string
          description: the license file
        max_nodes:
          type: integer
          description: the max nodes this license supported
        duration:
          type: integer
          description: how long is a license valid. 0 means forever
        activated_time:
          type: integer
          description: activated time
        valid:
          type: boolean
          description: is the license valid
        type:
          type: integer
          description: |
            mode:
             * 4 - Wireless license
             * 5 - Substation license
        site_id:
          type: string
          description: site id
      description: The license registered in a site
      required:
        - license_file
        - duration
        - valid
      example:
        - license_file: >-
            fHyJ7Z+t6sL3M0Hh9uxSsj/HudImlebKNvW6qgqOvS41AJtcbnuHO8ZsG3JJJV/W2bBVEULqfMItlK2CEJQsMtrGXb6FPM4r0CmmKlclQKhX8h6NNULBCoGYU2FOVGrlKffUxSCncjPCTnV8TPDuPwAVHYZND21DHFCqdltQ0ls=
          max_nodes: 100
          duration: 0
          activated_time: 1517806223
          valid: true
          site_id: 7275766a7dbf177e
        - license_file: >-
            fHyJ7Z+t6sL3M0Hh9uxSsj/HudImlebKNvW6qgqOvS41AJtcbnuHO8ZsG3JJJV/W2bBVEULqfMItlK2CEJQsMtrGXb6FPM4r0CmmKlclQKhX8h6NNULBCoGYU2FOVGrlKffUxSCncjPCTnV8TPDuPwAVHYZND21DHFCqdltQ0ls=
          activated_time: 1517806223
          valid: true
          type: 4
          site_id: 7275766a7dbf177e
    notification-parameters:
      type: object
      properties:
        name:
          type: string
          description: Notification name
        type:
          type: integer
          description: Notification type
        items:
          type: object
          properties:
            device_ip:
              type: string
              description: >-
                The IP of the device which triggers this notification. Either
                deviceIp or groupId can be included in the body. not both.
            id:
              type: integer
              description: the ID of the notification
        group_id:
          type: integer
          description: >-
            The ID of a group which one of the devices triggers this
            notification. Either deviceIp or groupId can be included in the
            body. not both.
        actions:
          type: array
          description: An array of action IDs
          items:
            type: integer
            description: Action ID
      description: Notifications
    write_community:
      type: string
      description: The SNMP write community the device
    login-fail-records:
      type: object
      description: >-
        An array containing at most three login fail objects, including
        timestamp and ip
      example:
        - timestamp: 1534215941
          ip: 192.168.127.210
        - timestamp: 1534215941
          ip: 192.168.127.210
        - timestamp: 1534215941
          ip: 192.168.127.210
    site-event-responses:
      type: object
      properties:
        id:
          type: integer
          description: Event ID
        ack_time:
          type: string
          description: >-
            The time of this event be acked. Empty means this event is not acked
            yet.
          format: unix timestamp
        acked:
          type: boolean
          description: Is this event acked
        event_time:
          type: string
          description: The time of this event happened.
          format: unix timestamp
        severity:
          $ref: "#/components/schemas/severity"
        type:
          type: integer
          description: |
            type:
              * 1: site online
              * 65537: site offline
      description: Site Event information
    event_name:
      type: string
      description: Event name
    device-port-interfaces:
      type: object
      properties:
        enable:
          type: boolean
          description: Is this port enabled?
        index:
          type: integer
          description: Port index
        index_description:
          type: string
          description: text description of the port index
        media_type:
          type: string
          description: Media type of the port
        port_description:
          type: string
          description: User given port description
    traffic-load-settings:
      type: object
      properties:
        traffic:
          type: array
          items:
            type: object
            properties:
              color:
                type: string
                description: >-
                  The color used for displaying links which traffic loads are
                  between the "to" value from the last element and it.
                format: "#AARRGGBB"
              to:
                type: integer
                description: >-
                  "to" must be incremental in each traffic element. "to" in the
                  last traffic element must be 100.
      description: Traffic load color threshold
      example:
        - to: 20
          color: "#FFFF0000"
        - to: 65
          color: "#FF00FF00"
        - to: 100
          color: "#FF0000FF"
    description:
      type: string
      description: A user-friendly description of the custom event
    job-parameters:
      type: object
      properties:
        id:
          type: integer
          description: Job ID
        name:
          type: string
          description: Job name
        description:
          type: string
          description: Job description
        action:
          type: integer
          description: Action type <br/>1=ExportConfig 2=ImportConfig 3=DB backup 4=SRS_Check 5/6/7=Firmware 8=RemoteBackup 9=CLI upgrade 10/11/12=Built-in command 13=AutoTopology
        frequency:
          type: integer
          description: Job frequency
        filename:
          type: string
          description: When action=2, it represents the config file name
        cli_id:
          type: integer
          description: When action=9, it represents the CLI template id
        firmwareDevices:
          type: object
          description: When action=5/6/7, it represents the firmware upgrade devices data
        commandDevices:
          type: object
          description: When action=10/11/12, it represents the command execution devices data
        hour:
          type: integer
          description: The job would execute in hour (0-23)
        minute:
          type: integer
          description: The job would execute in minute (0-59)
        day_of_week:
          type: integer
          description: The job would execute in this day of week
        day_of_month:
          type: integer
          description: The job would execute in this day of month (1-31)
        devices:
          type: array
          description: an array of device IDs
          items:
            type: object
            properties:
              id:
                type: integer
                description: The ID of a device. Could be empty.
      description: Job parameters
      example:
        id: 1
        name: example
        description: description example
        devices:
          - 1
          - 2
          - 3
        action: 1
        frequency: 4
        day_of_month: 15
        hour: 13
        minute: 0
        filename: ""
    link-severity-threshold-parameters:
      type: object
      description: The parameters of a link's severity and threshold conditions
      example:
        id: 272
        link_down_severity: 1
        link_up_severity: 3
        bandwidth_over_severity: 1
        bandwidth_over_threshold: 30.2
        bandwidth_below_severity: 3
        bandwidth_below_threshold: 1.5
        packet_error_severity: 1
        packet_error_threshold: 0.05
        sfp_tx_below_severity: 2
        sfp_rx_below_severity: 2
        sfp_volt_below_severity: 2
        sfp_volt_over_severity: 2
        sfp_temp_over_severity: 2
        sfp_tx_below_threshold: 2
        sfp_rx_below_threshold: 2
        sfp_volt_below_threshold: 2
        sfp_volt_over_threshold: 2
        sfp_temp_over_threshold: 2
        site_id: f97f7735889f0bfd
      properties:
        id:
          type: integer
          description: link id
        link_down_severity:
          type: integer
          description: >-
            the severity of a link down event <br> * `1` - Informational <br> *
            `2` - Warning <br> * `3` - Critical <br>
        link_up_severity:
          type: integer
          description: >-
            the severity of a link up event <br> * `1` - Informational <br> *
            `2` - Warning <br> * `3` - Critical <br>
        bandwidth_over_severity:
          type: integer
          description: >-
            the severity of a bandwidth over event <br> * `1` - Informational
            <br> * `2` - Warning <br> * `3` - Critical <br>
        bandwidth_over_threshold:
          type: number
          description: the threshold of a bandwidth over event
        bandwidth_below_severity:
          type: integer
          description: >-
            the severity of a bandwidth below event <br> * `1` - Informational
            <br> * `2` - Warning <br> * `3` - Critical <br>
        bandwidth_below_threshold:
          type: number
          description: the threshold of a bandwidth below event
        packet_error_severity:
          type: integer
          description: >-
            the severity of a packet error over event <br> * `1` - Informational
            <br> * `2` - Warning <br> * `3` - Critical <br>
        packet_error_threshold:
          type: number
          description: the threshold of a packet error over event
        sfp_tx_below_severity:
          type: integer
          description: >-
            the severity of an sfp tx power below event <br> * `1` -
            Informational <br> * `2` - Warning <br> * `3` - Critical <br>
        sfp_tx_below_threshold:
          type: number
          description: the threshold of an sfp tx power below event (0~-100)
        sfp_rx_below_severity:
          type: integer
          description: >-
            the severity of an sfp rx power below event <br> * `1` -
            Informational <br> * `2` - Warning <br> * `3` - Critical <br>
        sfp_rx_below_threshold:
          type: number
          description: the threshold of an sfp rx power below event (0~-100)
        sfp_volt_below_severity:
          type: integer
          description: >-
            the severity of an sfp voltage below event <br> * `1` -
            Informational <br> * `2` - Warning <br> * `3` - Critical <br>
        sfp_volt_below_threshold:
          type: number
          description: the threshold of an sfp voltage below event (0~10)
        sfp_volt_over_severity:
          type: integer
          description: >-
            the severity of an sfp voltage over event <br> * `1` - Informational
            <br> * `2` - Warning <br> * `3` - Critical <br>
        sfp_volt_over_threshold:
          type: number
          description: the threshold of an sfp voltage over event  (0~10)
        sfp_temp_severity:
          type: integer
          description: >-
            the severity of an sfp temperature below event <br> * `1` -
            Informational <br> * `2` - Warning <br> * `3` - Critical <br>
        sfp_temp_threshold:
          type: number
          description: the threshold of an sfp temperature below event (0~100)
    duration:
      type: integer
      description: >-
        The event would be triggered only if the situation continous <duration>
        seconds.
    custom-security-profile-items:
      type: object
      properties:
        profiles:
          type: object
          properties: {}
          description: an object of devices series and their corresponding security items
      description: Selected security items for each device series
      example:
        profiles:
          MGATE:
            - LOGIN_NOTIFICATION
            - ACCOUNT_LOCKOUT
            - ACCESSIBLE_IP_LIST
            - PASSWORD_POLICY
            - SYSLOG
            - PASSWORD_CHANGED
            - ENCRYPT_CONSOLE
          NPORT:
            - LOGIN_NOTIFICATION
            - HIGH_SECURE_MODE
          SWITCH:
            - AUTO_LOGOUT
    suppress-options:
      type: object
      properties:
        login_fail:
          type: boolean
          description: >-
            true means the Login fail records would display when a user logins
            an MXview One Client
        sysName:
          type: boolean
          description: >-
            true means the default password notification would display when a
            user logins an MXview One Client, if the user's password is default'
      description: suppress options
      example:
        login_fail: false
        default_password: true
    login-response:
      type: object
      properties:
        mxviewGateway:
          type: string
          description: A JWT token
        polocy:
          type: boolean
          description: false means the password does not conform to policy
      example:
        mxviewGateway: >-
          eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwiaWF0IjoxNTI2NTIzMDM0LCJleHAiOjE1MjY1MjM5MzQsImp0aSI6ImNmMWQ1MjZlZGY4Y2E1NDk1MGI1MTRmMjJmODUzOGZjNmY4YWFlMDQifQ.6zm42ssf1hRdxxJKsPD1onB6P2jKLBFhtUIWIINEIeg
    account-lockout:
      type: object
      properties:
        max_retries:
          maximum: 10
          minimum: 1
          type: integer
          description: The account would be locked out after `max_retries` login failure
          format: decimal
        lockout_time:
          maximum: 60
          minimum: 1
          type: integer
          description: The account would be locked out for `lockout_time minutes`
          format: decimal
        enable_lockout:
          type: boolean
          description: Set to True to enable account lockout
      description: Account lockout settings
    device-severity-summary:
      type: object
      properties:
        severity:
          type: object
          properties:
            critical:
              type: array
              description: critical devices
              items:
                type: string
                description: device IP
            warning:
              type: array
              description: warning devices
              items:
                type: string
                description: device IP
            information:
              type: array
              description: normal devices
              items:
                type: string
                description: device IP
      description: device severity summatu parameters
      example:
        severity:
          critical: []
          warning:
            - 192.168.127.8
          information:
            - 192.168.127.1
            - 192.168.127.2
            - 192.168.127.3
    snmp_password:
      type: string
      description: The password to access SNMP of the device
    network-vlan-ids:
      type: object
      properties:
        vlan:
          type: array
          description: Device VLAN information
          items:
            type: object
            properties:
              ids:
                type: integer
                description: VLAN ID
      description: An array of VLAN IDs
      example:
        ids:
          - 1
          - 2
          - 3
          - 4
          - 5
    site-information:
      type: object
      properties:
        site_name:
          type: string
          description: Site name
        site_description:
          type: string
          description: Detail description of a site
        severity:
          type: integer
          description: The severity of a site
        status:
          type: boolean
          description: The status of a site. True is online. False is offline.
        site_id:
          type: string
          description: The ID of a site
      description: Site information
    severity:
      type: integer
      description: The severity of the custom event.
    site-playback-status:
      type: object
      properties:
        status:
          type: boolean
          description: True if playack is on. False otherwise
      description: Site playback status
    disk-usage:
      type: object
      properties:
        free:
          type: integer
          description: free size of a disk drive
        size:
          type: integer
          description: total size of a disk drive
        used:
          type: integer
          description: used size of a disk drive
        percent:
          type: number
          description: The percantage of used disk spaces
      description: Disk usage of a drive
      example:
        - diskUsage:
            free: 91411406848
            size: 240704811008
            used: 149293404160
            percent: 0.6202344005290286
          site_id: 190abf25bee24c7c
    syslog-server-status:
      type: object
      properties:
        status:
          type: boolean
          description: True if Syslog server is on. false otherwise
      description: Syslog server status
    modbus-status:
      type: object
      properties:
        status:
          type: boolean
          description: True if Modbus protocol is enable. false otherwise
      description: Modbus protocol status
      example:
        - site_id: 5ea1481c997a99f4
          status: true
    snmpv3_privacy_protocol:
      type: integer
      description: SNMP privacy protocol of the device
    link-information:
      type: object
      properties:
        from_device:
          type: string
          description: >-
            The IP or ID of one end of the devices, the type of from_device
            should be an INTEGER if it is an ID.
        to_device:
          type: string
          description: The ID or IP of the other end device
        from_port:
          type: integer
          description: The link port number of the from device
        to_port:
          type: integer
          description: The link port number of the to device
        group:
          type: integer
          description: Group ID, Optional parameter when adding a link
        use_custom_label:
          type: boolean
          description: the link use customer label
        from_port_label:
          type: string
          description: customer from port label
        to_port_label:
          type: string
          description: customer to port label

      description: Link Object
      example:
        from_device: 192.168.123.152
        from_port: 1
        group: 0
        to_device: 192.168.123.151
        to_port: 2
        use_custom_label: true
        from_port_label: from_port_label
        to_port_label: to_port_label

    custom-opc-tags-with-id:
      type: object
      properties:
        active:
          type: boolean
          description: "True if the custom event is active, false otherwise."
        id:
          type: integer
          description: Tag ID
        name:
          type: string
          description: Tag name
        devices:
          $ref: "#/components/schemas/devices-id"
      description: custom events
    model_definitions:
      type: array
      items:
        type: object
        properties:
          icon_url:
            type: string
            description: icon url of the model
          abstract_type:
            type: boolean
            description: "If the model is generic, abstract_type is true, false otherwise"
          siteId:
            type: string
            description: site id
          oid:
            type: string
            description: The oid of the model
          type:
            type: string
            description: model name
    snmp_username:
      type: string
      description: The username to access SNMP of the device
    get-warranty-res:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
            description: the id of the device
          alias:
            type: string
            description: the alias of the device
          model:
            type: string
            description: the model of the device
          ip:
            type: string
            description: the ip address of the device
          mac_address:
            type: string
            description: the mac address of the device
          firmware_version:
            type: string
            description: the firmware version of the device
          serial_number:
            type: string
            description: the serial number of the device
          warranty_start_date:
            type: integer
            description: |
              warranty start date(unix timestamp)
              * If empty value, the value will be assigned -1.
          warranty_end_date:
            type: integer
            description: |
              warranty end date(unix timestamp)
              * If empty value, the value will be assigned -1.
          channel_extended_end_date:
            type: integer
            description: |
              channel extended end date(unix timestamp)
              * If empty value, the value will be assigned -1.
          warranty_period:
            type: integer
            description: |
              warranty period(months)
              * If empty value, the value will be assigned -1.
          warranty_status:
            type: integer
            description: |
              the current status of warranty
              * 0: (empty value)
              * 1: Active
              * 2: Expired
              * 3: Expire soon
          sysobjid:
            type: string
            description: the sysobjectid of the device
      example:
        # - id: 1
        #   alias: 192.168.127.1--MGate-5111
        #   model: MGate-5111
        #   ip: 192.168.127.1
        #   mac_address: 00:90:E8:86:71:DA
        #   firmware_version: 4.2 Build 20090212
        #   serial_number: TBBCE1042176
        #   warranty_end_date: 1737175199
        #   channel_extended_end_date: 0
        #   # channel_extended_end_date: 1768711199
        #   warranty_period: 365
        #   warranty_status: 1
        # - id: 2
        #   alias: 192.168.127.25--EDS-4012-8P-4GS
        #   model: EDS-4012-8P-4GS
        #   ip: 192.168.127.25
        #   mac_address: 00:90:E8:90:A5:6E
        #   firmware_version: 6.2 Build 20090212
        #   serial_number: TBZKD1010271
        #   # warranty_end_date: 1747543199
        #   warranty_end_year: 2025
        #   warranty_end_month: 5
        #   warranty_end_day: 10
        #   channel_extended_end_year: 2026
        #   channel_extended_end_month: 5
        #   channel_extended_end_day: 10
        #   # channel_extended_end_date: 0
        #   warranty_period: 28
        #   # warranty_status: 3
        #   warranty_status: Active
        - id: 1
          alias: 192.168.127.1--MGate-5111
          model: MGate-5111
          ip: 192.168.127.1
          mac_address: 00:90:E8:86:71:DA
          firmware_version: 4.2 Build 20090212
          serial_number: TBBCE1042176
          warranty_start_date: 1708663860
          warranty_end_date: 1803358260
          channel_extended_end_date: 1834894260
          warranty_period: 61
          warranty_status: 1
          sysobjid: ".1.3.6.1.4.1.8691.7.108"
        - id: 2
          alias: 192.168.127.25--EDS-4012-8P-4GS
          model: EDS-4012-8P-4GS
          ip: 192.168.127.25
          mac_address: 00:90:E8:90:A5:6E
          firmware_version: 6.2 Build 20090212
          serial_number: TBZKD1010271
          warranty_start_date: 982903860
          warranty_end_date: 1203742260
          channel_extended_end_date: -1
          warranty_period: 61
          warranty_status: 2
          sysobjid: ".1.3.6.1.4.1.8691.7.5"
        - id: 3
          alias: 192.168.127.27--EDS-4012-8P-4GS
          model: EDS-4012-8P-4GS
          ip: 192.168.127.27
          mac_address: 00:90:E8:90:A5:8E
          firmware_version: 6.2 Build 20090212
          serial_number: TBZKD1010271
          warranty_start_date: 1582433460
          warranty_end_date: 1708663860
          channel_extended_end_date: -1
          warranty_period: 61
          warranty_status: 3
          sysobjid: ".1.3.6.1.4.1.8691.7.26"
    get-warranty-check-res:
      type: array
      items:
        type: object
        properties:
          mac_address:
            type: string
            description: the mac address of the device
          serial_number:
            type: string
            description: the serial number of the device
          warranty_start_date:
            type: integer
            description: |
              warranty start date(unix timestamp)
              * If empty value, the value will be assigned -1.
          warranty_end_date:
            type: integer
            description: |
              warranty end date(unix timestamp)
              * If empty value, the value will be assigned -1.
          warranty_period:
            type: integer
            description: |
              warranty period(months)
              * If empty value, the value will be assigned -1.
          warranty_status:
            type: string
            description: |
              the current status of warranty
              * 0: (empty value)
              * 1: Active
              * 2: Expired
              * 3: Expire soon
      example:
        - mac_address: 00:90:E8:86:71:DA
          serial_number: TBBCE1042176
          warranty_start_date: 1708663860
          warranty_end_date: 1803358260
          warranty_period: 61
          warranty_status: 1
  responses:
    unauthorizedResponse:
      description: The authorization token is invalid.
      content: {}
    timeoutResponse:
      description: Request timeout.
      content: {}
    forbiddenResponse:
      description: |
        errno:
          * -120: You are authenticated but don't have the right to access the resource
          * -510: The license status of designated sites is invalid
      content: {}
  parameters:
    event-start-time:
      name: start_time
      in: query
      description: Get events happened after start_time
      schema:
        type: string
        format: unix timestamp
    syslog-count:
      name: count
      in: query
      description: Number of recent syslogs you want to get
      required: true
      schema:
        type: integer
        format: integer
    event-count:
      name: count
      in: query
      description: Number of recent events you want to get
      schema:
        type: integer
        format: integer
    event-group-by:
      name: groupBy
      in: query
      description: 'group events by device ip or site, the default value is "device"'
      schema:
        type: string
    syslog-offset:
      name: offset
      in: query
      description: "Skip {offset} syslogs. The offset parameter should be divisible by count"
      schema:
        type: integer
        format: integer
    event-in:
      name: in
      in: query
      description: 'group events by {hour, day, month}, the default value is "day"'
      schema:
        type: string
    event-acked:
      name: acked
      in: query
      description: Get acked or unacked events
      schema:
        type: boolean
        format: ""
    site-event-type:
      name: type
      in: query
      description: the type of a site event
      schema:
        type: integer
        enum:
          - 1
          - 65537
    event-security:
      name: security_event
      in: query
      description: Get security events
      schema:
        type: boolean
        format: ""
    event-detector:
      name: detector
      in: query
      description: Get MXview One detected events or trap events
      schema:
        type: integer
        format: integer. 1. MXview One Server 2. Trap
    syslog-start-time:
      name: start_time
      in: query
      description: Get syslogs happened after start_time
      schema:
        type: string
        format: unix timestamp
    severity_threshold_type:
      name: severity_threshold_type
      in: query
      description: "Severity threshold type (0: >, 1: =, 2: <)"
      schema:
        type: integer
    syslog-source-ip:
      name: source_ip
      in: query
      description: Get syslogs of a device indicated by its IP address
      schema:
        type: string
        format: IP string
    event-source-ip:
      name: source_ip
      in: query
      description: Get events of a device indicated by its IP address
      schema:
        type: string
        format: IP string
    siteId:
      name: siteId
      in: path
      description: site name
      required: true
      schema:
        type: string
        format: string
    event-end-time:
      name: end_time
      in: query
      description: Get events happened before end_time
      schema:
        type: string
        format: unix timestamp
    event-offset:
      name: offset
      in: query
      description: "Skip {offset} events. The offset parameter should be divisible by count"
      schema:
        type: integer
        format: integer
    event-severity:
      name: severity
      in: query
      description: Get events of severity
      schema:
        type: string
        format: "1: information / 2: warning / 3: critical / 4: system"
    syslog-end-time:
      name: end_time
      in: query
      description: Get syslogs happened before end_time
      schema:
        type: string
        format: unix timestamp
    syslog-severity:
      name: severity
      in: query
      description: >-
        Syslog severity (0: Emergency, 1: Alert, 2: Critical, 3: Error, 4:
        Warning, 5: Notice, 6: Informational, 7: Debug)
      schema:
        type: integer
    event-group:
      name: groups
      in: query
      description: Get events of a group by group id
      schema:
        type: integer
        format: integer
  requestBodies:
    device-trap-settings-parameters:
      description: An Array of trap server settings
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/device-trap-settings"
        multipart/form-data:
          schema:
            $ref: "#/components/schemas/device-trap-settings"
      required: true
    device-snmp-system-information-set:
      description: snmp system information
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: integer
                description: device ID
              sysName:
                type: string
                description: the sysname of a device
              sysContact:
                type: string
                description: the sysContact of a device
              sysLocation:
                type: string
                description: the sysLocation of a device
            description: snmp system information
            example:
              id: 1
              sysName: example sysName
              sysContact: example sysContact
              sysLocation: example sysLocation
        multipart/form-data:
          schema:
            type: object
            properties:
              id:
                type: integer
                description: device ID
              sysName:
                type: string
                description: the sysname of a device
              sysContact:
                type: string
                description: the sysContact of a device
              sysLocation:
                type: string
                description: the sysLocation of a device
            description: snmp system information
            example:
              id: 1
              sysName: example sysName
              sysContact: example sysContact
              sysLocation: example sysLocation
      required: true
    device-set-parameters:
      description: >-
        An object of device parameters. Parameters inside the device parameter
        object are optional.
      content:
        application/json:
          schema:
            type: object
            properties:
              auto_detect_model:
                type: boolean
                description: >-
                  Set to true to auto detect device model. Undefined or false
                  means assigning model by oid
              sysobjid:
                type: string
                description: Device sysobjid. Empty means ICMP device
              alias:
                type: string
                description: Device alias
              group:
                type: integer
                description: Group ID
              x:
                type: integer
                description: X-coordinate
              "y":
                type: integer
                description: Y-coordinate
              use_global_account:
                type: boolean
                description: >-
                  Set to true to use global account to access the device. False
                  or undefined to access the device by an independent account
              username:
                type: string
                description: The username used for accessing the device
              password:
                type: string
                description: The password used for accessing the device
              snmp_version:
                $ref: "#/components/schemas/snmp_version"
              snmpv3_security_level:
                $ref: "#/components/schemas/snmpv3_security_level"
              snmpv3_authentication_type:
                $ref: "#/components/schemas/snmpv3_authentication_type"
              snmpv3_privacy_protocol:
                $ref: "#/components/schemas/snmpv3_privacy_protocol"
              read_community:
                $ref: "#/components/schemas/read_community"
              write_community:
                $ref: "#/components/schemas/write_community"
              snmp_username:
                $ref: "#/components/schemas/snmp_username"
              snmp_password:
                $ref: "#/components/schemas/snmp_password"
              snmpv3_encryption_key:
                $ref: "#/components/schemas/snmpv3_encryption_key"
              icmp_polling_interval:
                $ref: "#/components/schemas/icmp_polling_interval"
              snmp_polling_interval:
                $ref: "#/components/schemas/snmp_polling_interval"
              icmp_unreachable_warning_threshold:
                $ref: "#/components/schemas/icmp_unreachable_warning_threshold"
              snmp_unreachable_warning_threshold:
                $ref: "#/components/schemas/snmp_unreachable_warning_threshold"
              polling_ip:
                $ref: "#/components/schemas/polling_ip"
            description: Device Parameter Object
            example:
              model: EDS-G516E
              sysobjid: 1.3.6.1.4.1.8691.7.7
              alias: Example alias
        multipart/form-data:
          schema:
            type: object
            properties:
              auto_detect_model:
                type: boolean
                description: >-
                  Set to true to auto detect device model. Undefined or false
                  means assigning model by oid
              sysobjid:
                type: string
                description: Device sysobjid. Empty means ICMP device
              alias:
                type: string
                description: Device alias
              group:
                type: integer
                description: Group ID
              x:
                type: integer
                description: X-coordinate
              "y":
                type: integer
                description: Y-coordinate
              use_global_account:
                type: boolean
                description: >-
                  Set to true to use global account to access the device. False
                  or undefined to access the device by an independent account
              username:
                type: string
                description: The username used for accessing the device
              password:
                type: string
                description: The password used for accessing the device
              snmp_version:
                $ref: "#/components/schemas/snmp_version"
              snmpv3_security_level:
                $ref: "#/components/schemas/snmpv3_security_level"
              snmpv3_authentication_type:
                $ref: "#/components/schemas/snmpv3_authentication_type"
              snmpv3_privacy_protocol:
                $ref: "#/components/schemas/snmpv3_privacy_protocol"
              read_community:
                $ref: "#/components/schemas/read_community"
              write_community:
                $ref: "#/components/schemas/write_community"
              snmp_username:
                $ref: "#/components/schemas/snmp_username"
              snmp_password:
                $ref: "#/components/schemas/snmp_password"
              snmpv3_encryption_key:
                $ref: "#/components/schemas/snmpv3_encryption_key"
              icmp_polling_interval:
                $ref: "#/components/schemas/icmp_polling_interval"
              snmp_polling_interval:
                $ref: "#/components/schemas/snmp_polling_interval"
              icmp_unreachable_warning_threshold:
                $ref: "#/components/schemas/icmp_unreachable_warning_threshold"
              snmp_unreachable_warning_threshold:
                $ref: "#/components/schemas/snmp_unreachable_warning_threshold"
              polling_ip:
                $ref: "#/components/schemas/polling_ip"
            description: Device Parameter Object
            example:
              model: EDS-G516E
              sysobjid: 1.3.6.1.4.1.8691.7.7
              alias: Example alias
      required: true
    device-ignored:
      description: Device ID
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: integer
                description: Device ID
            description: Device ID
        multipart/form-data:
          schema:
            type: object
            properties:
              id:
                type: integer
                description: Device ID
            description: Device ID
      required: true
    all-device-trap-settings:
      description: Trap parameter object
      content:
        application/json:
          schema:
            type: object
            properties:
              ip:
                type: string
                description: The IP address of a trap server. Could be empty.
              community:
                type: string
                description: The community string of a trap server. Could be empty
            description: snmp system information
            example:
              ip: 192.168.127.254
              community: public
        multipart/form-data:
          schema:
            type: object
            properties:
              ip:
                type: string
                description: The IP address of a trap server. Could be empty.
              community:
                type: string
                description: The community string of a trap server. Could be empty
            description: snmp system information
            example:
              ip: 192.168.127.254
              community: public
      required: false
    port-enable-parameters:
      description: An array of port enable objects.
      content:
        application/json:
          schema:
            type: array
            description: Port enable objects
            example:
              - index: 1
                enable: true
              - index: 2
                enable: false
            items:
              type: object
              properties:
                enable:
                  type: boolean
                  description: true to enable this port; false otherwise
                index:
                  type: integer
                  description: port index
        multipart/form-data:
          schema:
            type: array
            description: Port enable objects
            example:
              - index: 1
                enable: true
              - index: 2
                enable: false
            items:
              type: object
              properties:
                enable:
                  type: boolean
                  description: true to enable this port; false otherwise
                index:
                  type: integer
                  description: port index
      required: true
    auto-topology:
      description: Parameters for auto topology
      content:
        application/json:
          schema:
            type: object
            properties:
              advanced:
                type: boolean
                description: Analyze your arp table if it is set to true
            description: Parameters used for Auto Topology
        multipart/form-data:
          schema:
            type: object
            properties:
              advanced:
                type: boolean
                description: Analyze your arp table if it is set to true
            description: Parameters used for Auto Topology
      required: true
    port-name-parameters:
      description: An array of port name objects.
      content:
        application/json:
          schema:
            type: array
            description: Port name objects
            example:
              - index: 1
                name: Port 1 Name
              - index: 2
                name: Port 2 Name
            items:
              type: object
              properties:
                name:
                  type: string
                  description: port name
                index:
                  type: integer
                  description: port index
        multipart/form-data:
          schema:
            type: array
            description: Port name objects
            example:
              - index: 1
                name: Port 1 Name
              - index: 2
                name: Port 2 Name
            items:
              type: object
              properties:
                name:
                  type: string
                  description: port name
                index:
                  type: integer
                  description: port index
      required: true
    scan-range:
      description: A scan-range object
      content:
        application/json:
          schema:
            type: array
            description: Scan Range object
            example:
              - start: 192.168.127.1
                end: 192.168.127.254
                group_id: 0
                name: Sample scan range 1
                active: true
              - start: 192.168.128.1
                end: 192.168.128.254
                group_id: 0
                name: Sample scan range 2
                active: false
            items:
              type: object
              properties:
                group_id:
                  type: integer
                  description: The ID of the group this scan range lives in
                start:
                  type: string
                  description: The first IP Address of the scan range
                name:
                  type: string
                  description: The name of the scan range
                active:
                  type: boolean
                  description: Is this scan range active?
                end:
                  type: string
                  description: The last IP Address of the scan range
        multipart/form-data:
          schema:
            type: array
            description: Scan Range object
            example:
              - start: 192.168.127.1
                end: 192.168.127.254
                group_id: 0
                name: Sample scan range 1
                active: true
              - start: 192.168.128.1
                end: 192.168.128.254
                group_id: 0
                name: Sample scan range 2
                active: false
            items:
              type: object
              properties:
                group_id:
                  type: integer
                  description: The ID of the group this scan range lives in
                start:
                  type: string
                  description: The first IP Address of the scan range
                name:
                  type: string
                  description: The name of the scan range
                active:
                  type: boolean
                  description: Is this scan range active?
                end:
                  type: string
                  description: The last IP Address of the scan range
      required: true
    device-parameters:
      description: An object of device parameters
      content:
        application/json:
          schema:
            type: object
            properties:
              group:
                type: integer
                description: The ID of group this devices would be added to
              addMode:
                type: integer
                description: The type of device adding mode
              sysobjid:
                type: string
                description: The sysobjid of the added device. Empty means auto detect
              username:
                type: string
                description: The username to login the device
              password:
                type: string
                description: The password to login the device
              snmp_version:
                $ref: "#/components/schemas/snmp_version"
              snmpv3_security_level:
                $ref: "#/components/schemas/snmpv3_security_level"
              snmpv3_authetication_type:
                $ref: "#/components/schemas/snmpv3_authentication_type"
              read_community:
                $ref: "#/components/schemas/read_community"
              write_community:
                $ref: "#/components/schemas/write_community"
              snmp_username:
                $ref: "#/components/schemas/snmp_username"
              snmp_password:
                $ref: "#/components/schemas/snmp_password"
              snmpv3_privacy_protocol:
                $ref: "#/components/schemas/snmpv3_privacy_protocol"
              snmpv3_encryption_key:
                $ref: "#/components/schemas/snmpv3_encryption_key"
              x:
                $ref: "#/components/schemas/x"
              "y":
                $ref: "#/components/schemas/y"
              model:
                type: string
                description: >-
                  The model name of the device. If auto_detect_model is true,
                  model must be an empty string or undefined
              auto_detect_model:
                type: boolean
                description: >-
                  Set to True to auto detect device model. model and sysobjid
                  must be empty strings or undefined if it is true
            description: Device Parameter Object
            example:
              group: 0
              addMode: 0
              sysobjid: 1.3.6.1.4.1.8691.7.7
              username: admin
              password: moxa
              snmp_version: 1
              snmp_security_level: 1
              snmpv3_authentication_type: 1
              read_community: public
              write_community: private
              snmp_username: admin
              snmp_password: moxa
              snmpv3_privacy_protocol: 1
              snmpv3_encryption_key: "12345678"
              x: 100
              "y": 100
              model: EDS-504A
        multipart/form-data:
          schema:
            type: object
            properties:
              group:
                type: integer
                description: The ID of group this devices would be added to
              addMode:
                type: integer
                description: The type of device adding mode
              sysobjid:
                type: string
                description: The sysobjid of the added device. Empty means auto detect
              username:
                type: string
                description: The username to login the device
              password:
                type: string
                description: The password to login the device
              snmp_version:
                $ref: "#/components/schemas/snmp_version"
              snmpv3_security_level:
                $ref: "#/components/schemas/snmpv3_security_level"
              snmpv3_authetication_type:
                $ref: "#/components/schemas/snmpv3_authentication_type"
              read_community:
                $ref: "#/components/schemas/read_community"
              write_community:
                $ref: "#/components/schemas/write_community"
              snmp_username:
                $ref: "#/components/schemas/snmp_username"
              snmp_password:
                $ref: "#/components/schemas/snmp_password"
              snmpv3_privacy_protocol:
                $ref: "#/components/schemas/snmpv3_privacy_protocol"
              snmpv3_encryption_key:
                $ref: "#/components/schemas/snmpv3_encryption_key"
              x:
                $ref: "#/components/schemas/x"
              "y":
                $ref: "#/components/schemas/y"
              model:
                type: string
                description: >-
                  The model name of the device. If auto_detect_model is true,
                  model must be an empty string or undefined
              auto_detect_model:
                type: boolean
                description: >-
                  Set to True to auto detect device model. model and sysobjid
                  must be empty strings or undefined if it is true
            description: Device Parameter Object
            example:
              group: 0
              addMode: 0
              sysobjid: 1.3.6.1.4.1.8691.7.7
              username: admin
              password: moxa
              snmp_version: 1
              snmp_security_level: 1
              snmpv3_authentication_type: 1
              read_community: public
              write_community: private
              snmp_username: admin
              snmp_password: moxa
              snmpv3_privacy_protocol: 1
              snmpv3_encryption_key: "12345678"
              x: 100
              "y": 100
              model: EDS-504A
      required: true
  securitySchemes:
    Bearer:
      type: apiKey
      name: Authorization
      in: header
  examples:
    EventLogTop:
      summary: An event Log
      value:
        data:
          - name: "5555"
            value: 1024
          - name: "6666"
            value: 512

    EventLogStatistic:
      summary: event log amount by time
      value:
        name: "firewallLog"
        data:
          - time: "2024-03-20T10:00:00Z"
            count: 1024
          - time: "2024-03-20T11:00:00Z"
            count: 512

    AuditLogDistinctList:
      summary: Log distinct information
      value:
        data:
          event:
            - category: "System"
              event:
                - "Login Success"
                - "Login Failure"
                - "Account Created"
            - category: "Management"
              event:
                - "Group Created"
                - "Group Deleted"
            - category: "Operation"
              event:
                - "Device Added"
                - "Device Deleted"
          severity:
            - "Emergency"
            - "Alert"
            - "Critical"
            - "Error"

    FirewallDistinctList:
      summary: Log distinct information
      value:
        data:
          event:
            - category: "System"
              event:
                - "Login Success"
                - "Login Failure"
                - "Account Created"
            - category: "Management"
              event:
                - "Group Created"
                - "Group Deleted"
            - category: "Operation"
              event:
                - "Device Added"
                - "Device Deleted"
          severity:
            - "Emergency"
            - "Alert"
            - "Critical"
            - "Error"

    VpnDistinctList:
      summary: Log distinct information
      value:
        data:
          event:
            - category: "System"
              event:
                - "Login Success"
                - "Login Failure"
                - "Account Created"
            - category: "Management"
              event:
                - "Group Created"
                - "Group Deleted"
            - category: "Operation"
              event:
                - "Device Added"
                - "Device Deleted"
          severity:
            - "Emergency"
            - "Alert"
            - "Critical"
            - "Error"

    DeviceLogDistinctList:
      summary: Log distinct information
      value:
        data:
          event:
            - category: "System"
              event:
                - "Login Success"
                - "Login Failure"
                - "Account Created"
            - category: "Management"
              event:
                - "Group Created"
                - "Group Deleted"
            - category: "Operation"
              event:
                - "Device Added"
                - "Device Deleted"
          severity:
            - "Emergency"
            - "Alert"
            - "Critical"
            - "Error"

    AuditEventLogList:
      summary: Event log list
      value:
        count: 1
        data:
          - id: 963
            category: "system"
            severity: "info"
            eventId: 11001
            event: "ota"
            eventAt: "2020-02-27T02:45:19.729041Z"
            message: "Successfully created"
            createdAt: "2020-02-27T02:45:19.729041Z"
            deviceId: "07cf6343-9161-4e31-a7e5-f668217287bb"
            hostname: "hostname"
            userId: "1689f5db-18a7-40b4-bc43-99e1cc4d9328"
            username: "test"
            groupId: 1
            groupName: "test"
        limit: 500
        offset: 0

    VpnEventLogList:
      summary: Event log list
      value:
        count: 1
        data:
          - id: 963
            category: "system"
            severity: "info"
            event: "ota"
            eventAt: "2020-02-27T02:45:19.729041Z"
            message: "Successfully created"
            createdAt: "2020-02-27T02:45:19.729041Z"
            createdTime: 1640537476
            deviceId: "07cf6343-9161-4e31-a7e5-f668217287bb"
            hostname: "hostname"
            groupId: 1
            groupName: "test"
            protocol: "TCP"
            srcPort: 5000
            dstPort: 8000
            srcIp: "192.168.100.100"
            dstIp: "192.168.100.200"
            from: "LAN"
            to: "WAN"
            vlanId: 1
            action: "pass"
        limit: 500
        offset: 0

    FirewallEventLogList:
      summary: Event log list
      value:
        count: 1
        data:
          - id: 963
            category: "system"
            severity: "info"
            event: "ota"
            eventAt: "2020-02-27T02:45:19.729041Z"
            message: "Successfully created"
            createdAt: "2020-02-27T02:45:19.729041Z"
            createdTime: 1640537476
            deviceId: "07cf6343-9161-4e31-a7e5-f668217287bb"
            hostname: "hostname"
            groupId: 1
            groupName: "test"
            protocol: "TCP"
            srcPort: 5000
            dstPort: 8000
            srcIp: "192.168.100.100"
            dstIp: "192.168.100.200"
            from: "LAN"
            to: "WAN"
            vlanId: 1
            action: "pass"
        limit: 500
        offset: 0

    DeviceEventLogList:
      summary: Event log list
      value:
        count: 1
        data:
          - id: 963
            category: "system"
            severity: "info"
            eventId: 11001
            event: "ota"
            eventAt: "2020-02-27T02:45:19.729041Z"
            message: "Successfully created"
            createdAt: "2020-02-27T02:45:19.729041Z"
            deviceId: "07cf6343-9161-4e31-a7e5-f668217287bb"
            hostname: "hostname"
            userId: "1689f5db-18a7-40b4-bc43-99e1cc4d9328"
            username: "test"
            groupId: 1
            groupName: "test"
        limit: 500
        offset: 0

    PackageInfo:
      summary: Package information
      value:
        data:
          description: test
          packageId: 11
          name: IPS
          version: V1.10
          supportModelSeries:
            - EDR-G9010
          info:
            - "Session Control"
            - "L3 Policy"
            - "Modbus Firewall"
            - "DNP3 Firewall"
            - "MMS Firewall"
            - "IPS"
          buildAt: 2019-03-08T08:44:13.425Z
          buildTime: 1620021809
          profileInUse:
            refCnt: 3
            refContent:
              - refList:
                  - "test"
          scheduleInUse:
            refCnt: 3
            refContent:
              - hostname: test
                deviceId: 4b4f1ab2-18ac-483e-aedd-2aaeb2dabd59

    PackageUpdate:
      summary: Package response
      value:
        description: test

    PackageRemove:
      summary: Removed package id list
      value:
        packageIdList:
          - 1

    PackageRes:
      summary: Package response
      value:
        data:
          description: test
          packageId: 11
          name: IPS
          version: 1.10
          supportModelSeries:
            - EDR-G9010
          info:
            - Session Control
            - L3 Policy
            - Modbus Firewall
            - DNP3 Firewall
            - MMS Firewall
            - IPS
          buildAt: 2019-03-08T08:44:13.425Z
          buildTime: 1620021809
          profileInUse:
            refCnt: 3
            refContent:
              - refList:
                  - test
          scheduleInUse:
            refCnt: 3
            refContent:
              - hostname: test
                deviceId: 4b4f1ab2-18ac-483e-aedd-2aaeb2dabd59

    PackageMemoRes:
      summary: Package memo response
      value:
        data:
          packageId: 11
          memo:
            meta: {}
            en-US: {}
            default:
              janusIpsCmd:
                ipsAcceptEnable:
                  - 1134391
                  - 1135371
                  - 1136859
                ipsAcceptDisable: []
                ipsMonitorEnable:
                  - 4026531851
                  - 1052848
                  - 1059684
                ipsMonitorDisable: []
                ipsResetEnable: []
                ipsResetDisable:
                  - 1132605
                  - 1133189
                  - 1133717

    PackageList:
      summary: Package list
      value:
        data:
          - description: test
            packageId: 11
            name: IPS
            version: 1.10
            supportModelSeries:
              - EDR-G9010
              - EDR-G9011
            info:
              - Session Control
              - L3 Policy
              - Modbus Firewall
              - DNP3 Firewall
              - MMS Firewall
              - IPS
            buildAt: 2019-03-08T08:44:13.425Z
            buildTime: 1620021809
            profileInUse:
              refCnt: 3
              refContent:
                - refList:
                    - test
            scheduleInUse:
              refCnt: 3
              refContent:
                - hostname: test
                  deviceId: 4b4f1ab2-18ac-483e-aedd-2aaeb2dabd59
    DeviceSchedulePatch:
      summary: Device Schedule
      value:
        deviceIdList:
          - 4b4f1ab2-18ac-483e-aedd-2aaeb2dabd59
        schedule:
          action: profile
          content:
            mode: weekly
            dayOfWeek:
              - 1
              - 2
            time: 19:10
    DeviceScheduleRes:
      summary: Device Schedule response
      value:
        data:
          deviceIdList:
            - 4b4f1ab2-18ac-483e-aedd-2aaeb2dabd59
          schedule:
            action: firmware
            content:
              mode: weekly
              dayOfWeek:
                - 1
                - 2
              time: 19:10
            payload:
              firmwareId: 1
              version: V1.1
    DeviceScheduleRemove:
      summary: Remove Device schedule
      value:
        deviceIdList:
          - 4b4f1ab2-18ac-483e-aedd-2aaeb2dabd59
        action: profile

    DeviceScheduleRemoveRes:
      summary: Remove Device schedule
      value:
        data:
          deviceIdList:
            - 4b4f1ab2-18ac-483e-aedd-2aaeb2dabd59
          action: profile
    DevicePackage:
      summary: Device package job
      value:
        deviceIdList:
          - 4b4f1ab2-18ac-483e-aedd-2aaeb2dabd59
        action: package
        payload:
          packageId: 1
    DeviceProfile:
      summary: Device profile job
      value:
        deviceIdList:
          - 4b4f1ab2-18ac-483e-aedd-2aaeb2dabd59
        action: profile
        payload:
          profileId: 1
    DeviceJobRes:
      summary: Device job response
      value:
        data:
          message: successfully created
    DeviceJobProfileRes:
      summary: Device profile job response
      value:
        data:
          message: successfully created
          profileAppliedAt: 2019-02-26T14:10:33:000Z
          profileUpdatedAt: 2019-02-26T14:10:33:000Z
          applyProfile: test-3

    SupportSeries:
      summary: support model series
      value:
        data:
          supportSeriesList:
            - "EDF-G1002"
            - "EDR-8010"
            - "EDR-G9004"
            - "EDR-G9010"
            - "TN-4900"

    Status:
      summary: last update status
      value:
        data:
          checkPackage: true
          lastTime: "2024-01-30T16:20:25.071311Z"
          result:
            package:
              message: "1/1 file downloaded"
              mode: "manually"
              time: "2024-01-30T16:43:39.855115Z"
          status: true

    PackageDict:
      summary: lastest packages of each modelSeries
      value:
        max: 128
        current: 5
        data:
          EDR-G9010:
            - id: "bbe3ccc0-2446-4af8-bf4a-6eea1d29da1d"
              version: "8.0.12"
              downloadUrl: "https://files.moxa-srs.thingsprocloud.com/package/S000000001/a106c1e3-dad3-4ce4-8955-760827b1edfb/moxa-edr-g9010-series-network-security-package-v8.0.12.pkg"
              releaseNote:
                approach: ""
                change: "N/A"
                enhancement: "1. Updated the IPS pattern version to v1.059"
                feature: "N/A"
                fix: "N/A"
                impact: ""
                note: ""
                risk: ""
                verification: ""
                releaseTime: "2024-01-16T22:27:53.257000Z"
                supportedOS:
                  - "None"
                applicableProduct:
                  - "EDR-G9010 Series"
          EDR-8010: []

    PackageDownload:
      summary: download packages of specific modelSeries
      value:
        data:
          EDR-G9010:
            - version: "8.0.12"
              downloadUrl: "https://files.moxa-srs.thingsprocloud.com/package/S000000001/a106c1e3-dad3-4ce4-8955-760827b1edfb/moxa-edr-g9010-series-network-security-package-v8.0.12.pkg"
              releaseNote:
                approach: ""
                change: "N/A"
                enhancement: "1. Updated the IPS pattern version to v1.059"
                feature: "N/A"
                fix: "N/A"
                impact: ""
                note: ""
                risk: ""
                verification: ""
                releaseTime: "2024-01-16T22:27:53.257000Z"
                supportedOS:
                  - "None"
                applicableProduct:
                  - "EDR-G9010 Series"
          EDR-8010: []

    Settings:
      summary: setting of auto download
      value:
        data:
          modelSeries:
            - EDR-G9010
            - EDR-8010
            - OnCell-G4302
          schedule:
            mode: "daily"
            time: "17:05"
            dayOfWeek:
              - 1
              - 3
              - 5
            startDate: "2024-01-02"
            endDate: "2024-03-20"
          sync: true

    SettingsBody:
      summary: setting of auto download
      value:
        modelSeries:
          - TN-4900
        schedule:
          mode: "daily"
          time: "17:05"
          dayOfWeek:
            - 2
            - 4
          startDate: "2024-01-02"
          endDate: "2024-03-20"
        sync: true

    Interface:
      summary: Interface information
      value:
        interfaceId: 1
        name: test
        info:
          name: test
          mode: VLAN
          value: 10
        objectInUse:
          refCnt: 3
          refContent:
            - refName: "test"
              index:
                - name: "L3L7"
                  index:
                    - 1
                    - 2
                - name: "SC"
                  index:
                    - 1
                    - 2

    InterfaceRes:
      summary: Interface information response
      value:
        data:
          interfaceId: 1
          name: test
          info:
            name: test
            type: BRIDGE
            value: zone
          objectInUse:
            refCnt: 3
            refName:
              - refName: "test"
                refList:
                  - name: "L3L7"
                    index:
                      - 1
                      - 2
                  - name: "SC"
                    index:
                      - 1
                      - 2

    InterfaceList:
      summary: Interface list
      value:
        max: 32
        data:
          - interfaceId: 1
            name: test
            info:
              name: test
              type: BRIDGE
              value: zone
            objectInUse:
              refCnt: 3
              refContent:
                - refName: "test"
                  refList:
                    - name: "L3L7"
                      index:
                        - 1
                        - 2
                    - name: "SC"
                      index:
                        - 1
                        - 2

    InterfaceRemove:
      summary: Interface list
      value:
        interfaceIdList:
          - 1
    InterfaceCreate:
      summary: create new interface
      value:
        info:
          name: test
          mode: BRIDGE
          value: zone
    InterfaceUpdate:
      summary: update interface
      value:
        info:
          name: test
          mode: BRIDGE
          value: zone
    Object:
      summary: Object information
      value:
        objectId: 1
        name: moxa
        info:
          a: b
        profileInUse:
          refCnt: 3
          refContent:
            - refName: test
              refList:
                - name: L3L7
                  index:
                    - 1
                    - 2
                - name: SC
                  index:
                    - 1
                    - 2
    ObjectRes:
      summary: Object information response
      value:
        data:
          objectId: 1
          name: moxa
          info:
            a: b
          profileInUse:
            refCnt: 3
            refContent:
              - refName: "test"
                refList:
                  - name: "L3L7"
                    index:
                      - 1
                      - 2
                  - name: "SC"
                    index:
                      - 1
                      - 2

    ObjectList:
      summary: Object list
      value:
        max: 32
        data:
          - objectId: 1
            name: moxa
            info:
              a: b
            profileInUse:
              refCnt: 3
              refContent:
                - refName: "test"
                  refList:
                    - name: "L3L7"
                      index:
                        - 1
                        - 2
                    - name: "SC"
                      index:
                        - 1
                        - 2

    ObjectRemove:
      summary: Object list
      value:
        objectIdList:
          - a1be69eb-258e-4c66-b07b-583474e57305

    ObjectCreate:
      summary: create new object
      value:
        info:
          exist: 1
          invisible: 0
          name: "Custom Mosh"
          uuid: ""
          obj_type: 2
          addr_type_bmp: 0
          addr_mac: "00:00:00:00:00:00"
          addr_ip_type: 0
          addr_ip_start: "0.0.0.0"
          addr_ip_end: "0.0.0.0"
          addr_ip_mask: "0.0.0.0"
          serv_type_bmp: 16
          serv_ethertype: 0
          serv_ipproto: 17
          icmp_type: 0
          icmp_code: 0
          l4port_type: 0
          l4port_start: 60001
          l4port_end: 60999
          list: []

    ObjectUpdate:
      summary: update object
      value:
        info:
          exist: 1
          invisible: 0
          name: "Custom Mosh"
          uuid: "07cf6343-9161-4e31-a7e5-f668217287bb"
          obj_type: 2
          addr_type_bmp: 0
          addr_mac: "00:00:00:00:00:00"
          addr_ip_type: 0
          addr_ip_start: "0.0.0.0"
          addr_ip_end: "0.0.0.0"
          addr_ip_mask: "0.0.0.0"
          serv_type_bmp: 16
          serv_ethertype: 0
          serv_ipproto: 17
          icmp_type: 0
          icmp_code: 0
          l4port_type: 0
          l4port_start: 60001
          l4port_end: 60999
          list: []

    NameExist:
      summary: check name exists or not
      value:
        data:
          isExist: true

    ObjectTable:
      summary: 0bject table info
      value:
        SRV_OBJ_INDU_APP_Table:
          - exist: 1
            invisible: 1
            name: All
            uuid: 7eb837fc-b2af-4801-a1b6-69b02f7f046e
            obj_type: 0
            addr_type_bmp: 0
            addr_mac: 00:00:00:00:00:00
            addr_ip_type: 0
            addr_ip_start: 0.0.0.0
            addr_ip_end: 0.0.0.0
            addr_ip_mask: 0.0.0.0
            serv_type_bmp: 0
            serv_ethertype: 0
            serv_ipproto: 0
            icmp_type: 0
            icmp_code: 0
            l4port_type: 0
            l4port_start: 0
            l4port_end: 0
            list: []
          - exist: 1
            invisible: 0
            name: Modbus
            uuid: f3bcac95-7643-404c-84d2-50c5b534878e
            obj_type: 0
            addr_type_bmp: 0
            addr_mac: 00:00:00:00:00:00
            addr_ip_type: 0
            addr_ip_start: 0.0.0.0
            addr_ip_end: 0.0.0.0
            addr_ip_mask: 0.0.0.0
            serv_type_bmp: 0
            serv_ethertype: 0
            serv_ipproto: 0
            icmp_type: 0
            icmp_code: 0
            l4port_type: 0
            l4port_start: 0
            l4port_end: 0
            list: []
          - exist: 1
            invisible: 1
            name: Modbus-TCP
            uuid: 2a0a03f8-d153-4525-920e-e67b043d40c4
            obj_type: 2
            addr_type_bmp: 0
            addr_mac: 00:00:00:00:00:00
            addr_ip_type: 0
            addr_ip_start: 0.0.0.0
            addr_ip_end: 0.0.0.0
            addr_ip_mask: 0.0.0.0
            serv_type_bmp: 8
            serv_ethertype: 0
            serv_ipproto: 6
            icmp_type: 0
            icmp_code: 0
            l4port_type: 0
            l4port_start: 502
            l4port_end: 0
            list: []
          - exist: 1
            invisible: 1
            name: Modbus-UDP
            uuid: 0d201d8c-a50f-4dc9-b7a5-5aa13ccf8eed
            obj_type: 2
            addr_type_bmp: 0
            addr_mac: 00:00:00:00:00:00
            addr_ip_type: 0
            addr_ip_start: 0.0.0.0
            addr_ip_end: 0.0.0.0
            addr_ip_mask: 0.0.0.0
            serv_type_bmp: 16
            serv_ethertype: 0
            serv_ipproto: 17
            icmp_type: 0
            icmp_code: 0
            l4port_type: 0
            l4port_start: 502
            l4port_end: 0
            list: []
        SRV_OBJ_NET_SERV_Table:
          - exist: 1
            invisible: 1
            name: All
            uuid: ec8aa441-4bda-4eed-b0b8-97b49825a1bb
            obj_type: 0
            addr_type_bmp: 0
            addr_mac: 00:00:00:00:00:00
            addr_ip_type: 0
            addr_ip_start: 0.0.0.0
            addr_ip_end: 0.0.0.0
            addr_ip_mask: 0.0.0.0
            serv_type_bmp: 0
            serv_ethertype: 0
            serv_ipproto: 0
            icmp_type: 0
            icmp_code: 0
            l4port_type: 0
            l4port_start: 0
            l4port_end: 0
            list:
              - uuid_entry: 51a38994-140c-4b4c-9123-32a700063e8a
              - uuid_entry: df9a7df7-925a-4ba2-987f-ef6550aee421
          - exist: 1
            invisible: 0
            name: Remote-Access
            uuid: 51a38994-140c-4b4c-9123-32a700063e8a
            obj_type: 0
            addr_type_bmp: 0
            addr_mac: 00:00:00:00:00:00
            addr_ip_type: 0
            addr_ip_start: 0.0.0.0
            addr_ip_end: 0.0.0.0
            addr_ip_mask: 0.0.0.0
            serv_type_bmp: 0
            serv_ethertype: 0
            serv_ipproto: 0
            icmp_type: 0
            icmp_code: 0
            l4port_type: 0
            l4port_start: 0
            l4port_end: 0
            list:
              - uuid_entry: 9c4639bd-812d-4340-9822-e8182c753388
              - uuid_entry: 17f4939c-116c-4e29-8094-506205d592a0
              - uuid_entry: 70972d0d-8c02-4eeb-b9c4-4c799b6f35ab
        SRV_OBJ_TableType:
          exist: 4
          invisible: 4
          name: 4
          uuid: 4
          obj_type: 4
          addr_type_bmp: 4
          addr_mac: 4
          addr_ip_type: 4
          addr_ip_start: 5
          addr_ip_end: 5
          addr_ip_mask: 5
          serv_type_bmp: 4
          serv_ethertype: 4
          serv_ipproto: 4
          icmp_type: 4
          icmp_code: 4
          l4port_type: 4
          l4port_start: 4
          l4port_end: 4
          list:
            uuid_entry: 4
    PolicyList:
      summary: Policy list information
      value:
        - global:
            enabled: 1
            default_action: 0
            logging: 0
          setting:
            - exist: 1
              idx: 2
              enabled: 0
              name: ""
              desc: ""
              log_enabled: 0
              log_severity: 4
              log_dest_bmp: 4
              filter_mode: 0
              iface_in: 2
              iface_out: 5
              mac_src: "00:00:00:00:00:00"
              ip_src: "d9afab96-0ce0-4dcd-829f-0b9449b4f1f7"
              ip_dst: "3f1b3ecb-7f96-454a-911a-5062fc3c265d"
              port_src: ""
              port_dst: ""
              action: 1

    IPSInfo:
      summary: IPS information
      value:
        setting:
          janusIpsCmd:
            ipsAcceptEnable:
              - 1134391
              - 1135371
              - 1136859
            ipsAcceptDisable: []
            ipsMonitorEnable:
              - 4026531851
              - 1052848
              - 1059684
            ipsMonitorDisable: []
            ipsResetEnable: []
            ipsResetDisable:
              - 1132605
              - 1133189
              - 1133717

    DoSInfo:
      summary: Dos information
      value:
        setting:
          enabled: 1
    Profile:
      summary: Profile information
      value:
        profileId: 1
        name: test
        description: test
        ngfw:
          - category: "L3L7"
            value:
              global:
                enabled: 1
                default_action: 0
                logging: 0
              setting:
                - exist: 1
                  idx: 2
                  enabled: 0
                  name: ""
                  desc: ""
                  log_enabled: 0
                  log_severity: 4
                  log_dest_bmp: 4
                  filter_mode: 0
                  iface_in: 2
                  iface_out: 5
                  mac_src: "00:00:00:00:00:00"
                  ip_src: "d9afab96-0ce0-4dcd-829f-0b9449b4f1f7"
                  ip_dst: "3f1b3ecb-7f96-454a-911a-5062fc3c265d"
                  port_src: ""
                  port_dst: ""
                  action: 1
          - value:
              setting:
                - exist: 1
                  idx: 1
                  enabled: 1
                  name: "Session_Policy_1"
                  uuid: "076e5625-3a29-469a-b826-364acd867a2f"
                  log_severity: 4
                  log_dest_bmp: 4
                  ip_dst: "3f1b3ecb-7f96-454a-911a-5062fc3c265d"
                  port_dst: "e4cc9ad6-f45f-4598-8b58-241df9f9246d"
                  total_tcp: 0
                  concurrent_tcp: 0
                  action: 1
          - category: "SC"
            value: {}
          - category: "DOS"
            value: {}
          - category: "IPS"
            value:
              global:
                enabled: 1
                default_action: 0
                logging: 0
              setting:
                - 1: enable
                - 4: disable

    ProfileRes:
      summary: Profile information response
      value:
        max: 1024
        data:
          profileId: 1
          name: test
          description: test
          deviceInUse:
            refCnt: 1
            refContent:
              - refName: "test"
                refList:
                  - "hostname"
          scheduleInUse:
            refCnt: 3
            refContent:
              - hostname: test
                deviceId: "4b4f1ab2-18ac-483e-aedd-2aaeb2dabd59"
          updatedAt: "2019-02-26T14:10:33:000Z"
          ngfw:
            - category: "L3L7"
              value:
                global:
                  enabled: 1
                  default_action: 0
                  logging: 0
                setting:
                  - exist: 1
                    idx: 2
                    enabled: 0
                    name: ""
                    desc: ""
                    log_enabled: 0
                    log_severity: 4
                    log_dest_bmp: 4
                    filter_mode: 0
                    iface_in: 2
                    iface_out: 5
                    mac_src: "00:00:00:00:00:00"
                    ip_src: "d9afab96-0ce0-4dcd-829f-0b9449b4f1f7"
                    ip_dst: "3f1b3ecb-7f96-454a-911a-5062fc3c265d"
                    port_src: ""
                    port_dst: ""
                    action: 1
            - category: "SC"
              value: {}
            - category: "DOS"
              value: {}
            - category: "IPS"
              value:
                global:
                  enabled: 1
                  default_action: 0
                  logging: 0
                setting:
                  - 1: enable
                  - 4: disable

    ProfileList:
      summary: Profile list
      value:
        max: 1024
        data:
          - profileId: 1
            name: test
            description: test
            deviceInUse:
              refCnt: 1
              refContent:
                - refName: "test"
                  refList:
                    - "hostname"
            scheduleInUse:
              refCnt: 3
              refContent:
                - hostname: test
                  deviceId: "4b4f1ab2-18ac-483e-aedd-2aaeb2dabd59"
            updatedAt: "2019-02-26T14:10:33:000Z"
            ngfw:
              - category: "L3L7"
                value:
                  global:
                    enabled: 1
                    default_action: 0
                    logging: 0
                  setting:
                    - exist: 1
                      idx: 2
                      enabled: 0
                      name: ""
                      desc: ""
                      log_enabled: 0
                      log_severity: 4
                      log_dest_bmp: 4
                      filter_mode: 0
                      iface_in: 2
                      iface_out: 5
                      mac_src: "00:00:00:00:00:00"
                      ip_src: "d9afab96-0ce0-4dcd-829f-0b9449b4f1f7"
                      ip_dst: "3f1b3ecb-7f96-454a-911a-5062fc3c265d"
                      port_src: ""
                      port_dst: ""
                      action: 1
              - category: "SC"
                value: {}
              - category: "DOS"
                value: {}
              - category: "IPS"
                value:
                  setting: []

    ProfileRemove:
      summary: Profile list
      value:
        data:
          - profileIdList:
              - 1

    ProfileCreate:
      summary: create new profile
      value:
        name: test
        description: test
        ngfw:
          - category: "L3L7"
            value:
              global:
                enabled: 1
                default_action: 0
                logging: 0
              setting:
                - exist: 1
                  idx: 2
                  enabled: 0
                  name: ""
                  desc: ""
                  log_enabled: 0
                  log_severity: 4
                  log_dest_bmp: 4
                  filter_mode: 0
                  iface_in: 2
                  iface_out: 5
                  mac_src: "00:00:00:00:00:00"
                  ip_src: "d9afab96-0ce0-4dcd-829f-0b9449b4f1f7"
                  ip_dst: "3f1b3ecb-7f96-454a-911a-5062fc3c265d"
                  port_src: ""
                  port_dst: ""
                  action: 1
          - category: "SC"
            value: {}
          - category: "DOS"
            value: {}
          - category: "IPS"
            value:
              global:
                enabled: 1
                default_action: 0
                logging: 0
              setting:
                janusIpsCmd:
                  ipsAcceptEnable:
                    - 1134391
                    - 1135371
                    - 1136859
                  ipsAcceptDisable: []
                  ipsMonitorEnable:
                    - 4026531851
                    - 1052848
                    - 1059684
                  ipsMonitorDisable: []
                  ipsResetEnable: []
                  ipsResetDisable:
                    - 1132605
                    - 1133189
                    - 1133717

    ProfileUpdate:
      summary: update profile
      value:
        name: test
        description: test
        ngfw:
          - category: "L3L7"
            value:
              global:
                enabled: 1
                default_action: 0
                logging: 0
              setting:
                - exist: 1
                  idx: 2
                  enabled: 0
                  name: ""
                  desc: ""
                  log_enabled: 0
                  log_severity: 4
                  log_dest_bmp: 4
                  filter_mode: 0
                  iface_in: 2
                  iface_out: 5
                  mac_src: "00:00:00:00:00:00"
                  ip_src: "d9afab96-0ce0-4dcd-829f-0b9449b4f1f7"
                  ip_dst: "3f1b3ecb-7f96-454a-911a-5062fc3c265d"
                  port_src: ""
                  port_dst: ""
                  action: 1
          - category: "SC"
            value: {}
          - category: "DOS"
            value: {}
          - category: "IPS"
            value:
              setting:
                janusIpsCmd:
                  ipsAcceptEnable:
                    - 1134391
                    - 1135371
                    - 1136859
                  ipsAcceptDisable: []
                  ipsMonitorEnable:
                    - 4026531851
                    - 1052848
                    - 1059684
                  ipsMonitorDisable: []
                  ipsResetEnable: []
                  ipsResetDisable:
                    - 1132605
                    - 1133189
                    - 1133717
